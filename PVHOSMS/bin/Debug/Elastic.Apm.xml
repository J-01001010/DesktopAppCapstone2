<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Elastic.Apm</name>
    </assembly>
    <members>
        <member name="P:Elastic.Apm.Agent.Tracer">
            <summary>
            The entry point for manual instrumentation. Gets an <see cref="T:Elastic.Apm.Api.ITracer" /> from
            which the currently active transaction and span can be accessed, and enables starting
            or capturing a new transaction.
            </summary>
        </member>
        <member name="M:Elastic.Apm.Agent.AddFilter(System.Func{Elastic.Apm.Api.ITransaction,Elastic.Apm.Api.ITransaction})">
            <summary>
            Adds a filter which gets called before each transaction gets sent to APM Server.
            In the <paramref name="filter" />, you have access to the <see cref="T:Elastic.Apm.Api.ITransaction" />
            instance which gets sent to APM Server and you can modify it. With the return value of the
            <paramref name="filter" />, you can also control if the <see cref="T:Elastic.Apm.Api.ITransaction" />
            should be sent to the server or not. If the <paramref name="filter" />
            returns a non-null <see cref="T:Elastic.Apm.Api.ITransaction" /> instance then it will be sent to the APM Server,
            and if it returns <code>null</code>, the event will be dropped and won't be sent to the APM server.
            </summary>
            <param name="filter">
            The filter that can process the <see cref="T:Elastic.Apm.Api.ITransaction" /> and decide if it should be sent to APM
            Server or not.
            </param>
            <returns>
            <code>true</code> if the filter was added successfully, <code>false</code> otherwise. In case the method
            returns <code>false</code> the filter won't be called.
            </returns>
        </member>
        <member name="M:Elastic.Apm.Agent.AddFilter(System.Func{Elastic.Apm.Api.ISpan,Elastic.Apm.Api.ISpan})">
            <summary>
            Adds a filter which gets called before each span gets sent to APM Server.
            In the <paramref name="filter" />, you have access to the <see cref="T:Elastic.Apm.Api.ISpan" />
            instance which gets sent to APM Server and you can modify it. With the return value of the
            <paramref name="filter" />, you can also control if the <see cref="T:Elastic.Apm.Api.ISpan" />
            should be sent to the server or not. If the <paramref name="filter" />
            returns a non-null <see cref="T:Elastic.Apm.Api.ISpan" /> instance then it will be sent to the APM Server, and
            if it returns <code>null</code>, the event will be dropped and won't be sent to the APM server.
            </summary>
            <param name="filter">
            The filter that can process the <see cref="T:Elastic.Apm.Api.ISpan" /> and decide if it should be sent to APM Server
            or not.
            </param>
            <returns>
            <code>true</code> if the filter was added successfully, <code>false</code> otherwise. In case the method
            returns <code>false</code> the filter won't be called.
            </returns>
        </member>
        <member name="M:Elastic.Apm.Agent.AddFilter(System.Func{Elastic.Apm.Api.IError,Elastic.Apm.Api.IError})">
            <summary>
            Adds a filter which gets called before each error gets sent to APM Server.
            In the <paramref name="filter" />, you have access to the <see cref="T:Elastic.Apm.Api.IError" />
            instance which gets sent to APM Server and you can modify it. With the return value of the
            <paramref name="filter" /> you can also control if the <see cref="T:Elastic.Apm.Api.IError" />
            should be sent to the server or not. If the <paramref name="filter" />
            returns a non-null <see cref="T:Elastic.Apm.Api.IError" /> instance then it will be sent to the APM Server, and
            if it returns <code>null</code>, the event will be dropped and won't be sent to the APM server.
            </summary>
            <param name="filter">
            The filter that can process the <see cref="T:Elastic.Apm.Api.IError" /> and decide if it should be sent to APM
            Server or not.
            </param>
            <returns>
            <code>true</code> if the filter was added successfully, <code>false</code> otherwise. In case the method
            returns <code>false</code> the filter won't be called.
            </returns>
        </member>
        <member name="M:Elastic.Apm.Agent.Subscribe(Elastic.Apm.DiagnosticSource.IDiagnosticsSubscriber[])">
            <summary>
            Sets up multiple <see cref="T:Elastic.Apm.DiagnosticSource.IDiagnosticsSubscriber" />s to start listening to one or more
            <see cref="T:Elastic.Apm.DiagnosticSource.IDiagnosticListener" />s.
            <para />
            If the agent is not enabled, subscribers are not subscribed.
            </summary>
            <param name="subscribers">
            An array of <see cref="T:Elastic.Apm.DiagnosticSource.IDiagnosticsSubscriber" /> that will set up <see cref="T:Elastic.Apm.DiagnosticSource.IDiagnosticListener" /> subscriptions.
            </param>
            <returns>
            A disposable referencing all the subscriptions. Disposing this is not necessary for clean up, only to unsubscribe if
            desired.
            </returns>
        </member>
        <member name="P:Elastic.Apm.AgentComponents.Service">
            <summary>
            Identifies the monitored service. If this remains unset the agent
            automatically populates it based on the entry assembly.
            </summary>
            <value>The service.</value>
        </member>
        <member name="T:Elastic.Apm.Api.CapturedException">
            <summary>
            Information about the original error
            </summary>
        </member>
        <member name="P:Elastic.Apm.Api.CapturedException.Cause">
            <summary>
            A collection of error exceptions representing chained exceptions.
            The chain starts with the outermost exception, followed by its cause, and so on.
            </summary>
        </member>
        <member name="P:Elastic.Apm.Api.CapturedException.Code">
            <summary>
            Code that is set when the error happened, e.g. database error code.
            </summary>
        </member>
        <member name="P:Elastic.Apm.Api.CapturedException.Handled">
            <summary>
            Indicates whether the error was caught in the code or not.
            </summary>
        </member>
        <member name="P:Elastic.Apm.Api.CapturedException.Message">
            <summary>
            The originally captured error message.
            </summary>
        </member>
        <member name="P:Elastic.Apm.Api.CapturedException.StackTrace">
            <summary>
            Stacktrace information of the captured exception.
            </summary>
        </member>
        <member name="P:Elastic.Apm.Api.CapturedException.Type">
            <summary>
            The type of the exception
            </summary>
        </member>
        <member name="P:Elastic.Apm.Api.CapturedStackFrame.AbsPath">
            <summary>
            The absolute path of the file involved in the stack frame.
            </summary>
        </member>
        <member name="P:Elastic.Apm.Api.CapturedStackFrame.LineNo">
            <summary>
            The line number of code part of the stack frame.
            Zero value means the actual line number could not have been obtained.
            </summary>
        </member>
        <member name="T:Elastic.Apm.Api.Cloud">
            <summary>
            Fields related to the cloud or infrastructure the events are coming from.
            </summary>
        </member>
        <member name="P:Elastic.Apm.Api.Cloud.Provider">
            <summary>
            The cloud provider, for example, aws, gcp, azure.
            </summary>
        </member>
        <member name="P:Elastic.Apm.Api.Cloud.Service">
            <summary>
            The service that is monitored on cloud.
            </summary>
        </member>
        <member name="T:Elastic.Apm.Api.CloudService">
            <summary>
            The service that is monitored on cloud.
            </summary>
        </member>
        <member name="P:Elastic.Apm.Api.CloudService.Name">
            <summary>
            Name of the cloud service, intended to distinguish services running on different
            platforms within a provider, eg AWS EC2 vs Lambda, GCP GCE vs App Engine, Azure VM vs App Server.
            </summary>
        </member>
        <member name="P:Elastic.Apm.Api.CloudProject.Name">
            <summary>
            Cloud project name
            </summary>
        </member>
        <member name="P:Elastic.Apm.Api.CloudProject.Id">
            <summary>
            Cloud project id
            </summary>
        </member>
        <member name="T:Elastic.Apm.Api.CloudInstance">
            <summary>
            An instance in a cloud provider
            </summary>
        </member>
        <member name="P:Elastic.Apm.Api.CloudInstance.Id">
            <summary>
            Instance ID of the host machine.
            </summary>
        </member>
        <member name="P:Elastic.Apm.Api.CloudInstance.Name">
            <summary>
            Instance name of the host machine.
            </summary>
        </member>
        <member name="P:Elastic.Apm.Api.CloudAccount.Id">
            <summary>
            The cloud account or organization id used to identify different entities in a multi-tenant environment.
            <para/>
            <para/>
            Examples: AWS account id, Google Cloud ORG Id, or other unique identifier.
            </summary>
        </member>
        <member name="P:Elastic.Apm.Api.CloudAccount.Name">
            <summary>
            The cloud account name
            </summary>
        </member>
        <member name="P:Elastic.Apm.Api.CloudMachine.Type">
            <summary>
            Machine type of the host machine.
            </summary>
        </member>
        <member name="T:Elastic.Apm.Api.CloudContext">
            <summary>
            Data related to the cloud or infrastructure the events are coming from.
            </summary>
        </member>
        <member name="P:Elastic.Apm.Api.CloudOrigin.Account">
            <summary>
            The cloud account or organization id used to identify different entities in a multi-tenant environment.
            </summary>
        </member>
        <member name="P:Elastic.Apm.Api.CloudOrigin.Id">
            <summary>
            The cloud account or organization id used to identify different entities in a multi-tenant environment.
            </summary>
        </member>
        <member name="T:Elastic.Apm.Api.Constraints.MaxLengthAttribute">
            <summary>
            Specifies the maximum length of string data allowed in a property, based on the APM server specification.
            </summary>
        </member>
        <member name="P:Elastic.Apm.Api.Constraints.MaxLengthAttribute.Length">
            <summary>
            The maximum length.
            </summary>
        </member>
        <member name="M:Elastic.Apm.Api.Constraints.MaxLengthAttribute.#ctor">
            <summary>
            Initializes a new instance of <see cref="T:Elastic.Apm.Api.Constraints.MaxLengthAttribute"/>
            with a maximum length of <see cref="F:Elastic.Apm.Consts.PropertyMaxLength"/>
            </summary>
        </member>
        <member name="M:Elastic.Apm.Api.Constraints.MaxLengthAttribute.#ctor(System.Int32)">
            <summary>
            Initializes a new instance of <see cref="T:Elastic.Apm.Api.Constraints.MaxLengthAttribute"/> with a given maximum length
            </summary>
        </member>
        <member name="T:Elastic.Apm.Api.Constraints.RequiredAttribute">
            <summary>
            Specifies that a data field value is required.
            </summary>
        </member>
        <member name="P:Elastic.Apm.Api.Context.Labels">
            <summary>
            <seealso cref="M:Elastic.Apm.Api.Context.ShouldSerializeLabels" />
            </summary>
        </member>
        <member name="P:Elastic.Apm.Api.Context.Message">
            <summary>
            Holds details related to message receiving and publishing if the captured event integrates with a messaging system
            </summary>
        </member>
        <member name="P:Elastic.Apm.Api.Context.Request">
            <summary>
            If a log record was generated as a result of a http request, the http interface can be used to collect this
            information.
            This property is by default null! You have to assign a <see cref="P:Elastic.Apm.Api.Context.Request" /> instance to this property in order to use
            it.
            </summary>
        </member>
        <member name="P:Elastic.Apm.Api.Context.Response">
            <summary>
            If a log record was generated as a result of a http request, the http interface can be used to collect this
            information.
            This property is by default null! You have to assign a <see cref="P:Elastic.Apm.Api.Context.Response" /> instance to this property in order to
            use
            it.
            </summary>
        </member>
        <member name="P:Elastic.Apm.Api.Context.Service">
            <summary>
            Service related information can be sent per event. Provided information will override the more generic information from
            metadata, non provided fields will be set according to the metadata information.
            </summary>
        </member>
        <member name="M:Elastic.Apm.Api.Context.ShouldSerializeLabels">
            <summary>
            Method to conditionally serialize <see cref="F:Elastic.Apm.Api.Context.InternalLabels" /> - serialize only when there is at least one label.
            See
            <a href="https://www.newtonsoft.com/json/help/html/ConditionalProperties.htm">the relevant Json.NET Documentation</a>
            </summary>
        </member>
        <member name="T:Elastic.Apm.Api.Database">
            <summary>
            An object containing contextual data for database spans.
            It can be attached to an <see cref="T:Elastic.Apm.Api.ISpan" /> through <see cref="P:Elastic.Apm.Api.ISpan.Context" />
            </summary>
        </member>
        <member name="T:Elastic.Apm.Api.Destination">
            <summary>
            Public API to set properties that are stored under <c>span.destination</c> in
            <a href="https://www.elastic.co/guide/en/apm/get-started/current/transaction-spans.html">the APM data model</a>.
            </summary>
        </member>
        <member name="P:Elastic.Apm.Api.Destination.Address">
            <summary>
            Either an IP (v4 or v6) or a host/domain name.
            See <a href="https://github.com/elastic/apm/issues/115#issuecomment-555814374">this issue</a> for more information.
            If this property is not set via this public API it will be deduced from other parts of <see cref="T:Elastic.Apm.Api.SpanContext" />
            (for example <see cref="P:Elastic.Apm.Api.SpanContext.Http" /> or <see cref="P:Elastic.Apm.Api.SpanContext.Db" />).
            Explicitly setting this property to <c>null</c> will prohibit this automatic deduction.
            </summary>
        </member>
        <member name="P:Elastic.Apm.Api.Destination.Port">
            <summary>
            Port number - it should not be omitted even if it's the default port number for the corresponding protocol.
            See <a href="https://github.com/elastic/apm/issues/115#issuecomment-555814374">this issue</a> for more information.
            If this property is not set via this public API it will be deduced from other parts of <see cref="T:Elastic.Apm.Api.SpanContext" />
            (for example <see cref="P:Elastic.Apm.Api.SpanContext.Http" /> or <see cref="P:Elastic.Apm.Api.SpanContext.Db" />).
            Explicitly setting this property to <c>null</c> will prohibit this automatic deduction.
            </summary>
        </member>
        <member name="P:Elastic.Apm.Api.Destination.Service">
            <summary>
            Destination service context.
            <see cref="T:Elastic.Apm.Api.Destination.DestinationService" />
            </summary>
        </member>
        <member name="T:Elastic.Apm.Api.Destination.DestinationService">
            <summary>
            Destination service context.
            This represents the logical destination of a span, in order to discover the unique connections between services.
            </summary>
        </member>
        <member name="P:Elastic.Apm.Api.Destination.DestinationService.Name">
            <summary>
            Identifier for the destination service (e.g. 'http://elastic.co', 'elasticsearch', 'rabbitmq')"
            </summary>
        </member>
        <member name="P:Elastic.Apm.Api.Destination.DestinationService.Resource">
            <summary>
            Identifier for the destination service resource being operated on (e.g. 'http://elastic.co:80', 'elasticsearch',
            'rabbitmq/queue_name')
            </summary>
        </member>
        <member name="P:Elastic.Apm.Api.Destination.DestinationService.Type">
            <summary>
            Type of the destination service (e.g. 'db', 'elasticsearch'). Should typically be the same as span.type.
            </summary>
        </member>
        <member name="T:Elastic.Apm.Api.Destination.Optional`1">
            <summary>
            The goal is to allow public API user to prohibit automatic deduction of any of  `context.destination` properties.
            To achieve that we need a way to distinguish between `null` as the initial value
            (meaning public API user is okay with us automatically deducing it) and `null` explicitly set via public API
            (meaning the user doesn't want us to automatically deduce it).
            </summary>
        </member>
        <member name="T:Elastic.Apm.Api.DistributedTracingData">
            <summary>
            Encapsulates distributed tracing data passed from the caller to the callee in order to correlate calls between them.
            Its purpose is similar to that of traceparent and tracestate headers described in the
            <a href="https://www.w3.org/TR/trace-context/">Trace Context specification</a>
            </summary>
            <example>
            See sample/ApiSamples/Program.cs for an example on how to manually pass distributed tracing data between the caller
            and the callee
            </example>
        </member>
        <member name="M:Elastic.Apm.Api.DistributedTracingData.SerializeToString">
            <summary>
            Serializes this instance to a string.
            This method should be used at the caller side and the return value should be passed to the (possibly remote) callee
            side.
            <see cref="M:Elastic.Apm.Api.DistributedTracingData.TryDeserializeFromString(System.String)" /> should be used to deserialize the instance at the callee side.
            </summary>
            <returns>
            String containing the instance in serialized form.
            </returns>
        </member>
        <member name="M:Elastic.Apm.Api.DistributedTracingData.TryDeserializeFromString(System.String)">
            <summary>
            Deserializes an instance from a string.
            This method should be used at the callee side and the deserialized instance can be passed to
            <see cref="M:Elastic.Apm.Api.ITracer.StartTransaction(System.String,System.String,Elastic.Apm.Api.DistributedTracingData,System.Boolean,System.Collections.Generic.IEnumerable{Elastic.Apm.Api.SpanLink})" />.
            </summary>
            <param name="serialized">should be a return value from a call to <see cref="M:Elastic.Apm.Api.DistributedTracingData.SerializeToString" />.</param>
            <returns>
            Instance deserialized from <paramref name="serialized" />.
            </returns>
        </member>
        <member name="T:Elastic.Apm.Api.Http">
            <summary>
            An object containing contextual data of the related http request.
            It can be attached to an <see cref="T:Elastic.Apm.Api.ISpan" /> through <see cref="P:Elastic.Apm.Api.ISpan.Context" />
            </summary>
        </member>
        <member name="P:Elastic.Apm.Api.Http.OriginalUrl">
            <summary>
            The Url in its original form as it was passed to the Agent, without sanitization or trimming.
            </summary>
        </member>
        <member name="P:Elastic.Apm.Api.Http.Url">
            <summary>
            Sets the URL of the HTTP request.
            The setter will parse and sanitize the URL and filter out user name and password from the URL in case it contains
            those.
            In case you have an <see cref="T:System.Uri" /> instance, consider using the <see cref="M:Elastic.Apm.Api.Http.SetUrl(System.Uri)" /> method on this class.
            </summary>
        </member>
        <member name="M:Elastic.Apm.Api.Http.SetUrl(System.Uri)">
            <summary>
            Sets the <see cref="P:Elastic.Apm.Api.Http.Url" /> string property directly with a <see cref="T:System.Uri" /> instance.
            The advantage of using this method is that the sanitization of the <paramref name="uri" />
            is allocation free in case there is nothing to sanitize in the <paramref name="uri" />.
            </summary>
            <param name="uri"></param>
        </member>
        <member name="T:Elastic.Apm.Api.IError">
            <summary>
            Represents an error which was captured by the agent.
            </summary>
        </member>
        <member name="P:Elastic.Apm.Api.IError.Culprit">
            <summary>
            The culprit that caused this error.
            </summary>
        </member>
        <member name="P:Elastic.Apm.Api.IError.Exception">
            <summary>
            In case the error instance was caused by an exception, this property contains all the
            details about the exception.
            </summary>
        </member>
        <member name="P:Elastic.Apm.Api.IError.Id">
            <summary>
            The Id of the error. This unequally identifies the given error.
            </summary>
        </member>
        <member name="P:Elastic.Apm.Api.IError.Log">
            <summary>
            Log holds additional information added when the error is logged.
            </summary>
        </member>
        <member name="P:Elastic.Apm.Api.IError.ParentId">
            <summary>
            The Parent id of the error
            </summary>
        </member>
        <member name="P:Elastic.Apm.Api.IError.TraceId">
            <summary>
            The id of the trace where this error happened
            </summary>
        </member>
        <member name="P:Elastic.Apm.Api.IError.TransactionId">
            <summary>
            The id of the transaction where this error happened
            </summary>
        </member>
        <member name="T:Elastic.Apm.Api.ErrorLog">
            <summary>
            Represents a log event which is captured as part of an APM error.
            </summary>
        </member>
        <member name="P:Elastic.Apm.Api.ErrorLog.Level">
            <summary>
            The severity of the record.
            </summary>
        </member>
        <member name="P:Elastic.Apm.Api.ErrorLog.LoggerName">
            <summary>
            The name of the logger instance used.
            </summary>
        </member>
        <member name="P:Elastic.Apm.Api.ErrorLog.Message">
            <summary>
            The additionally logged error message.
            </summary>
        </member>
        <member name="P:Elastic.Apm.Api.ErrorLog.ParamMessage">
            <summary>
            A parameterized message. E.g. 'Could not connect to %s'. The property message is still required, and should be equal
            to the param_message, but with placeholders replaced. In some situations the param_message is used to group errors
            together.
            The string is not interpreted, so feel free to use whichever placeholders makes sense in the client language."
            </summary>
        </member>
        <member name="T:Elastic.Apm.Api.IExecutionSegment">
            <summary>
            A base interface that encapsulates basic functionality of a piece of work that the agent can measure (e.g.
            <see cref="T:Elastic.Apm.Api.ISpan" /> and <see cref="T:Elastic.Apm.Api.ITransaction" />)
            </summary>
        </member>
        <member name="P:Elastic.Apm.Api.IExecutionSegment.Duration">
            <summary>
            The duration of the item.
            If it's not set (its HasValue property is false) then the value
            is automatically calculated when <see cref="M:Elastic.Apm.Api.IExecutionSegment.End" /> is called.
            </summary>
            <value>The duration.</value>
        </member>
        <member name="P:Elastic.Apm.Api.IExecutionSegment.Id">
            <summary>
            The id of the item.
            </summary>
        </member>
        <member name="P:Elastic.Apm.Api.IExecutionSegment.IsSampled">
            <summary>
            It's true if and only if this segment is sampled.
            </summary>
        </member>
        <member name="P:Elastic.Apm.Api.IExecutionSegment.Labels">
            <summary>
            A flat mapping of user-defined labels with string values.
            Dots (<code>.</code>) in the keys are not allowed. In case you have a <code>.</code> in your label key, it will be
            replaced by <code>_</code>.
            For example <code>foo.bar</code> will be stored as <code>foo_bar</code> in Elasticsearch.
            Note: values added through the <see cref="M:Elastic.Apm.Api.IExecutionSegment.SetLabel(System.String,System.String)" /> method won't be visible through this property.
            </summary>
            <exception cref="T:System.ArgumentException"><c>null</c> as key is not allowed.</exception>
        </member>
        <member name="P:Elastic.Apm.Api.IExecutionSegment.Name">
            <summary>
            The name of the item.
            </summary>
        </member>
        <member name="P:Elastic.Apm.Api.IExecutionSegment.Outcome">
            <summary>
            The outcome of the IExecutionSegment: success, failure, or unknown.
            </summary>
        </member>
        <member name="P:Elastic.Apm.Api.IExecutionSegment.OutgoingDistributedTracingData">
            <summary>
            Distributed tracing data for this segment as the distributed tracing caller.
            </summary>
        </member>
        <member name="P:Elastic.Apm.Api.IExecutionSegment.ParentId">
            <summary>
            Hex encoded 64 random bits ID of the parent transaction or span.
            </summary>
        </member>
        <member name="P:Elastic.Apm.Api.IExecutionSegment.TraceId">
            <summary>
            Hex encoded 128 random bits ID of the correlated trace.
            </summary>
        </member>
        <member name="M:Elastic.Apm.Api.IExecutionSegment.CaptureError(System.String,System.String,System.Diagnostics.StackFrame[],System.String,System.Collections.Generic.Dictionary{System.String,Elastic.Apm.Api.Label})">
            <summary>
            Captures a custom error and reports it to the APM server.
            </summary>
            <param name="message">The error message.</param>
            <param name="culprit">The culprit of the error.</param>
            <param name="frames">The stack trace when the error occured.</param>
            <param name="parentId">
            The parent ID that is attached to the error. In case it's null the parent
            will be automatically set to the current instance
            </param>
            <param name="labels">Labels that will be added to the captured error</param>
        </member>
        <member name="M:Elastic.Apm.Api.IExecutionSegment.CaptureException(System.Exception,System.String,System.Boolean,System.String,System.Collections.Generic.Dictionary{System.String,Elastic.Apm.Api.Label})">
            <summary>
            Captures an exception and reports it to the APM server.
            </summary>
            <param name="exception">The exception to capture.</param>
            <param name="culprit">The value of this parameter is shown as 'Culprit' on the APM UI.</param>
            <param name="isHandled">Indicates whether the exception is handled or not.</param>
            <param name="parentId">
            The parent ID that is attached to the error. In case it's null the parent
            will be automatically set to the current instance
            </param>
            <param name="labels">Labels that will be added to the captured error</param>
        </member>
        <member name="M:Elastic.Apm.Api.IExecutionSegment.CaptureErrorLog(Elastic.Apm.Api.ErrorLog,System.String,System.Exception,System.Collections.Generic.Dictionary{System.String,Elastic.Apm.Api.Label})">
            <summary>
            Captures a log event as an APM error.
            </summary>
            <param name="errorLog"> The log event itself </param>
            <param name="parentId"> ParentId pointing to the parent transaction or span. </param>
            <param name="exception"> Exception which was captured as part of the log. </param>
            <param name="labels">Labels that will be added to the captured error</param>
        </member>
        <member name="M:Elastic.Apm.Api.IExecutionSegment.CaptureSpan(System.String,System.String,System.Action{Elastic.Apm.Api.ISpan},System.String,System.String,System.Boolean,System.Collections.Generic.IEnumerable{Elastic.Apm.Api.SpanLink})">
            <summary>
            This is a convenient method which starts and ends a span on the given execution segment and captures unhandled
            exceptions
            and schedules it to be reported to the APM Server.
            The created span will be a child span of this execution segment.
            </summary>
            <param name="name">The name of the span.</param>
            <param name="type">The type of the span.</param>
            <param name="capturedAction">
            The <see cref="T:System.Action`1" /> that points to the code that you want to capture as a span.
            The <see cref="T:Elastic.Apm.Api.ISpan" /> parameter gives you access to the span which is created by this method.
            </param>
            <param name="subType">The subtype of the span.</param>
            <param name="action">The action of the span.</param>
            <param name="links">Contains a list of <see cref="T:Elastic.Apm.Api.SpanLink"/> which points to spans associated with the one this method creates.</param>
            <param name="isExitSpan">Indicates if this span is an exit span.</param>
        </member>
        <member name="M:Elastic.Apm.Api.IExecutionSegment.CaptureSpan(System.String,System.String,System.Action,System.String,System.String,System.Boolean,System.Collections.Generic.IEnumerable{Elastic.Apm.Api.SpanLink})">
            <summary>
            This is a convenient method which starts and ends a span on the given execution segment and captures unhandled
            exceptions
            and schedules it to be reported to the APM Server.
            The created span will be a child span of this execution segment.
            </summary>
            <param name="name">The name of the span.</param>
            <param name="type">The type of the span.</param>
            <param name="capturedAction">The <see cref="T:System.Action" /> that points to the code that you want to capture as a span.</param>
            <param name="subType">The subtype of the span.</param>
            <param name="action">The action of the span.</param>
            <param name="links">Contains a list of <see cref="T:Elastic.Apm.Api.SpanLink"/> which points to spans associated with the one this method creates.</param>
            <param name="isExitSpan">Indicates if this span is an exit span.</param>
        </member>
        <member name="M:Elastic.Apm.Api.IExecutionSegment.CaptureSpan``1(System.String,System.String,System.Func{Elastic.Apm.Api.ISpan,``0},System.String,System.String,System.Boolean,System.Collections.Generic.IEnumerable{Elastic.Apm.Api.SpanLink})">
            <summary>
            This is a convenient method which starts and ends a span on the given execution segment and captures unhandled
            exceptions
            and schedules it to be reported to the APM Server.
            The created span will be a child span of this execution segment.
            </summary>
            <param name="name">The name of the span.</param>
            <param name="type">The type of the span.</param>
            <param name="func">
            The <see cref="T:System.Func`2" /> that points to the code with a return value that you want to capture as a span.
            The <see cref="T:Elastic.Apm.Api.ISpan" /> parameter gives you access to the span which is created by this method.
            </param>
            <param name="subType">The subtype of the span.</param>
            <param name="action">The action of the span.</param>
            <typeparam name="T">The return type of the code that you want to capture as span.</typeparam>
            <param name="isExitSpan">Indicates if this span is an exit span.</param>
            <param name="links">Contains a list of <see cref="T:Elastic.Apm.Api.SpanLink"/> which points to spans associated with the one this method creates.</param>
            <returns>
            The result of the <paramref name="func" />.
            </returns>
        </member>
        <member name="M:Elastic.Apm.Api.IExecutionSegment.CaptureSpan``1(System.String,System.String,System.Func{``0},System.String,System.String,System.Boolean,System.Collections.Generic.IEnumerable{Elastic.Apm.Api.SpanLink})">
            <summary>
            This is a convenient method which starts and ends a span on the given execution segment and captures unhandled
            exceptions
            and schedules it to be reported to the APM Server.
            The created span will be a child span of this execution segment.
            </summary>
            <param name="name">The name of the span.</param>
            <param name="type">The type of the span.</param>
            <param name="func">
            The <see cref="T:System.Func`1" /> that points to the code with a return value that you want to capture as a
            span.
            </param>
            <param name="subType">The subtype of the span.</param>
            <param name="action">The action of the span.</param>
            <typeparam name="T">The return type of the code that you want to capture as span.</typeparam>
            <param name="isExitSpan">Indicates if this span is an exit span.</param>
            <param name="links">Contains a list of <see cref="T:Elastic.Apm.Api.SpanLink"/> which points to spans associated with the one this method creates.</param>
            <returns>
            The result of the <paramref name="func" />.
            </returns>
        </member>
        <member name="M:Elastic.Apm.Api.IExecutionSegment.CaptureSpan(System.String,System.String,System.Func{System.Threading.Tasks.Task},System.String,System.String,System.Boolean,System.Collections.Generic.IEnumerable{Elastic.Apm.Api.SpanLink})">
            <summary>
            This is a convenient method which starts and ends a span on the given execution segment and captures unhandled
            exceptions
            and schedules it to be reported to the APM Server.
            The created span will be a child span of this execution segment.
            </summary>
            <param name="name">The name of the span.</param>
            <param name="type">The type of the span.</param>
            <param name="func">The <see cref="T:System.Func`1" /> that points to the async code that you want to capture as a span.</param>
            <param name="subType">The subtype of the span.</param>
            <param name="action">The action of the span.</param>
            <param name="isExitSpan">Indicates if this span is an exit span.</param>
            <param name="links">Contains a list of <see cref="T:Elastic.Apm.Api.SpanLink"/> which points to spans associated with the one this method creates.</param>
            <returns>The <see cref="T:System.Threading.Tasks.Task" /> that you can await on.</returns>
        </member>
        <member name="M:Elastic.Apm.Api.IExecutionSegment.CaptureSpan(System.String,System.String,System.Func{Elastic.Apm.Api.ISpan,System.Threading.Tasks.Task},System.String,System.String,System.Boolean,System.Collections.Generic.IEnumerable{Elastic.Apm.Api.SpanLink})">
            <summary>
            This is a convenient method which starts and ends a span on the given execution segment and captures unhandled
            exceptions
            and schedules it to be reported to the APM Server.
            The created span will be a child span of this execution segment.
            </summary>
            <param name="name">The name of the span.</param>
            <param name="type">The type of the span.</param>
            <param name="func">
            The <see cref="T:System.Func`2" /> that points to the async code that you want to capture as a span.
            The <see cref="T:Elastic.Apm.Api.ISpan" /> parameter gives you access to the span which is created by this method.
            </param>
            <param name="subType">The subtype of the span.</param>
            <param name="action">The action of the span.</param>
            <param name="isExitSpan">Indicates if this span is an exit span.</param>
            <param name="links">Contains a list of <see cref="T:Elastic.Apm.Api.SpanLink"/> which points to spans associated with the one this method creates.</param>
            <returns>The <see cref="T:System.Threading.Tasks.Task" /> that you can await on.</returns>
        </member>
        <member name="M:Elastic.Apm.Api.IExecutionSegment.CaptureSpan``1(System.String,System.String,System.Func{System.Threading.Tasks.Task{``0}},System.String,System.String,System.Boolean,System.Collections.Generic.IEnumerable{Elastic.Apm.Api.SpanLink})">
            <summary>
            This is a convenient method which starts and ends a span on the given execution segment and captures unhandled
            exceptions
            and schedules it to be reported to the APM Server.
            The created span will be a child span of this execution segment.
            </summary>
            <param name="name">The name of the span.</param>
            <param name="type">The type of the span.</param>
            <param name="func">
            The <see cref="T:System.Func`1" /> that points to the async code with a return value that you want to
            capture as a span.
            </param>
            <param name="subType">The subtype of the span.</param>
            <param name="action">The action of the span.</param>
            <param name="isExitSpan">Indicates if this span is an exit span.</param>
            <param name="links">Contains a list of <see cref="T:Elastic.Apm.Api.SpanLink"/> which points to spans associated with the one this method creates.</param>
            <typeparam name="T">The return type of the <see cref="T:System.Threading.Tasks.Task`1" /> that you want to capture as span.</typeparam>
            <returns>The <see cref="T:System.Threading.Tasks.Task`1" /> that you can await on.</returns>
        </member>
        <member name="M:Elastic.Apm.Api.IExecutionSegment.CaptureSpan``1(System.String,System.String,System.Func{Elastic.Apm.Api.ISpan,System.Threading.Tasks.Task{``0}},System.String,System.String,System.Boolean,System.Collections.Generic.IEnumerable{Elastic.Apm.Api.SpanLink})">
            <summary>
            This is a convenient method which starts and ends a span on the given execution segment and captures unhandled
            exceptions
            and schedules it to be reported to the APM Server.
            The created span will be a child span of this execution segment.
            </summary>
            <param name="name">The name of the span.</param>
            <param name="type">The type of the span.</param>
            <param name="func">
            The <see cref="T:System.Func`2" /> that points to the async code with a return value that you want to capture as a
            span.
            The <see cref="T:Elastic.Apm.Api.ISpan" /> parameter gives you access to the span which is created by this method.
            </param>
            <param name="subType">The subtype of the span.</param>
            <param name="action">The action of the span.</param>
            <param name="isExitSpan">Indicates if this span is an exit span.</param>
            <param name="links">Contains a list of <see cref="T:Elastic.Apm.Api.SpanLink"/> which points to spans associated with the one this method creates.</param>
            <typeparam name="T">The return type of the <see cref="T:System.Threading.Tasks.Task`1" /> that you want to capture as span.</typeparam>
            <returns>The <see cref="T:System.Threading.Tasks.Task`1" /> that you can await on.</returns>
        </member>
        <member name="M:Elastic.Apm.Api.IExecutionSegment.End">
            <summary>
            Ends the item and schedules it to be reported to the APM Server.
            It is illegal to call any methods on a span instance which has already ended.
            </summary>
        </member>
        <member name="M:Elastic.Apm.Api.IExecutionSegment.SetLabel(System.String,System.String)">
            <summary>
            Labels are used to add indexed information to transactions, spans, and errors. Indexed means the data is searchable and
            aggregatable in Elasticsearch. Multiple labels can be defined with different key-value pairs.
            Note: Values added through this method won't be visible through <see cref="P:Elastic.Apm.Api.IExecutionSegment.Labels" />.
            <param name="key">
            <inheritdoc cref="M:Elastic.Apm.Api.IExecutionSegment.SetLabel(System.String,System.Boolean)" />
            </param>
            <param name="value">
            <inheritdoc cref="M:Elastic.Apm.Api.IExecutionSegment.SetLabel(System.String,System.Boolean)" />
            </param>
            </summary>
        </member>
        <member name="M:Elastic.Apm.Api.IExecutionSegment.SetLabel(System.String,System.Boolean)">
            <summary>
            Labels are used to add indexed information to transactions, spans, and errors. Indexed means the data is searchable and
            aggregatable in Elasticsearch. Multiple labels can be defined with different key-value pairs.
            </summary>
            <param name="key">
            The key of the label. If the key contains any special characters (., *, "), they will be replaced
            with underscores.
            </param>
            <param name="value">The value of the label</param>
        </member>
        <member name="M:Elastic.Apm.Api.IExecutionSegment.SetLabel(System.String,System.Double)">
            <summary>
            <inheritdoc cref="M:Elastic.Apm.Api.IExecutionSegment.SetLabel(System.String,System.Boolean)" />
            </summary>
            <param name="key">
            <inheritdoc cref="M:Elastic.Apm.Api.IExecutionSegment.SetLabel(System.String,System.Boolean)" />
            </param>
            <param name="value">
            <inheritdoc cref="M:Elastic.Apm.Api.IExecutionSegment.SetLabel(System.String,System.Boolean)" />
            </param>
        </member>
        <member name="M:Elastic.Apm.Api.IExecutionSegment.SetLabel(System.String,System.Int32)">
            <summary>
            <inheritdoc cref="M:Elastic.Apm.Api.IExecutionSegment.SetLabel(System.String,System.Boolean)" />
            </summary>
            <param name="key">
            <inheritdoc cref="M:Elastic.Apm.Api.IExecutionSegment.SetLabel(System.String,System.Boolean)" />
            </param>
            <param name="value">
            <inheritdoc cref="M:Elastic.Apm.Api.IExecutionSegment.SetLabel(System.String,System.Boolean)" />
            </param>
        </member>
        <member name="M:Elastic.Apm.Api.IExecutionSegment.SetLabel(System.String,System.Int64)">
            <summary>
            <inheritdoc cref="M:Elastic.Apm.Api.IExecutionSegment.SetLabel(System.String,System.Boolean)" />
            </summary>
            <param name="key">
            <inheritdoc cref="M:Elastic.Apm.Api.IExecutionSegment.SetLabel(System.String,System.Boolean)" />
            </param>
            <param name="value">
            <inheritdoc cref="M:Elastic.Apm.Api.IExecutionSegment.SetLabel(System.String,System.Boolean)" />
            </param>
        </member>
        <member name="M:Elastic.Apm.Api.IExecutionSegment.SetLabel(System.String,System.Decimal)">
            <summary>
            <inheritdoc cref="M:Elastic.Apm.Api.IExecutionSegment.SetLabel(System.String,System.Boolean)" />
            </summary>
            <param name="key">
            <inheritdoc cref="M:Elastic.Apm.Api.IExecutionSegment.SetLabel(System.String,System.Boolean)" />
            </param>
            <param name="value">
            <inheritdoc cref="M:Elastic.Apm.Api.IExecutionSegment.SetLabel(System.String,System.Boolean)" />
            </param>
        </member>
        <member name="M:Elastic.Apm.Api.IExecutionSegment.StartSpan(System.String,System.String,System.String,System.String,System.Boolean,System.Collections.Generic.IEnumerable{Elastic.Apm.Api.SpanLink})">
            <summary>
            Start and return a new custom span as a child of this execution segment.
            </summary>
            <param name="name">The name of the span.</param>
            <param name="type">The type of the span.</param>
            <param name="subType">The subtype of the span.</param>
            <param name="action">The action of the span.</param>
            <param name="isExitSpan">Indicates if this span is an exit span.</param>
            <param name="links">Contains a list of <see cref="T:Elastic.Apm.Api.SpanLink"/> which points to spans associated with the one this method creates.</param>
            <returns>Returns the newly created and active span.</returns>
        </member>
        <member name="M:Elastic.Apm.Api.IExecutionSegment.TryGetLabel``1(System.String,``0@)">
            <summary>
            Returns the value of a label.
            </summary>
            <typeparam name="T">The type of the value for the label that you would like to read.</typeparam>
            <param name="key">The key of the label that you would like to read.</param>
            <param name="value">The out parameter to receive the value of the label.</param>
            <returns>
            <code>true</code> if the label was witten into <paramref name="value" />, <code>false</code> otherwise, which
            can be because the label does not exit or <typeparamref name="T" /> does not match the type of the given label.
            </returns>
        </member>
        <member name="T:Elastic.Apm.Api.IMetricSet">
            <summary>
            Data captured by the agent representing a metric occurring in a monitored service
            </summary>
        </member>
        <member name="P:Elastic.Apm.Api.IMetricSet.Samples">
            <summary>
            List of captured metrics as key - value pairs
            </summary>
        </member>
        <member name="P:Elastic.Apm.Api.IMetricSet.Timestamp">
            <summary>
            Number of milliseconds in unix time
            </summary>
        </member>
        <member name="P:Elastic.Apm.Api.IMetricSet.Transaction">
            <summary>
            Selected information about the correlated transaction
            </summary>
        </member>
        <member name="P:Elastic.Apm.Api.IMetricSet.Span">
            <summary>
            Selected information about the correlated span
            </summary>
        </member>
        <member name="T:Elastic.Apm.Api.ISpan">
            <summary>
            An event captured by an agent occurring in a monitored service
            </summary>
        </member>
        <member name="P:Elastic.Apm.Api.ISpan.Action">
            <summary>
            The action of the span.
            Examples: 'query'.
            </summary>
        </member>
        <member name="P:Elastic.Apm.Api.ISpan.Context">
            <summary>
            Any other arbitrary data captured by the agent, optionally provided by the user.
            </summary>
        </member>
        <member name="P:Elastic.Apm.Api.ISpan.IsExitSpan">
            <summary>
            Indicates that this span is an exit span.
            </summary>
        </member>
        <member name="P:Elastic.Apm.Api.ISpan.StackTrace">
            <summary>
            The stack trace which was captured for the given span.
            </summary>
        </member>
        <member name="P:Elastic.Apm.Api.ISpan.Subtype">
            <summary>
            The subtype of the span.
            Examples: 'http', 'mssql'.
            </summary>
        </member>
        <member name="P:Elastic.Apm.Api.ISpan.Timestamp">
            <summary>
            The timestamp of the span
            </summary>
        </member>
        <member name="P:Elastic.Apm.Api.ISpan.TransactionId">
            <summary>
            Hex encoded 64 random bits ID of the correlated transaction.
            </summary>
        </member>
        <member name="P:Elastic.Apm.Api.ISpan.Type">
            <summary>
            The type of the span.
            Examples: 'db', 'external'.
            </summary>
        </member>
        <member name="P:Elastic.Apm.Api.ITracer.CurrentSpan">
            <summary>
            Gets the currently active span.
            Returns <c>null</c> if there's no currently active span.
            </summary>
        </member>
        <member name="P:Elastic.Apm.Api.ITracer.CurrentTransaction">
            <summary>
            Gets the currently active transaction.
            Returns <c>null</c> if there's no currently active transaction.
            </summary>
        </member>
        <member name="M:Elastic.Apm.Api.ITracer.CaptureError(System.String,System.String,System.Diagnostics.StackFrame[],System.String,System.Collections.Generic.Dictionary{System.String,Elastic.Apm.Api.Label})">
            <summary>
            Captures a custom error and reports it to the APM server.
            </summary>
            <param name="message">The error message.</param>
            <param name="culprit">The culprit of the error.</param>
            <param name="frames">The stack trace when the error occured.</param>
            <param name="parentId">
            The parent ID that is attached to the error. In case it's null the parent
            will be automatically set to the current instance
            </param>
            <param name="labels">Labels that will be added to the captured error</param>
        </member>
        <member name="M:Elastic.Apm.Api.ITracer.CaptureException(System.Exception,System.String,System.Boolean,System.String,System.Collections.Generic.Dictionary{System.String,Elastic.Apm.Api.Label})">
            <summary>
            Captures an exception and reports it to the APM server.
            </summary>
            <param name="exception">The exception to capture.</param>
            <param name="culprit">The value of this parameter is shown as 'Culprit' on the APM UI.</param>
            <param name="isHandled">Indicates whether the exception is handled or not.</param>
            <param name="parentId">
            The parent ID that is attached to the error. In case it's null the parent
            will be automatically set to the current instance
            </param>
            <param name="labels">Labels that will be added to the captured error</param>
        </member>
        <member name="M:Elastic.Apm.Api.ITracer.CaptureErrorLog(Elastic.Apm.Api.ErrorLog,System.String,System.Exception,System.Collections.Generic.Dictionary{System.String,Elastic.Apm.Api.Label})">
            <summary>
            Captures a log event as an APM error.
            </summary>
            <param name="errorLog"> The log event itself </param>
            <param name="parentId"> ParentId pointing to the parent transaction or span. </param>
            <param name="exception"> Exception which was captured as part of the log. </param>
            <param name="labels">Labels that will be added to the captured error</param>
        </member>
        <member name="M:Elastic.Apm.Api.ITracer.CaptureTransaction(System.String,System.String,System.Action{Elastic.Apm.Api.ITransaction},Elastic.Apm.Api.DistributedTracingData,System.Collections.Generic.IEnumerable{Elastic.Apm.Api.SpanLink})">
            <summary>
            This is a convenient method which starts and ends a transaction and captures unhandled exceptions
            and schedules it to be reported to the APM Server.
            </summary>
            <param name="name">The name of the transaction.</param>
            <param name="type">The type of the transaction.</param>
            <param name="action">
            The <see cref="T:System.Action`1" /> that points to the code that you want to capture as a transaction.
            The <see cref="T:Elastic.Apm.Api.ITransaction" /> parameter gives you access to the transaction which is created by this method.
            </param>
            <param name="distributedTracingData">
            In case of a distributed trace, you can pass distributed tracing data to the API. By doing so, the new transaction will
            be
            automatically part of a distributed trace.
            Use <see cref="P:Elastic.Apm.Api.IExecutionSegment.OutgoingDistributedTracingData" /> to obtain distributed tracing data on the caller
            side.
            </param>
            <param name="links">Contains a list of <see cref="T:Elastic.Apm.Api.SpanLink"/> which points to spans associated with the transaction this method creates.</param>
        </member>
        <member name="M:Elastic.Apm.Api.ITracer.CaptureTransaction(System.String,System.String,System.Action,Elastic.Apm.Api.DistributedTracingData,System.Collections.Generic.IEnumerable{Elastic.Apm.Api.SpanLink})">
            <summary>
            This is a convenient method which starts and ends a transaction and captures unhandled exceptions
            and schedules it to be reported to the APM Server.
            </summary>
            <param name="name">The name of the transaction.</param>
            <param name="type">The type of the transaction.</param>
            <param name="action">
            The <see cref="T:System.Action`1" /> that points to the code that you want to capture as a
            transaction.
            </param>
            <param name="distributedTracingData">
            In case of a distributed trace, you can pass distributed tracing data to the API. By doing so, the new transaction will
            be
            automatically part of a distributed trace.
            Use <see cref="P:Elastic.Apm.Api.IExecutionSegment.OutgoingDistributedTracingData" /> to obtain distributed tracing data on the caller
            side.
            </param>
            <param name="links">Contains a list of <see cref="T:Elastic.Apm.Api.SpanLink"/> which points to spans associated with the transaction this method creates.</param>
        </member>
        <member name="M:Elastic.Apm.Api.ITracer.CaptureTransaction``1(System.String,System.String,System.Func{Elastic.Apm.Api.ITransaction,``0},Elastic.Apm.Api.DistributedTracingData,System.Collections.Generic.IEnumerable{Elastic.Apm.Api.SpanLink})">
            <summary>
            This is a convenient method which starts and ends a transaction and captures unhandled exceptions
            and schedules it to be reported to the APM Server.
            </summary>
            <param name="name">The name of the transaction.</param>
            <param name="type">The type of the transaction.</param>
            <param name="func">
            The <see cref="T:System.Action`1" /> that points to the code that you want to capture as a transaction.
            The <see cref="T:Elastic.Apm.Api.ITransaction" /> parameter gives you access to the transaction which is created by this method.
            </param>
            <typeparam name="T">The return type of the code that you want to capture as transaction.</typeparam>
            <param name="distributedTracingData">
            In case of a distributed trace, you can pass distributed tracing data to the API. By doing so, the new transaction will
            be
            automatically part of a distributed trace.
            Use <see cref="P:Elastic.Apm.Api.IExecutionSegment.OutgoingDistributedTracingData" /> to obtain distributed tracing data on the caller
            side.
            </param>
            <param name="links">Contains a list of <see cref="T:Elastic.Apm.Api.SpanLink"/> which points to spans associated with the transaction this method creates.</param>
            <returns>
            The result of the <paramref name="func" />.
            </returns>
        </member>
        <member name="M:Elastic.Apm.Api.ITracer.CaptureTransaction``1(System.String,System.String,System.Func{``0},Elastic.Apm.Api.DistributedTracingData,System.Collections.Generic.IEnumerable{Elastic.Apm.Api.SpanLink})">
            <summary>
            This is a convenient method which starts and ends a transaction and captures unhandled exceptions
            and schedules it to be reported to the APM Server.
            </summary>
            <param name="name">The name of the transaction.</param>
            <param name="type">The type of the transaction.</param>
            <param name="func">
            The <see cref="T:System.Func`1" /> that points to the code that you want to capture as a
            transaction.
            </param>
            <typeparam name="T">The return type of the code that you want to capture as transaction.</typeparam>
            <param name="distributedTracingData">
            In case of a distributed trace, you can pass distributed tracing data to the API. By doing so, the new transaction will
            be
            automatically part of a distributed trace.
            Use <see cref="P:Elastic.Apm.Api.IExecutionSegment.OutgoingDistributedTracingData" /> to obtain distributed tracing data on the caller
            side.
            </param>
            <param name="links">Contains a list of <see cref="T:Elastic.Apm.Api.SpanLink"/> which points to spans associated with the transaction this method creates.</param>
            <returns>
            The result of the <paramref name="func" />.
            </returns>
        </member>
        <member name="M:Elastic.Apm.Api.ITracer.CaptureTransaction(System.String,System.String,System.Func{System.Threading.Tasks.Task},Elastic.Apm.Api.DistributedTracingData,System.Collections.Generic.IEnumerable{Elastic.Apm.Api.SpanLink})">
            <summary>
            This is a convenient method which starts and ends a transaction and captures unhandled exceptions
            and schedules it to be reported to the APM Server.
            </summary>
            <param name="name">The name of the transaction.</param>
            <param name="type">The type of the transaction.</param>
            <param name="func">
            The <see cref="T:System.Func`1" /> that points to the async code that you want to capture as a
            transaction.
            </param>
            <param name="distributedTracingData">
            In case of a distributed trace, you can pass distributed tracing data to the API. By doing so, the new transaction will
            be
            automatically part of a distributed trace.
            Use <see cref="P:Elastic.Apm.Api.IExecutionSegment.OutgoingDistributedTracingData" /> to obtain distributed tracing data on the caller
            side.
            </param>
            <param name="links">Contains a list of <see cref="T:Elastic.Apm.Api.SpanLink"/> which points to spans associated with the transaction this method creates.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task" /> that can be awaited</returns>
        </member>
        <member name="M:Elastic.Apm.Api.ITracer.CaptureTransaction(System.String,System.String,System.Func{Elastic.Apm.Api.ITransaction,System.Threading.Tasks.Task},Elastic.Apm.Api.DistributedTracingData,System.Collections.Generic.IEnumerable{Elastic.Apm.Api.SpanLink})">
            <summary>
            This is a convenient method which starts and ends a transaction and captures unhandled exceptions
            and schedules it to be reported to the APM Server.
            </summary>
            <param name="name">The name of the transaction.</param>
            <param name="type">The type of the transaction.</param>
            <param name="func">
            The <see cref="T:System.Func`1" /> that points to the async code that you want to capture as a transaction.
            The <see cref="T:Elastic.Apm.Api.ITransaction" /> parameter gives you access to the transaction which is created by this method.
            </param>
            <param name="distributedTracingData">
            In case of a distributed trace, you can pass distributed tracing data to the API. By doing so, the new transaction will
            be
            automatically part of a distributed trace.
            Use <see cref="P:Elastic.Apm.Api.IExecutionSegment.OutgoingDistributedTracingData" /> to obtain distributed tracing data on the caller
            side.
            </param>
            <param name="links">Contains a list of <see cref="T:Elastic.Apm.Api.SpanLink"/> which points to spans associated with the transaction this method creates.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task" /> that can be awaited</returns>
        </member>
        <member name="M:Elastic.Apm.Api.ITracer.CaptureTransaction``1(System.String,System.String,System.Func{System.Threading.Tasks.Task{``0}},Elastic.Apm.Api.DistributedTracingData,System.Collections.Generic.IEnumerable{Elastic.Apm.Api.SpanLink})">
            <summary>
            This is a convenient method which starts and ends a transaction and captures unhandled exceptions
            and schedules it to be reported to the APM Server.
            </summary>
            <param name="name">The name of the transaction.</param>
            <param name="type">The type of the transaction.</param>
            <param name="func">
            The <see cref="T:System.Func`1" /> that points to the async code with a return value that you want to
            capture as a transaction.
            </param>
            <typeparam name="T">The return type of the <see cref="T:System.Threading.Tasks.Task`1" /> that you want to capture as transaction.</typeparam>
            <param name="distributedTracingData">
            In case of a distributed trace, you can pass distributed tracing data to the API. By doing so, the new transaction will
            be
            automatically part of a distributed trace.
            Use <see cref="P:Elastic.Apm.Api.IExecutionSegment.OutgoingDistributedTracingData" /> to obtain distributed tracing data on the caller
            side.
            </param>
            <param name="links">Contains a list of <see cref="T:Elastic.Apm.Api.SpanLink"/> which points to spans associated with the transaction this method creates.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task`1" /> that can be awaited</returns>
        </member>
        <member name="M:Elastic.Apm.Api.ITracer.CaptureTransaction``1(System.String,System.String,System.Func{Elastic.Apm.Api.ITransaction,System.Threading.Tasks.Task{``0}},Elastic.Apm.Api.DistributedTracingData,System.Collections.Generic.IEnumerable{Elastic.Apm.Api.SpanLink})">
            <summary>
            This is a convenient method which starts and ends a transaction and captures unhandled exceptions
            and schedules it to be reported to the APM Server.
            </summary>
            <param name="name">The name of the transaction.</param>
            <param name="type">The type of the transaction.</param>
            <param name="func">
            The <see cref="T:System.Func`1" /> that points to the async code with a return value that you want to capture as a
            transaction.
            The <see cref="T:Elastic.Apm.Api.ITransaction" /> parameter gives you access to the transaction which is created by this method.
            </param>
            <typeparam name="T">The return type of the <see cref="T:System.Threading.Tasks.Task`1" /> that you want to capture as transaction.</typeparam>
            <param name="distributedTracingData">
            In case of a distributed trace, you can pass distributed tracing data to the API. By doing so, the new transaction will
            be
            automatically part of a distributed trace.
            Use <see cref="P:Elastic.Apm.Api.IExecutionSegment.OutgoingDistributedTracingData" /> to obtain distributed tracing data on the caller
            side.
            </param>
            <param name="links">Contains a list of <see cref="T:Elastic.Apm.Api.SpanLink"/> which points to spans associated with the transaction this method creates.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task`1" /> that can be awaited.</returns>
        </member>
        <member name="M:Elastic.Apm.Api.ITracer.StartTransaction(System.String,System.String,Elastic.Apm.Api.DistributedTracingData,System.Boolean,System.Collections.Generic.IEnumerable{Elastic.Apm.Api.SpanLink})">
            <summary>
            Starts and returns a custom transaction.
            </summary>
            <param name="name">The name of the transaction.</param>
            <param name="type">The type of the transaction.</param>
            <param name="distributedTracingData">
            In case of a distributed trace, you can pass distributed tracing data to the API. By doing so, the new transaction will
            be
            automatically part of a distributed trace.
            Use <see cref="P:Elastic.Apm.Api.IExecutionSegment.OutgoingDistributedTracingData" /> to obtain distributed tracing data on the caller
            side.
            </param>
            <param name="ignoreActivity">
            The agent by default does a best effort to keep <see cref="P:System.Diagnostics.Activity.TraceId" /> in sync with the trace id used in
            Elastic APM.
            By setting <paramref name="ignoreActivity" /> to <c>false</c> you can turn off this functionality.
            </param>
            <param name="links">Contains a list of <see cref="T:Elastic.Apm.Api.SpanLink"/> which points to spans associated with the transaction this method creates.</param>
            <returns>The transaction that is created based on the parameters. This transaction is already active.</returns>
        </member>
        <member name="T:Elastic.Apm.Api.ITransaction">
            <summary>
            A transaction describes an event captured by the APM agent instrumentation. They are a special kind of Span that have
            additional
            attributes associated with them.
            </summary>
            <remarks>
            This interface is the public contract for a transaction. It is not intended to be used by a consumer of the agent to
            provide different transaction implementations.
            </remarks>
        </member>
        <member name="P:Elastic.Apm.Api.ITransaction.FaaS">
            <summary>
            Contains data related to FaaS (Function as a Service) events.
            </summary>
        </member>
        <member name="P:Elastic.Apm.Api.ITransaction.Context">
            <summary>
            Any arbitrary contextual information regarding the event, captured by the agent, optionally provided by the user.
            This field is lazily initialized, you don't have to assign a value to it and you don't have to null check it either.
            </summary>
        </member>
        <member name="P:Elastic.Apm.Api.ITransaction.Custom">
            <summary>
            An arbitrary mapping of additional metadata to store with the event.
            Custom is used to add non-indexed, custom contextual information to transactions. Non-indexed means the data is
            not searchable or aggregatable in Elasticsearch, and you cannot build dashboards on top of the data. However,
            non-indexed information is useful for other reasons, like providing contextual information to help you quickly debug
            performance issues or errors.
            Unlike <see cref="P:Elastic.Apm.Api.IExecutionSegment.Labels" /> the data in this property is not trimmed.
            </summary>
        </member>
        <member name="P:Elastic.Apm.Api.ITransaction.Configuration">
            <summary>
            A snapshot of configuration from when the transaction started. A snapshot contains values
            from initial configuration combined with dynamic values from central configuration, if enabled.
            </summary>
        </member>
        <member name="P:Elastic.Apm.Api.ITransaction.Result">
            <summary>
            A string describing the result of the transaction.
            This is typically the HTTP status code, or e.g. "success" for a background task.
            </summary>
            <value>The result.</value>
        </member>
        <member name="P:Elastic.Apm.Api.ITransaction.SpanCount">
            <summary>
            The total number of correlated spans, including started and dropped
            </summary>
        </member>
        <member name="P:Elastic.Apm.Api.ITransaction.Type">
            <summary>
            The type of the transaction.
            Example: 'request'
            </summary>
        </member>
        <member name="M:Elastic.Apm.Api.ITransaction.EnsureParentId">
            <summary>
            If the transaction does not have a ParentId yet, calling this method generates a new ID, sets it as the ParentId of
            this transaction,
            and returns it as a <see cref="T:System.String" />. If there is already a ParentId, the method just returns the existing
            ParentId.
            This enables the correlation of the spans the JavaScript Real User Monitoring (RUM) agent
            creates for the initial page load with the transaction of the backend service.
            </summary>
            <returns>
            The generated <see cref="P:Elastic.Apm.Api.IExecutionSegment.ParentId" /> that was applied to the current transaction, or the
            existing one.
            </returns>
        </member>
        <member name="M:Elastic.Apm.Api.ITransaction.SetService(System.String,System.String)">
            <summary>
            With this method you can overwrite the service name and version on a per transaction basis.
            If this is not set, the transaction will be associated with the default service.
            </summary>
            <param name="serviceName">The name of the service which the transaction will be associated with.</param>
            <param name="serviceVersion">The version of the service which the transaction will be associated with.</param>
        </member>
        <member name="T:Elastic.Apm.Api.Label">
            <summary>
            Represents the value of a label (see <see cref="M:Elastic.Apm.Api.IExecutionSegment.SetLabel(System.String,System.String)"/> with all its overloads).
            It contains implicit operators to convert all supported types to a new instance of <see cref="T:Elastic.Apm.Api.Label"/>
            </summary>
        </member>
        <member name="T:Elastic.Apm.Api.SpanLink">
            <summary>
            Represents a span link.
            Links holds links to other spans, potentially in other traces.
            </summary>
        </member>
        <member name="T:Elastic.Apm.Api.Message">
            <summary>
            Holds details related to message receiving and publishing if the captured event integrates with a messaging system
            </summary>
        </member>
        <member name="P:Elastic.Apm.Api.Message.Body">
            <summary>
            Body of the received message
            </summary>
        </member>
        <member name="P:Elastic.Apm.Api.Message.Headers">
            <summary>
            Headers received with the message
            </summary>
        </member>
        <member name="P:Elastic.Apm.Api.Message.Age">
            <inheritdoc cref="T:Elastic.Apm.Api.Age"/>
        </member>
        <member name="P:Elastic.Apm.Api.Message.Queue">
            <see cref="T:Elastic.Apm.Api.Queue"/>
        </member>
        <member name="P:Elastic.Apm.Api.Message.RoutingKey">
            <summary>
            optional routing key of the received message as set on the queuing system, such as in RabbitMQ.
            </summary>
        </member>
        <member name="T:Elastic.Apm.Api.Age">
            <summary>
            Age of the message. If the monitored messaging framework provides a timestamp for the message, agents may use it.
            Otherwise, the sending agent can add a timestamp in milliseconds since the Unix epoch to the message's metadata to be retrieved by the
            receiving agent. If a timestamp is not available, agents should omit this field.
            </summary>
        </member>
        <member name="P:Elastic.Apm.Api.Age.Ms">
            <summary>
            Age of the message in milliseconds.
            </summary>
        </member>
        <member name="T:Elastic.Apm.Api.Queue">
            <summary>
            Information about the message queue where the message is received.
            </summary>
        </member>
        <member name="P:Elastic.Apm.Api.Queue.Name">
            <summary>
            Name of the message queue where the message is received
            </summary>
        </member>
        <member name="T:Elastic.Apm.Api.MetricSample">
            <summary>
            A single metric sample.
            </summary>
        </member>
        <member name="T:Elastic.Apm.Api.Request">
            <summary>
            Encapsulates Request related information that can be attached to an <see cref="T:Elastic.Apm.Api.ITransaction" /> through
            <see cref="P:Elastic.Apm.Api.ITransaction.Context" />
            See <see cref="P:Elastic.Apm.Api.Context.Request" />
            </summary>
        </member>
        <member name="P:Elastic.Apm.Api.Request.Headers">
            <summary>
            This field is sanitized by a filter
            </summary>
        </member>
        <member name="P:Elastic.Apm.Api.Url.Search">
            <summary>
            The search describes the query string of the request.
            It is expected to have values delimited by ampersands.
            </summary>
        </member>
        <member name="T:Elastic.Apm.Api.Response">
            <summary>
            Encapsulates Response related information that can be attached to an <see cref="T:Elastic.Apm.Api.ITransaction" /> through
            <see cref="P:Elastic.Apm.Api.ITransaction.Context" />
            See <see cref="P:Elastic.Apm.Api.Context.Response" />
            </summary>
        </member>
        <member name="P:Elastic.Apm.Api.Response.StatusCode">
            <summary>
            The HTTP status code of the response.
            </summary>
        </member>
        <member name="T:Elastic.Apm.Api.Runtime">
            <summary>
            Name and version of the language runtime running this service
            </summary>
        </member>
        <member name="P:Elastic.Apm.Api.SpanContext.Labels">
            <summary>
            <seealso cref="M:Elastic.Apm.Api.SpanContext.ShouldSerializeLabels" />
            </summary>
        </member>
        <member name="M:Elastic.Apm.Api.SpanContext.ShouldSerializeLabels">
            <summary>
            Method to conditionally serialize <see cref="F:Elastic.Apm.Api.SpanContext.InternalLabels" /> - serialize only when there is at least one label.
            See
            <a href="https://www.newtonsoft.com/json/help/html/ConditionalProperties.htm">the relevant Json.NET Documentation</a>
            </summary>
        </member>
        <member name="P:Elastic.Apm.Api.SpanCount.Dropped">
            <summary>
            Number of spans that have been dropped by the agent recording the transaction
            </summary>
        </member>
        <member name="P:Elastic.Apm.Api.SpanCount.Started">
            <summary>
            Number of correlated spans that are recorded
            </summary>
        </member>
        <member name="T:Elastic.Apm.Api.SpanService">
            <summary>
            Service related information can be sent per span. Information provided here will override the more generic information retrieved from metadata,
            missing service fields will be retrieved from the metadata information.
            </summary>
        </member>
        <member name="T:Elastic.Apm.Api.Target">
            <summary>
            Target holds information about the outgoing service in case of an outgoing event.
            </summary>
        </member>
        <member name="P:Elastic.Apm.Api.Target.Type">
            <summary>
            Immutable type of the target service for the event.
            </summary>
        </member>
        <member name="P:Elastic.Apm.Api.Target.Name">
            <summary>
            Immutable name of the target service for the event.
            </summary>
        </member>
        <member name="F:Elastic.Apm.Api.Target._onlyUseName">
            <summary>
            Indicates to only use <see cref="P:Elastic.Apm.Api.Target.Name"/> in <see cref="M:Elastic.Apm.Api.Target.ToDestinationServiceResource"/>.
            E.g. HTTP spans only use name in `Destination.Service.Resource`.
            </summary>
        </member>
        <member name="T:Elastic.Apm.Api.SpecificationAttribute">
            <summary>
            Defines the apm server specification that the type adheres to
            </summary>
        </member>
        <member name="P:Elastic.Apm.Api.SpecificationAttribute.Path">
            <summary>
            Path of the specification, relative to the apm-server directory
            </summary>
            <remarks>
            The path also aligns with the APM server specification $id
            </remarks>
        </member>
        <member name="P:Elastic.Apm.Api.System.DetectedHostName">
            <summary>
            Hostname detected by the APM agent. It usually contains what the hostname command returns on the host machine.
            It will be used as the event's hostname if <see cref="P:Elastic.Apm.Api.System.ConfiguredHostName"/> is not present.
            </summary>
        </member>
        <member name="P:Elastic.Apm.Api.System.ConfiguredHostName">
            <summary>
            Configured name of the host the monitored service is running on. It should only be sent when configured by the user.
            If given, it is used as the event's hostname.
            </summary>
        </member>
        <member name="P:Elastic.Apm.Api.System.HostName">
            <summary>
            The hostname configured by the user, if configured, otherwise the detected hostname.
            </summary>
        </member>
        <member name="M:Elastic.Apm.ApmAgentExtensions.Subscribe(Elastic.Apm.IApmAgent,Elastic.Apm.DiagnosticSource.IDiagnosticsSubscriber[])">
            <summary>
            Sets up multiple <see cref="T:Elastic.Apm.DiagnosticSource.IDiagnosticsSubscriber" />s to start listening to one or more
            <see cref="T:Elastic.Apm.DiagnosticSource.IDiagnosticListener" />s.
            <para />
            If the agent is not enabled, subscribers are not subscribed.
            </summary>
            <param name="agent">The agent to report diagnostics over</param>
            <param name="subscribers">
            An array of <see cref="T:Elastic.Apm.DiagnosticSource.IDiagnosticsSubscriber" /> that will set up
            <see cref="T:Elastic.Apm.DiagnosticSource.IDiagnosticListener" /> subscriptions
            </param>
            <returns>
            A disposable referencing all the subscriptions. Disposing this is not necessary for clean up, only to unsubscribe if
            desired.
            </returns>
        </member>
        <member name="T:Elastic.Apm.CompositeDisposable">
            <summary>
            A collection of <see cref="T:System.IDisposable"/> instances
            </summary>
        </member>
        <member name="M:Elastic.Apm.CompositeDisposable.Add(System.IDisposable)">
            <summary>
            Adds an instance of <see cref="T:System.IDisposable"/> to the collection
            </summary>
            <param name="disposable">A disposable</param>
            <returns>This instance of <see cref="T:Elastic.Apm.CompositeDisposable"/></returns>
        </member>
        <member name="M:Elastic.Apm.BackendComm.BackendCommUtils.ApmServerEndpoints.BuildIntakeV2EventsAbsoluteUrl(System.Uri)">
            <summary>
            Builds the absolute URL that points to APM server's intake API endpoint which is used by agents to send events.
            </summary>
            <param name="baseUrl">Absolute URL pointing to APM Server's base for API endpoints.</param>
        </member>
        <member name="M:Elastic.Apm.BackendComm.BackendCommUtils.ApmServerEndpoints.BuildApmServerInformationUrl(System.Uri)">
            <summary>
            Builds the absolute URL that points to APM server information API endpoint
            </summary>
            <param name="baseUrl">Absolute URL pointing to APM Server's base for API endpoints.</param>
        </member>
        <member name="M:Elastic.Apm.BackendComm.BackendCommUtils.ApmServerEndpoints.BuildGetConfigAbsoluteUrl(System.Uri,Elastic.Apm.Api.Service)">
            <summary>
            Builds the absolute URL that points to APM server's central-config API endpoint which is used by agents to fetch configuration.
            Configuration is selected by the backend based on the agent's service.name and service.environment.
            </summary>
            <param name="baseUrl">Absolute URL pointing to APM Server's base for API endpoints.</param>
            <param name="service">Service info to pass to APM Server.
            service.name and service.environment are URL encoded in the returned URL.</param>
        </member>
        <member name="M:Elastic.Apm.BackendComm.BackendCommUtils.ApmServerEndpoints.UrlEncode(System.String)">
            <summary>
            Credit: System.Net.Http.FormUrlEncodedContent.Encode
            https://github.com/dotnet/corefx/blob/450f49a1a80663529b31d3defafbd5e59822a16a/src/System.Net.Http/src/System/Net/Http/FormUrlEncodedContent.cs#L53
            </summary>
        </member>
        <member name="M:Elastic.Apm.BackendComm.CentralConfig.CentralConfigurationFetcher.#ctor(Elastic.Apm.Logging.IApmLogger,Elastic.Apm.Config.IConfigurationStore,Elastic.Apm.Config.IConfiguration,Elastic.Apm.Api.Service,System.Net.Http.HttpMessageHandler,Elastic.Apm.Helpers.IAgentTimer,System.String)">
            <summary>
            We need this private ctor to avoid calling configStore.CurrentSnapshot twice (and thus possibly using different
            snapshots)
            when passing isEnabled: initialConfigSnapshot.CentralConfig and config: initialConfigSnapshot to base
            </summary>
        </member>
        <member name="T:Elastic.Apm.BackendComm.CentralConfig.RuntimeConfigurationSnapshot">
            <summary>
            Represents an active configuration snapshot with potential overrides from an updated <see cref="T:Elastic.Apm.BackendComm.CentralConfig.CentralConfiguration"/>
            </summary>
        </member>
        <member name="T:Elastic.Apm.Cloud.AwsCloudMetadataProvider">
            <summary>
            Provides cloud metadata for Amazon Web Services (AWS)
            </summary>
        </member>
        <member name="P:Elastic.Apm.Cloud.AwsCloudMetadataProvider.Provider">
            <inheritdoc />
        </member>
        <member name="M:Elastic.Apm.Cloud.AwsCloudMetadataProvider.GetMetadataAsync">
            <inheritdoc />
        </member>
        <member name="T:Elastic.Apm.Cloud.AzureAppServiceMetadataProvider">
            <summary>
            Provides cloud metadata for Microsoft Azure App Services
            </summary>
        </member>
        <member name="T:Elastic.Apm.Cloud.AzureCloudMetadataProvider">
            <summary>
            Provides cloud metadata for Microsoft Azure VM
            </summary>
        </member>
        <member name="P:Elastic.Apm.Cloud.AzureCloudMetadataProvider.Provider">
            <inheritdoc />
        </member>
        <member name="M:Elastic.Apm.Cloud.AzureCloudMetadataProvider.GetMetadataAsync">
            <inheritdoc />
        </member>
        <member name="T:Elastic.Apm.Cloud.AzureFunctionsMetadataProvider">
            <summary>
            Provides cloud metadata for Microsoft Azure Functions
            </summary>
        </member>
        <member name="T:Elastic.Apm.Cloud.CloudMetadataProviderCollection">
            <summary>
            A collection of <see cref="T:Elastic.Apm.Cloud.ICloudMetadataProvider"/> that provide metadata for cloud platforms
            </summary>
        </member>
        <member name="M:Elastic.Apm.Cloud.CloudMetadataProviderCollection.GetMetadataAsync">
            <summary>
            Retrieves the cloud metadata for the given provider(s)
            </summary>
            <returns></returns>
        </member>
        <member name="F:Elastic.Apm.Cloud.AzureEnvironmentVariables.WebsiteOwnerName">
            <summary>
            Value of the form {subscription id}+{app service plan resource group}-{region}webspace
            </summary>
            <example>
            f5940f10-2e30-3e4d-a259-63451ba6dae4+elastic-apm-AustraliaEastwebspace
            </example>
        </member>
        <member name="T:Elastic.Apm.Cloud.EnvironmentBasedAzureMetadataHelper">
            <summary>
            Helper type for Azure metadata providers that operate on environment variables.
            </summary>
        </member>
        <member name="T:Elastic.Apm.Cloud.GcpCloudMetadataProvider">
            <summary>
            Provides cloud metadata for Google Cloud Platform (GCP)
            </summary>
        </member>
        <member name="P:Elastic.Apm.Cloud.GcpCloudMetadataProvider.Provider">
            <inheritdoc />
        </member>
        <member name="M:Elastic.Apm.Cloud.GcpCloudMetadataProvider.GetMetadataAsync">
            <inheritdoc />
        </member>
        <member name="T:Elastic.Apm.Cloud.ICloudMetadataProvider">
            <summary>
            Provides metadata for a cloud provider
            </summary>
        </member>
        <member name="P:Elastic.Apm.Cloud.ICloudMetadataProvider.Provider">
            <summary>
            The name of the cloud provider
            </summary>
        </member>
        <member name="M:Elastic.Apm.Cloud.ICloudMetadataProvider.GetMetadataAsync">
            <summary>
            Retrieves the cloud metadata for the provider
            </summary>
            <returns></returns>
        </member>
        <member name="T:Elastic.Apm.Config.IConfigurationKeyValueProvider">
            <summary>
            An implementation that looks up configuration keys in an external configuration system <see cref="T:Elastic.Apm.Config.ConfigConsts.KeyNames"/>
            </summary>
        </member>
        <member name="M:Elastic.Apm.Config.IConfigurationKeyValueProvider.Read(System.String)">
            <summary> Reads a configuration value, may return null to indicate no configuration is provided </summary>
            <param name="key"><see cref="T:Elastic.Apm.Config.ConfigConsts.KeyNames"/></param>
        </member>
        <member name="T:Elastic.Apm.Config.IConfigurationEnvironmentValueProvider">
            <summary> An interface that looks up configuration based on environment variables <see cref="T:Elastic.Apm.Config.ConfigConsts.EnvVarNames"/> </summary>
        </member>
        <member name="M:Elastic.Apm.Config.IConfigurationEnvironmentValueProvider.Read(System.String)">
            <summary>
            Returns the environment configuration value for a particular config, implementations should always return an
            <see cref="T:Elastic.Apm.Config.ConfigurationKeyValue"/> instance even if no environment variable is set.
            </summary>
            <param name="variable"><see cref="T:Elastic.Apm.Config.ConfigConsts.EnvVarNames"/></param>
        </member>
        <member name="P:Elastic.Apm.Config.FallbackConfigurationBase.ServerUrl">
            <inheritdoc />
        </member>
        <member name="P:Elastic.Apm.Config.FallbackConfigurationBase.ServerUrls">
            <inheritdoc />
        </member>
        <member name="T:Elastic.Apm.Config.IConfiguration">
            <summary>
            A snapshot of agent configuration containing values
            initial configuration combined with dynamic values from central configuration, if enabled.
            </summary>
        </member>
        <member name="T:Elastic.Apm.Config.IConfigurationDescription">
            <summary>
            A description for the configuration
            </summary>
        </member>
        <member name="T:Elastic.Apm.Config.IConfigurationReader">
            <summary>
            Reads configuration values used to configure the agent
            </summary>
        </member>
        <member name="P:Elastic.Apm.Config.IConfigurationReader.ApiKey">
            <summary>
            The API key used to send data to the APM server.
            Ensures that only your agents can send data to your APM server.
            </summary>
        </member>
        <member name="P:Elastic.Apm.Config.IConfigurationReader.ApplicationNamespaces">
            <summary>
            When defined, all namespaces not starting with one of the values of this collection are ignored when determining
            Exception culprit.
            This suppresses any configuration of <see cref="P:Elastic.Apm.Config.IConfigurationReader.ExcludedNamespaces" />
            </summary>
        </member>
        <member name="P:Elastic.Apm.Config.IConfigurationReader.CaptureBody">
            <summary>
            For transactions that are HTTP requests, the agent can optionally capture the request body, e.g., POST variables.
            If the request has a body and this setting is disabled, the body will be shown as [REDACTED].
            Valid values are <c>off</c>, <c>errors</c>, <c>transactions</c> and <c>all</c>.
            </summary>
        </member>
        <member name="P:Elastic.Apm.Config.IConfigurationReader.CaptureBodyContentTypes">
            <summary>
            Configures for which content types the body should be captured.
            </summary>
        </member>
        <member name="P:Elastic.Apm.Config.IConfigurationReader.CaptureHeaders">
            <summary>
            Capture request and response headers, including cookies.
            </summary>
        </member>
        <member name="P:Elastic.Apm.Config.IConfigurationReader.CentralConfig">
            <summary>
            Whether the agent is configured to make periodic requests to the APM server to fetch and use the latest
            APM agent central configuration.
            </summary>
        </member>
        <member name="P:Elastic.Apm.Config.IConfigurationReader.CloudProvider">
            <summary>
            Specify which cloud provider should be assumed for metadata collection. By default, the agent will attempt to detect
            the cloud
            provider or, if that fails, will use trial and error to collect the metadata. Valid options are "aws", "gcp", and
            "azure".
            If this config value is set to "False", no cloud metadata will be collected.
            </summary>
        </member>
        <member name="P:Elastic.Apm.Config.IConfigurationReader.DisableMetrics">
            <summary>
            Disables the collection of certain metrics. If the name of a metric matches any of the wildcard expressions, it will
            not be collected
            </summary>
        </member>
        <member name="P:Elastic.Apm.Config.IConfigurationReader.Enabled">
            <summary>
            Enables the agent.
            When set to <c>true</c> (the default), the agent is enabled.
            When set to <c>false</c>, the agent is disabled, including instrumentation and remote config polling.
            The value of <see cref="P:Elastic.Apm.Config.IConfigurationReader.Enabled" /> cannot be changed during the lifetime of the application.
            <para />
            To dynamically change agent operation, use <see cref="P:Elastic.Apm.Config.IConfigurationReader.Recording" />
            </summary>
        </member>
        <member name="P:Elastic.Apm.Config.IConfigurationReader.OpenTelemetryBridgeEnabled">
            <summary>
            Enables OpenTelemetry bridging. If this is set to <code>true</code>, the agent will automatically capture every
            <see cref="T:System.Diagnostics.Activity" /> as part of a trace captured in Elastic APM.
            </summary>
        </member>
        <member name="P:Elastic.Apm.Config.IConfigurationReader.Environment">
            <summary>
            The name of the environment this service is deployed in.
            </summary>
            <example>production</example>
        </member>
        <member name="P:Elastic.Apm.Config.IConfigurationReader.ExcludedNamespaces">
            <summary>
            A list of namespaces to exclude when reading an exception's StackTrace to determine the culprit.
            Namespaces are checked with string.StartsWith() so "System." matches all System namespaces
            </summary>
        </member>
        <member name="P:Elastic.Apm.Config.IConfigurationReader.ExitSpanMinDuration">
            <summary>
            Sets the minimum duration of exit spans. Exit spans with a duration lesser than this threshold are attempted to be
            discarded.
            If the exit span is equal or greater the threshold, it should be kept.
            In some cases exit spans cannot be discarded. For example, spans that propagate the trace context to downstream
            services,
            such as outgoing HTTP requests, can't be discarded.
            However, external calls that don't propagate context, such as calls to a database, can be discarded using this
            threshold.
            Additionally, spans that lead to an error can't be discarded.
            </summary>
        </member>
        <member name="P:Elastic.Apm.Config.IConfigurationReader.FlushInterval">
            <summary>
            The maximal amount of time (in seconds) events are held in queue until there is enough to send a batch.
            It's possible for a batch to contain less then <seealso cref="P:Elastic.Apm.Config.IConfigurationReader.MaxBatchEventCount" /> events
            if there are events that need to be sent out because they were held for too long.
            A lower value will increase the load on your APM server,
            while a higher value can increase the memory pressure on your app.
            A higher value also impacts the time until transactions are indexed and searchable in Elasticsearch.
            <list type="bullet">
            	<item>
            		<description>
            			Positive number - The maximal amount of time to hold events in queue.
            		</description>
            	</item>
            	<item>
            		<description>
            			0 - Events are not held in queue but are sent immediately.
            		</description>
            	</item>
            	<item>
            		<description>
            			Negative - Invalid and the default value is used instead.
            		</description>
            	</item>
            </list>
            Default value: <seealso cref="F:Elastic.Apm.Config.ConfigConsts.DefaultValues.FlushIntervalInMilliseconds" />
            </summary>
        </member>
        <member name="P:Elastic.Apm.Config.IConfigurationReader.HostName">
            <summary>
            Allows for the reported hostname to be manually specified. If unset, the hostname will be detected.
            </summary>
        </member>
        <member name="P:Elastic.Apm.Config.IConfigurationReader.IgnoreMessageQueues">
            <summary>
            Disables the tracing of messages from certain queues, topics exchanges.
            If the name of a queue, topic or exchange matches any of the wildcard expressions, it will
            not be traced
            </summary>
        </member>
        <member name="P:Elastic.Apm.Config.IConfigurationReader.LogLevel">
            <summary>
            The logging level for the agent.
            </summary>
        </member>
        <member name="P:Elastic.Apm.Config.IConfigurationReader.MaxBatchEventCount">
            <summary>
            The maximal number of events to send in a batch.
            It's possible for a batch contain less then the maximum events
            if there are events that need to be sent out because they were held for too long.
            <list type="bullet">
            	<item>
            		<description>
            			Positive number - The maximal number of of events to send in a batch.
            		</description>
            	</item>
            	<item>
            		<description>
            			0  and negative - Invalid and the default value is used instead.
            		</description>
            	</item>
            </list>
            Default value: <seealso cref="F:Elastic.Apm.Config.ConfigConsts.DefaultValues.MaxBatchEventCount" />
            Also see: <seealso cref="P:Elastic.Apm.Config.IConfigurationReader.FlushInterval" /> and <seealso cref="P:Elastic.Apm.Config.IConfigurationReader.MaxQueueEventCount" />
            </summary>
        </member>
        <member name="P:Elastic.Apm.Config.IConfigurationReader.MaxQueueEventCount">
            <summary>
            The maximal number of events to hold in queue as candidates to be sent.
            If the queue is at its maximum capacity then the agent discards the new events
            until the queue has free space.
            <list type="bullet">
            	<item>
            		<description>
            			Positive number - The maximal number of of events to send in a batch.
            				If <c>MaxQueueEventCount</c> is less than <seealso cref="P:Elastic.Apm.Config.IConfigurationReader.MaxBatchEventCount" /> then
            <seealso cref="P:Elastic.Apm.Config.IConfigurationReader.MaxBatchEventCount" /> is used as <c>MaxQueueEventCount</c>.
            		</description>
            	</item>
            	<item>
            		<description>
            			0  and negative - Invalid and the default value is used instead.
            		</description>
            	</item>
            </list>
            Default value: <seealso cref="F:Elastic.Apm.Config.ConfigConsts.DefaultValues.MaxQueueEventCount" />
            </summary>
        </member>
        <member name="P:Elastic.Apm.Config.IConfigurationReader.Recording">
            <summary>
            Whether the agent is recording.
            When set to <c>true</c>. the agent instruments and capture requests, tracks errors, and
            collects and sends metrics.
            When set to <c>false</c>, the agent does not collect data or communicate with the APM server, except to
            fetch central configuration.
            Recording can be changed during the lifetime of the application.
            </summary>
            <remarks>
            As this is a reversible switch, agent threads are not terminated when inactivated, but they will be mostly
            idle in this state, so the overhead should be negligible.
            </remarks>
        </member>
        <member name="P:Elastic.Apm.Config.IConfigurationReader.SanitizeFieldNames">
            <summary>
            Sometimes it is necessary to sanitize the data sent to Elastic APM, e.g. remove sensitive data.
            Configure a list of wildcard patterns of field names which should be sanitized.
            These apply for example to HTTP headers and application/x-www-form-urlencoded data.
            </summary>
        </member>
        <member name="P:Elastic.Apm.Config.IConfigurationReader.SecretToken">
            <summary>
            A secret token to ensure that only your agents can send data to your APM server.
            Both agents and APM server have to be configured with the same secret token.
            </summary>
        </member>
        <member name="P:Elastic.Apm.Config.IConfigurationReader.ServerCert">
            <summary>
            The path to the PEM-encoded certificate used by APM server. This can be used when using a certificate
            signed by a Certificate Authority (CA) that is not in the trust store, such as a self-signed certificate,
            to perform validation through certificate pinning.
            </summary>
        </member>
        <member name="P:Elastic.Apm.Config.IConfigurationReader.ServerUrl">
            <summary>
            The URL for APM server.
            </summary>
        </member>
        <member name="P:Elastic.Apm.Config.IConfigurationReader.ServerUrls">
            <summary>
            The URLs for APM server.
            </summary>
        </member>
        <member name="P:Elastic.Apm.Config.IConfigurationReader.UseWindowsCredentials">
            <summary>
            If set to true, Agent will use windows default credentials that the service running the agent has to send requests if it is needed for proxy.
            </summary>
        </member>
        <member name="P:Elastic.Apm.Config.IConfigurationReader.ServiceName">
            <summary>
            The name of service instrumented by the APM agent. This is used to group all the errors and transactions
            of the service together, and is the primary filter in the Elastic APM user interface.
            </summary>
        </member>
        <member name="P:Elastic.Apm.Config.IConfigurationReader.ServiceNodeName">
            <summary>
            A name used to differentiate between nodes in a service. If not set, data aggregations will be done
            based on a container ID (where valid) or on the reported hostname (automatically discovered).
            </summary>
        </member>
        <member name="P:Elastic.Apm.Config.IConfigurationReader.ServiceVersion">
            <summary>
            The version of the service.
            If deployments are not versioned, it is recommended to set this to the commit identifier of the deployed revision,
            e.g. the output of <code>git rev-parse HEAD</code>.
            </summary>
        </member>
        <member name="P:Elastic.Apm.Config.IConfigurationReader.SpanCompressionEnabled">
            <summary>
            Setting this option to true will enable span compression feature.
            Span compression reduces the collection, processing, and storage overhead, and removes clutter from the UI.
            The tradeoff is that some information such as DB statements of all the compressed spans will not be collected.
            </summary>
        </member>
        <member name="P:Elastic.Apm.Config.IConfigurationReader.SpanCompressionExactMatchMaxDuration">
            <summary>
            Consecutive spans that are exact match and that are under this threshold will be compressed into a single composite
            span.
            This option does not apply to composite spans. This reduces the collection, processing, and storage overhead, and
            removes clutter
            from the UI.
            The tradeoff is that the DB statements of all the compressed spans will not be collected.
            </summary>
        </member>
        <member name="P:Elastic.Apm.Config.IConfigurationReader.SpanCompressionSameKindMaxDuration">
            <summary>
            Consecutive spans to the same destination that are under this threshold will be compressed into a single composite
            span.
            This option does not apply to composite spans.
            This reduces the collection, processing, and storage overhead, and removes clutter from the UI. The tradeoff is that
            the DB statements of
            all the compressed spans will not be collected.
            </summary>
        </member>
        <member name="P:Elastic.Apm.Config.IConfigurationReader.SpanStackTraceMinDurationInMilliseconds">
            <summary>
            The agent limits stack trace collection to spans with durations equal or longer than the given value
            negative value: Disables stack trace collection for spans completely
            0: stacktrace will be collected for all spans
            positive value n: stacktrace will be captured for spans with a duration equal or longer than n ms.
            </summary>
        </member>
        <member name="P:Elastic.Apm.Config.IConfigurationReader.SpanFramesMinDurationInMilliseconds">
            <summary>
            The agent limits stack trace collection to spans with durations equal or longer than the given value
            0: Disables stack trace collection for spans completely
            negative value: stacktrace will be collected for all spans
            positive value n: stacktrace will be captured for spans with a duration equal or longer than n ms.
            </summary>
        </member>
        <member name="P:Elastic.Apm.Config.IConfigurationReader.StackTraceLimit">
            <summary>
            The number of stack frames the agent collects.
            0: no stacktrace is collected - This also applies to spans no matter what is the value of
            SpanFramesMinDurationInMilliseconds.
            negative: all frames must be collected
            positive number n: top n frames must be collected
            </summary>
        </member>
        <member name="P:Elastic.Apm.Config.IConfigurationReader.TraceContextIgnoreSampledFalse">
            <summary>
            By setting this to <code>true</code> the agent will ignore the sampled part of the W3C TraceContext traceparent header
            when it's false and when the upstream transaction is not coming from an Elastic APM agent.
            In practice this means that in case a caller service calls another service where this value is <code>true</code>,
            the agent will ignore the sampling decision of the upstream service, and it will make a new sampling decision.
            This can be useful when a caller service always sets the sampled flag to false and the agent would have no chance to
            create any sampled transaction.
            </summary>
        </member>
        <member name="P:Elastic.Apm.Config.IConfigurationReader.TraceContinuationStrategy">
            <summary>
            The traceparent header of requests that are traced with our agents might have been added by a 3rd party component.
            This situation becomes more and more common as the w3c trace context gets adopted. In such cases we can end up with
            traces where part of the trace is outside of our system.
            In order to handle this properly, the agent SHOULD offer several trace continuation strategies.
            The agent SHOULD offer a configuration called trace_continuation_strategy with the following values and behavior:
             - continue: The agent takes the traceparent header as it is and applies it to the new transaction.
             - restart: The agent always creates a new trace with a new trace id. In this case the agent MUST create a span link in
            the new transaction pointing to the original traceparent.
             - restart_external: The agent first checks the tracestate header. If the header contains the es vendor flag, it's
            treated as internal, otherwise (including the case when the tracestate header is not present) it's treated as external.
            In case of external calls the agent MUST create a new trace with a new trace id and MUST create a link in the new
            transaction pointing to the original trace.
            </summary>
        </member>
        <member name="P:Elastic.Apm.Config.IConfigurationReader.TransactionIgnoreUrls">
            <summary>
            A list of patterns to match HTTP requests to ignore. An incoming HTTP request whose request line matches any of the
            patterns will not be reported as a transaction.
            </summary>
        </member>
        <member name="P:Elastic.Apm.Config.IConfigurationReader.TransactionMaxSpans">
            <summary>
            The number of spans that are recorded per transaction.
            <list type="bullet">
            	<item>
            		<description>
            			0: no spans will be collected.
            		</description>
            	</item>
            	<item>
            		<description>
            			-1: all spans will be collected.
            		</description>
            	</item>
            </list>
            </summary>
        </member>
        <member name="P:Elastic.Apm.Config.IConfigurationReader.TransactionSampleRate">
            <summary>
            The sample rate for transactions.
            By default, the agent will sample every transaction (e.g. a request to your service). To reduce overhead and storage
            requirements,
            the sample rate can be set to a value between 0.0 and 1.0. The agent still records the overall time and result for
            unsampled
            transactions, but no context information, labels, or spans are recorded.
            </summary>
        </member>
        <member name="P:Elastic.Apm.Config.IConfigurationReader.UseElasticTraceparentHeader">
            <summary>
            If <c>true</c>, for all outgoing HTTP requests the agent stores the traceparent in a "elastic-apm-traceparent" header
            name.
            Otherwise, it'll use the official w3c "traceparent" header name.
            </summary>
        </member>
        <member name="P:Elastic.Apm.Config.IConfigurationReader.VerifyServerCert">
            <summary>
            The agent verifies the server's certificate if an HTTPS connection to the APM server is used.
            Verification can be disabled by setting to <c>false</c>.
            </summary>
        </member>
        <member name="T:Elastic.Apm.DiagnosticListeners.DiagnosticListenerBase">
            <summary>
            A base class for DiagnosticSource listeners which encapsulates common functionality - e.g. exception handling.
            </summary>
        </member>
        <member name="P:Elastic.Apm.DiagnosticListeners.DiagnosticListenerBase.Logger">
            <summary>
            A logger scoped to the child class.
            </summary>
        </member>
        <member name="P:Elastic.Apm.DiagnosticListeners.DiagnosticListenerBase.ApmAgent">
            <summary>
            Current Agent instance.
            </summary>
        </member>
        <member name="M:Elastic.Apm.DiagnosticListeners.DiagnosticListenerBase.HandleOnNext(System.Collections.Generic.KeyValuePair{System.String,System.Object})">
            <summary>
            Fires each time when <see cref="M:Elastic.Apm.DiagnosticListeners.DiagnosticListenerBase.OnNext(System.Collections.Generic.KeyValuePair{System.String,System.Object})"/> is called.
            Code within this method is guarded by a try-catch.
            </summary>
            <param name="kv"></param>
        </member>
        <member name="T:Elastic.Apm.DiagnosticListeners.HttpDiagnosticListener">
            <summary>
            Captures web requests initiated by <see cref="T:System.Net.Http.HttpClient" />
            </summary>
        </member>
        <member name="M:Elastic.Apm.DiagnosticListeners.HttpDiagnosticListenerFullFrameworkImpl.ProcessExceptionEvent(System.Object,System.Uri)">
            <summary>
            In Full Framework "System.Net.Http.Desktop.HttpRequestOut.Ex.Stop" does not send the exception property.
            Therefore we have a specialized ProcessExceptionEvent for Full Framework.
            </summary>
        </member>
        <member name="T:Elastic.Apm.DiagnosticListeners.HttpDiagnosticListenerImplBase`2">
            <inheritdoc />
            <summary>
            Captures web requests initiated by <see cref="T:System.Net.Http.HttpClient" />
            </summary>
        </member>
        <member name="F:Elastic.Apm.DiagnosticListeners.HttpDiagnosticListenerImplBase`2.ProcessingRequests">
            <summary>
            Keeps track of ongoing requests
            </summary>
        </member>
        <member name="M:Elastic.Apm.DiagnosticListeners.HttpDiagnosticListenerImplBase`2.IsRequestFilteredOut(System.Uri)">
            <summary>
            Tells if the given request should be filtered from being captured.
            </summary>
            <returns><c>true</c>, if request should not be captured, <c>false</c> otherwise.</returns>
            <param name="requestUri">Request URI. It cannot be null</param>
        </member>
        <member name="P:Elastic.Apm.DiagnosticListeners.HttpTraceConfiguration.Subscribed">
            <summary>
            Whether a Http diagnostic listener has subscribed to HTTP requests.
            </summary>
        </member>
        <member name="P:Elastic.Apm.DiagnosticListeners.HttpTraceConfiguration.CaptureSpan">
            <summary>
            Whether a HTTP span should be captured.
            A HTTP diagnostic listener is used to listen for all HTTP requests, but it may be started
            to capture spans for HTTP requests only to specific known services. In the event a HTTP request is not
            to a known service, <see cref="P:Elastic.Apm.DiagnosticListeners.HttpTraceConfiguration.CaptureSpan"/> determines whether a HTTP span should be captured.
            </summary>
        </member>
        <member name="P:Elastic.Apm.DiagnosticListeners.HttpTraceConfiguration.HasTracers">
            <summary>
            Determines if there are any HTTP span tracers registered.
            Avoids allocating a <see cref="T:Elastic.Apm.DiagnosticListeners.HttpTraceConfiguration.HttpTracers"/> if there are none to enumerate
            </summary>
        </member>
        <member name="M:Elastic.Apm.DiagnosticListeners.HttpTraceConfiguration.GetTracers">
            <summary>
            Gets the HTTP span tracers, entering a read lock that is exited when the
            <see cref="T:Elastic.Apm.DiagnosticListeners.HttpTraceConfiguration.HttpTracers"/> is disposed.
            </summary>
            <returns>a new instance of <see cref="T:Elastic.Apm.DiagnosticListeners.HttpTraceConfiguration.HttpTracers"/></returns>
        </member>
        <member name="M:Elastic.Apm.DiagnosticListeners.HttpTraceConfiguration.AddTracer(Elastic.Apm.DiagnosticListeners.IHttpSpanTracer)">
            <summary>
            Adds a http span tracer to the collection, within a write lock
            </summary>
            <param name="tracer">The tracer to add</param>
        </member>
        <member name="T:Elastic.Apm.DiagnosticListeners.HttpTraceConfiguration.HttpTracers">
            <summary>
            A collection of http tracers to enumerate
            </summary>
        </member>
        <member name="T:Elastic.Apm.DiagnosticListeners.IHttpSpanTracer">
            <summary>
            Utility interface for the generic HTTP request capturing mechanism.
            For specific HTTP calls, it can handle the creation of the span and it
            can also completely suppress span creation.
            </summary>
        </member>
        <member name="M:Elastic.Apm.DiagnosticListeners.IHttpSpanTracer.IsMatch(System.String,System.Uri,System.Func{System.String,System.String})">
            <summary>
            Determines if a HTTP request is a match for this tracer. This should be
            a quick check
            </summary>
            <param name="method">the HTTP method</param>
            <param name="requestUrl">the HTTP request url</param>
            <param name="headerGetter">A delegate to retrieve a HTTP header</param>
            <returns><c>true</c> if the request is match, <c>false</c> otherwise</returns>
        </member>
        <member name="M:Elastic.Apm.DiagnosticListeners.IHttpSpanTracer.StartSpan(Elastic.Apm.IApmAgent,System.String,System.Uri,System.Func{System.String,System.String})">
            <summary>
            Starts a new span
            </summary>
            <param name="agent">The agent used to start the span</param>
            <param name="method">the HTTP method</param>
            <param name="requestUrl">the HTTP request url</param>
            <param name="headerGetter">A delegate to retrieve a HTTP header</param>
            <returns>A new instance of a <see cref="T:Elastic.Apm.Api.ISpan"/>. Can return null</returns>
        </member>
        <member name="M:Elastic.Apm.DiagnosticListeners.IHttpSpanTracer.ShouldSuppressSpanCreation">
            <summary>
            Determines if a span should be captured for the given HTTP all.
            </summary>
            <returns>
            <c>true</c> if a span should be captured for a given call (either created in the <see cref="M:Elastic.Apm.DiagnosticListeners.IHttpSpanTracer.StartSpan(Elastic.Apm.IApmAgent,System.String,System.Uri,System.Func{System.String,System.String})" /> or
            if it fails then by the generic HTTP listener). <c>false</c> if span creation should be suppressed for the given HTTP
            call
            </returns>
        </member>
        <member name="T:Elastic.Apm.DiagnosticSource.SubscribedListenerDisposable">
            <summary>
            Disposes the disposable and removes the type from subscribed listeners
            </summary>
        </member>
        <member name="T:Elastic.Apm.DiagnosticSource.HttpDiagnosticsSubscriber">
            <summary>
            Activates the <see cref="T:Elastic.Apm.DiagnosticListeners.HttpDiagnosticListener" /> which enables
            capturing outgoing web requests created by <see cref="T:System.Net.Http.HttpClient" />.
            </summary>
        </member>
        <member name="M:Elastic.Apm.DiagnosticSource.HttpDiagnosticsSubscriber.Subscribe(Elastic.Apm.IApmAgent)">
            <summary>
            Start listening for HttpClient diagnostic source events.
            </summary>
        </member>
        <member name="T:Elastic.Apm.DiagnosticSource.IDiagnosticListener">
            <summary>
            Common interface for every diagnostic listener
            The DiagnosticInitializer works through this interface with the different listeners
            </summary>
        </member>
        <member name="P:Elastic.Apm.DiagnosticSource.IDiagnosticListener.Name">
            <summary>
            Represents the component associated with the event.
            </summary>
            <value>The name.</value>
        </member>
        <member name="P:Elastic.Apm.DiagnosticSource.IDiagnosticListener.AllowDuplicates">
            <summary>
            Allow duplicate diagnostic listeners of the same type to be registered. There may be
            more than one diagnostic listener (source) with the same name for which events
            should be listened.
            </summary>
        </member>
        <member name="M:Elastic.Apm.DiagnosticSource.IDiagnosticsSubscriber.Subscribe(Elastic.Apm.IApmAgent)">
            <summary>
            Subscribes to diagnostic listeners
            </summary>
            <param name="components">The agent components</param>
            <returns>A disposable</returns>
        </member>
        <member name="T:Elastic.Apm.DistributedTracing.TraceContext">
             <summary>
             An implementation of the
             <a href="https://www.w3.org/TR/trace-context/#traceparent-field">w3c 'Trace Context' traceparent and tracestate</a>:
            
             traceparent: 00-0af7651916cd43dd8448eb211c80319c-b7ad6b7169203331-01
             (_________)  () (______________________________) (______________) ()
                  v       v                 v                        v         v
             Header name Version           Trace-Id                Span-Id     Flags
             </summary>
        </member>
        <member name="M:Elastic.Apm.DistributedTracing.TraceContext.TryExtractTracingData(System.String,System.String)">
            <summary>
            Parses the traceparent and tracestate headers
            </summary>
            <param name="traceParentValue">The value of the traceparent header</param>
            <param name="traceStateValue">The value of the tracestate headers</param>
            <returns>The parsed data if parsing was successful, null otherwise.</returns>
        </member>
        <member name="M:Elastic.Apm.DistributedTracing.TraceContext.HexStringTwoCharToByte(System.String,System.Int32)">
            <summary>
            Converts 2 selected chars from the input string into a byte
            </summary>
            <param name="src">The string to convert - must be at least 2 char long</param>
            <param name="start">The position of the first character to convert.</param>
            <returns>The byte representation of the string</returns>
        </member>
        <member name="T:Elastic.Apm.DistributedTracing.TraceState">
            <summary>
            Handles <see cref="T:Elastic.Apm.DistributedTracing.TraceContext"/> tracestate
            </summary>
        </member>
        <member name="M:Elastic.Apm.DistributedTracing.TraceState.SetSampleRate(System.Double)">
            <summary>
            Sets the sample rate. If a sample rate has already been set, the existing sample rate is removed
            and the new sample rate appended to the front of tracestate.
            </summary>
            <param name="sampleRate">The sample rate</param>
        </member>
        <member name="M:Elastic.Apm.DistributedTracing.TraceState.AddTextHeader(System.String)">
            <summary>
            Adds a text header to tracestate
            </summary>
            <param name="headerValue">The header value</param>
        </member>
        <member name="M:Elastic.Apm.DistributedTracing.TraceState.ValidateTracestate(System.String)">
            <summary>
            Validates the tracestate value
            </summary>
            <param name="traceState">The value to validate</param>
            <returns>The <paramref name="traceState"/> if the value is a valid trace state, <code>null</code> otherwise</returns>
        </member>
        <member name="M:Elastic.Apm.DistributedTracing.TraceState.GetHeaderValue(System.Double)">
            <summary>
            Gets the tracestate header value for the agent
            </summary>
            <param name="sampleRate">The sample rate</param>
            <returns>The tracestate header</returns>
        </member>
        <member name="M:Elastic.Apm.DistributedTracing.TraceState.ToTextHeader">
            <summary>
            Creates the tracestate text header to send in outgoing requests
            </summary>
            <returns>The tracestate text header</returns>
        </member>
        <member name="T:Elastic.Apm.DistributedTracing.TraceState.TracestateBuilder">
            <summary>
            Per thread <see cref="T:System.Text.StringBuilder"/> used to concatenate tracestate header.
            </summary>
        </member>
        <member name="M:Elastic.Apm.Extensions.ListExtensions.ContainsLike(System.Collections.Generic.List{System.String},System.String)">
            <summary>
            Similar to <see cref="M:System.Collections.Generic.List`1.Contains(`0)"/> but matches the string using
            a 'like' operator instead of an exact match
            </summary>
            <param name="list">The list in which to find the match</param>
            <param name="matchedString">The string to match</param>
            <returns></returns>
        </member>
        <member name="M:Elastic.Apm.Extensions.StringExtensions.IsLike(System.String,System.String,System.Boolean)">
            <summary>
            Enables wildcard string matching
            </summary>
            <param name="pattern">The pattern used for matchinf</param>
            <param name="text">String being matched</param>
            <param name="caseSensitive">Weather to match with case sensitivy</param>
            <returns></returns>
        </member>
        <member name="M:Elastic.Apm.Extensions.TransactionExtensions.CollectRequestBody(Elastic.Apm.Api.ITransaction,System.Boolean,Elastic.Apm.Helpers.IHttpRequestAdapter,Elastic.Apm.Logging.IApmLogger)">
            <summary>
            Collects the Request body in the transaction
            </summary>
            <param name="transaction">Transaction object</param>
            <param name="isForError">Is request body being captured for error (otherwise it's for transaction)</param>
            <param name="httpRequest">Current http request</param>
            <param name="logger">Logger object</param>
        </member>
        <member name="M:Elastic.Apm.Features.AgentFeaturesProvider.Get(Elastic.Apm.Logging.IApmLogger,Elastic.Apm.Helpers.IEnvironmentVariables)">
            <summary>
            Returns the agent feature set based on the current habitat (e.g. Azure, AWS Lambda, ...).
            </summary>
            <returns>The agent features.</returns>
        </member>
        <member name="M:Elastic.Apm.Features.AgentFeaturesProvider.Set(Elastic.Apm.Features.AgentFeatures)">
            <summary>
            Meant for testing purposes only.
            </summary>
            <param name="agentFeatures">The agent features.</param>
        </member>
        <member name="T:Elastic.Apm.Filters.ErrorContextSanitizerFilter">
            <summary>
            A filter that sanitizes fields on error based on the <see cref="P:Elastic.Apm.Config.IConfigurationReader.SanitizeFieldNames"/> setting
            </summary>
        </member>
        <member name="T:Elastic.Apm.Filters.HeaderDictionarySanitizerFilter">
            <summary>
            A filter that redacts HTTP headers based on the <see cref="P:Elastic.Apm.Config.IConfigurationReader.SanitizeFieldNames"/> setting
            </summary>
        </member>
        <member name="T:Elastic.Apm.Filters.SpanStackTraceCapturingFilter">
            <summary>
            Stack trace capturing itself happens on the application thread (in order to get the real stack trace).
            This filter turns <see cref="F:Elastic.Apm.Model.Span.RawStackTrace" /> (which is a plain .NET System.Diagnostics.StackTrace instance) into
            <see cref="P:Elastic.Apm.Model.Span.StackTrace" /> (which is the representation of the intake API stacktrace model).
            This can be done on a non-application thread right before the span gets sent to the APM Server.
            </summary>
        </member>
        <member name="T:Elastic.Apm.Filters.TransactionIgnoreUrlsFilter">
            <summary>
            Contains a transaction filter which filters out transactions based on request url path.
            </summary>
        </member>
        <member name="T:Elastic.Apm.Helpers.AgentSpinLock">
            <summary>
            Credit:
            https://stackoverflow.com/questions/6661055/using-interlocked-compareexchange-operation-on-a-bool-value/18027246
            </summary>
        </member>
        <member name="M:Elastic.Apm.Helpers.AgentSpinLock.TryAcquire">
            <summary>
            Attempts to acquire this lock
            </summary>
            <returns>
            true - if the attempt was successful
            false - otherwise
            </returns>
        </member>
        <member name="M:Elastic.Apm.Helpers.AgentSpinLock.Release">
            <summary>
            Releases this lock
            </summary>
            <exception cref="T:System.InvalidOperationException">If this lock is not currently in acquired state</exception>
        </member>
        <member name="T:Elastic.Apm.Helpers.Assertion">
            <summary>
            Assertion.IfEnabled?.That(...) is a replacement for System.Diagnostics.Contracts.Contract.Assert for agent's internal
            use -
            for us to catch bugs in agent's code. It might be problematic to use Contract.Assert because application might have it
            disabled or
            configured to do some strange things (pop GUI dialog boxes, etc.) so we need a separate runtime assertion facility
            that we can control independently of whatever monitored application uses.
            </summary>
        </member>
        <member name="M:Elastic.Apm.Helpers.DbConnectionStringParser.ExtractDestination(System.String)">
            <returns><c>Destination</c> if successful and <c>null</c> otherwise</returns>
        </member>
        <member name="M:Elastic.Apm.Helpers.DbConnectionStringParser.ExtractDestination(System.String,System.Boolean@)">
            <summary>
            Used only by tests.
            </summary>
        </member>
        <member name="M:Elastic.Apm.Helpers.DbConnectionStringParser.ParseConnectionString(System.String)">
            <returns><c>Destination</c> if successful and <c>null</c> otherwise</returns>
        </member>
        <member name="T:Elastic.Apm.Helpers.ExceptionFilter">
            <summary>
            Offers methods that can be used as exception filters.
            Within the filter we return false and capture the exception.
            Advantage: it avoid stack unwinding.
            </summary>
        </member>
        <member name="M:Elastic.Apm.Helpers.AgentTimerExtensions.TryAwaitOrTimeout(Elastic.Apm.Helpers.IAgentTimer,System.Threading.Tasks.Task,Elastic.Apm.Helpers.AgentTimeInstant,System.Threading.CancellationToken)">
            <summary>
            It's recommended to use this method (or another TryAwaitOrTimeout or AwaitOrTimeout method)
            instead of just Task.WhenAny(taskToAwait, Task.Delay(timeout))
            because this method cancels the timer for timeout while <c>Task.Delay(timeout)</c>.
            If the number of “zombie” timer jobs starts becoming significant, performance could suffer.
            For more detailed explanation see https://devblogs.microsoft.com/pfxteam/crafting-a-task-timeoutafter-method/
            </summary>
            <returns><c>true</c> if <c>taskToAwait</c> completed before the timeout, <c>false</c> otherwise</returns>
        </member>
        <member name="M:Elastic.Apm.Helpers.AgentTimerExtensions.TryAwaitOrTimeout``1(Elastic.Apm.Helpers.IAgentTimer,System.Threading.Tasks.Task{``0},Elastic.Apm.Helpers.AgentTimeInstant,System.Threading.CancellationToken)">
            <summary>
            It's recommended to use this method (or another TryAwaitOrTimeout or AwaitOrTimeout method)
            instead of just Task.WhenAny(taskToAwait, Task.Delay(timeout))
            because this method cancels the timer for timeout while <c>Task.Delay(timeout)</c>.
            If the number of “zombie” timer jobs starts becoming significant, performance could suffer.
            For more detailed explanation see https://devblogs.microsoft.com/pfxteam/crafting-a-task-timeoutafter-method/
            </summary>
            <returns>
            (<c>true</c>, result of <c>taskToAwait</c>) if <c>taskToAwait</c> completed before the timeout, <c>false</c>
            otherwise
            </returns>
        </member>
        <member name="M:Elastic.Apm.Helpers.AgentTimerExtensions.AwaitOrTimeout(Elastic.Apm.Helpers.IAgentTimer,System.Threading.Tasks.Task,Elastic.Apm.Helpers.AgentTimeInstant,System.Threading.CancellationToken)">
            <summary>
            It's recommended to use this method (or another TryAwaitOrTimeout or AwaitOrTimeout method)
            instead of just Task.WhenAny(taskToAwait, Task.Delay(timeout))
            because this method cancels the timer for timeout while <c>Task.Delay(timeout)</c>.
            If the number of “zombie” timer jobs starts becoming significant, performance could suffer.
            For more detailed explanation see https://devblogs.microsoft.com/pfxteam/crafting-a-task-timeoutafter-method/
            </summary>
            <exception cref="T:System.TimeoutException">Thrown when timeout expires before <c>taskToAwait</c> completes</exception>
        </member>
        <member name="M:Elastic.Apm.Helpers.AgentTimerExtensions.AwaitOrTimeout``1(Elastic.Apm.Helpers.IAgentTimer,System.Threading.Tasks.Task{``0},Elastic.Apm.Helpers.AgentTimeInstant,System.Threading.CancellationToken)">
            <summary>
            It's recommended to use this method (or another TryAwaitOrTimeout or AwaitOrTimeout method)
            instead of just Task.WhenAny(taskToAwait, Task.Delay(timeout))
            because this method cancels the timer for timeout while <c>Task.Delay(timeout)</c>.
            If the number of “zombie” timer jobs starts becoming significant, performance could suffer.
            For more detailed explanation see https://devblogs.microsoft.com/pfxteam/crafting-a-task-timeoutafter-method/
            </summary>
            <exception cref="T:System.TimeoutException">Thrown when timeout expires before <c>taskToAwait</c> completes</exception>
            <returns>
            (<c>true</c>, result of <c>taskToAwait</c>) if <c>taskToAwait</c> completed before the timeout, <c>false</c>
            otherwise
            </returns>
        </member>
        <member name="M:Elastic.Apm.Helpers.IHttpRequestAdapterExtensions.ExtractBody(Elastic.Apm.Helpers.IHttpRequestAdapter,Elastic.Apm.Logging.IApmLogger,Elastic.Apm.Config.IConfiguration)">
            <summary>
            Extracts the request body, up to a specified maximum length.
            The request body that is read is buffered.
            </summary>
            <param name="httpRequest">The request object (ASP.NET or ASP.NET Core)</param>
            <param name="logger">The logger</param>
            <param name="configuration">The configuration snapshot</param>
            <returns></returns>
        </member>
        <member name="F:Elastic.Apm.Helpers.LazyContextualInit`1._lock">
            <summary>
            Lock object is created on demand by LazyInitializer.EnsureInitialized
            https://docs.microsoft.com/en-us/dotnet/api/system.threading.lazyinitializer.ensureinitialized?view=netframework-4.8#System_Threading_LazyInitializer_EnsureInitialized__1___0__System_Boolean__System_Object__System_Func___0__
            </summary>
        </member>
        <member name="P:Elastic.Apm.Helpers.LazyContextualInit`1.IfNotInited">
            <summary>
            This method allows to optimize creating <c>producer</c>
            To use in the following manner: <c>ctxLazy.IfNotInited?.InitOrGet( ... ) ?? ctxLazy.Value</c>
            </summary>
            <returns><c>null</c> if value is already initialized and some non-<c>null</c> object otherwise</returns>
        </member>
        <member name="F:Elastic.Apm.Helpers.LazyContextualInit._lock">
            <summary>
            Lock object is created on demand by LazyInitializer.EnsureInitialized
            https://docs.microsoft.com/en-us/dotnet/api/system.threading.lazyinitializer.ensureinitialized?view=netframework-4.8#System_Threading_LazyInitializer_EnsureInitialized__1___0__System_Boolean__System_Object__System_Func___0__
            </summary>
        </member>
        <member name="P:Elastic.Apm.Helpers.LazyContextualInit.IfNotInited">
            <summary>
            This method allows to optimize creating <c>producer</c>
            To use in the following manner: <c>ctxLazy.IfNotInited?.Init( ... ) ?? false</c>
            <returns><c>null</c> if value is already initialized and some non-<c>null</c> object otherwise</returns>
            </summary>
        </member>
        <member name="F:Elastic.Apm.Helpers.PlatformDetection.IsDotNet">
            <summary>
            Indicates if the runtime is .NET 5 or a newer version.
            Specifically looks for ".NET [X]" format.
            </summary>
        </member>
        <member name="F:Elastic.Apm.Helpers.PlatformDetection.IsModernDotnet">
            <summary> Checks if runtime is .NET Core or .NET 5 and up </summary>
        </member>
        <member name="M:Elastic.Apm.Helpers.RandomGenerator.GenerateRandomBytesAsString(System.Byte[])">
            <summary>
            Creates a random generated byte array hex encoded into a string.
            </summary>
            <param name="bytes">
            The byte array that will be filled with a random number - this defines the length of the generated
            random bits
            </param>
            <returns>The random number hex encoded as string</returns>
        </member>
        <member name="M:Elastic.Apm.Helpers.Sanitization.Sanitize(System.Net.Http.HttpRequestMessage,System.Collections.Generic.IReadOnlyList{Elastic.Apm.Helpers.WildcardMatcher})">
            <summary>
            Sanitizes a <see cref="T:System.Net.Http.HttpRequestMessage"/>, redacting user info from the request URI and HTTP headers that
            match any of the matchers.
            </summary>
            <remarks>
            The <see cref="T:System.Net.Http.HttpRequestMessage"/> instance is mutated, so this method should not be used for logging
            **before** using the instance in a request.
            </remarks>
            <param name="message">The message to sanitize</param>
            <param name="matchers">The matchers used to redact HTTP headers</param>
            <returns>A sanitized <see cref="T:System.Net.Http.HttpRequestMessage"/></returns>
        </member>
        <member name="M:Elastic.Apm.Helpers.Sanitization.Sanitize(System.Uri)">
            <summary>
            Redacts username and password, if present
            </summary>
        </member>
        <member name="M:Elastic.Apm.Helpers.StacktraceHelper.GenerateApmStackTrace(System.Diagnostics.StackFrame[],Elastic.Apm.Logging.IApmLogger,Elastic.Apm.Config.IConfigurationReader,Elastic.Apm.ServerInfo.IApmServerInfo,System.String)">
            <summary>
            Turns a System.Diagnostic.StackFrame[] into a <see cref="T:Elastic.Apm.Api.CapturedStackFrame" /> list which can be reported to the APM
            Server
            </summary>
            <param name="frames">The stack frames to rewrite into APM stack traces</param>
            <param name="logger">The logger to emit exceptions on should one occur</param>
            <param name="apmServerInfo">The ServerInfo instance to query the server version</param>
            <param name="dbgCapturingFor">Just for logging.</param>
            <param name="configurationReader">
            Config reader - this controls the collection of stack traces (e.g. limit on frames,
            etc)
            </param>
            <returns>A prepared List that can be passed to the APM server</returns>
        </member>
        <member name="M:Elastic.Apm.Helpers.StacktraceHelper.GenerateApmStackTrace(System.Exception,Elastic.Apm.Logging.IApmLogger,System.String,Elastic.Apm.Config.IConfigurationReader,Elastic.Apm.ServerInfo.IApmServerInfo)">
            <summary>
             Turns an <see cref="T:System.Exception" /> into a <see cref="T:Elastic.Apm.Api.CapturedStackFrame" /> list which can be reported to the APM
            Server
            </summary>
            <param name="exception">The exception to rewrite into APM stack traces</param>
            <param name="logger">The logger to emit exceptions on should one occur</param>
            <param name="dbgCapturingFor">Just for logging.</param>
            <param name="configurationReader">
            Config reader - this controls the collection of stack traces (e.g. limit on frames,
            etc)
            </param>
            <param name="apmServerInfo">The server info instance to query the APM Server version</param>
            <returns>A prepared List that can be passed to the APM server</returns>
        </member>
        <member name="M:Elastic.Apm.Helpers.StacktraceHelper.GetRealMethodName(System.Reflection.MethodBase)">
            <summary>
             Finds real method name even for Async methods, full description of the issue is available here
            https://stackoverflow.com/a/28633192
            </summary>
            <param name="inputMethod">Method to discover</param>
            <returns>A real method name (even for async methods)</returns>
        </member>
        <member name="M:Elastic.Apm.Helpers.StringExtensions.Truncate(System.String,System.Int32)">
            <summary>
            Truncates the string to a given length, if longer than the length
            </summary>
        </member>
        <member name="M:Elastic.Apm.Helpers.TimeExtensions.ToHms(System.TimeSpan)">
            <summary>
            Converts time duration to "9d 8h 7m 6s 5ms" string representation
            </summary>
        </member>
        <member name="M:Elastic.Apm.Helpers.TimeExtensions.ToHmsInSeconds(System.TimeSpan)">
            <summary>
            Converts time duration to "9d 8h 7m 6s" (seconds resolution) string representation.
            If time duration has non-integer number of seconds the fractional part is truncated.
            If time duration is [0, 1s) range it is converted to "&lt;1s".
            If time duration is (-1s, 0] range it is converted to "&gt;-1s".
            </summary>
        </member>
        <member name="F:Elastic.Apm.Helpers.TimeUtils.UnixEpochDateTime">
            <summary>
            DateTime.UnixEpoch Field does not exist in .NET Standard 2.0
            https://docs.microsoft.com/en-us/dotnet/api/system.datetime.unixepoch
            </summary>
        </member>
        <member name="M:Elastic.Apm.Helpers.TimeUtils.ToTimestamp(System.DateTime)">
            <summary>
            UTC based and formatted as microseconds since Unix epoch.
            </summary>
            <param name="dateTimeToConvert">
            DateTime instance to convert to timestamp - its <see cref="P:System.DateTime.Kind" /> should be
            <see cref="F:System.DateTimeKind.Utc" />
            </param>
            <returns>UTC based and formatted as microseconds since Unix epoch</returns>
        </member>
        <member name="M:Elastic.Apm.Helpers.TimeUtils.DurationBetweenTimestamps(System.Int64,System.Int64)">
            <summary>
            Duration between timestamps in ms with 3 decimal points
            </summary>
            <returns>Duration between timestamps in ms with 3 decimal points</returns>
        </member>
        <member name="M:Elastic.Apm.Helpers.UrlUtils.ExtractDestination(System.Uri,Elastic.Apm.Logging.IApmLogger)">
            <returns><c>Destination</c> if successful and <c>null</c> otherwise</returns>
        </member>
        <member name="T:Elastic.Apm.Helpers.WildcardMatcher">
            <summary>
            Heavily inspired by the Java Elastic APM Agent.
            Wildcard matcher to e.g. sanitize strings.
            Examples: `/foo/*/bar/*/baz*`, `*foo*`.
            Matching is case insensitive by default.
            Prepending an element with `(?-i)` makes the matching case sensitive.
            </summary>
        </member>
        <member name="M:Elastic.Apm.Helpers.WildcardMatcher.Matches(System.String)">
            <summary>
            Checks if the given string matches the wildcard pattern.
            </summary>
            <param name="s">The string to match</param>
            <returns>Whether the string matches the given pattern</returns>
        </member>
        <member name="M:Elastic.Apm.Helpers.WildcardMatcher.Matches(System.String,System.String)">
            <summary>
            This is a different version of <see cref="M:Elastic.Apm.Helpers.WildcardMatcher.Matches(System.String)" /> which has the same semantics as calling
            <see cref="M:Elastic.Apm.Helpers.WildcardMatcher.Matches(System.String)" param=" firstPart + secondPart" />.
            The difference is that this method does not allocate memory.
            </summary>
            <param name="firstPart">The first part of the string to match against.</param>
            <param name="secondPart">The second part of the string to match against.</param>
            <returns><code>true</code> when the wildcard pattern matches the partitioned string, <code>false</code> otherwise. </returns>
        </member>
        <member name="M:Elastic.Apm.Helpers.WildcardMatcher.ValueOf(System.String)">
            <summary>
            Constructs a new <see cref="T:Elastic.Apm.Helpers.WildcardMatcher" /> via a wildcard string.
            By default, matches are a case insensitive.
            It supports the <code>*</code> wildcard which matches zero or more characters.
            Prepend <code>(?-i)</code> to your pattern to make it case sensitive.
            Example: <code>(?-i)foo*</code> matches the string <code>foobar</code> but does not match <code>FOOBAR</code>.
            </summary>
            <param name="wildcardString"></param>
            <returns></returns>
        </member>
        <member name="M:Elastic.Apm.Helpers.WildcardMatcher.IsAnyMatch(System.Collections.Generic.IReadOnlyList{Elastic.Apm.Helpers.WildcardMatcher},System.String)">
            <summary>
            Returns <code>true</code>, if any of the matchers match the provided string.
            </summary>
            <param name="matchers">The matchers which should be used to match the provided string</param>
            <param name="s">The string to match against</param>
            <returns><code>true</code>, if any of the matchers match the provided string</returns>
        </member>
        <member name="M:Elastic.Apm.Helpers.WildcardMatcher.AnyMatch(System.Collections.Generic.IReadOnlyList{Elastic.Apm.Helpers.WildcardMatcher},System.String)">
            <summary>
            Returns the first <see cref="T:Elastic.Apm.Helpers.WildcardMatcher" /> that matches the provided string.
            </summary>
            <param name="matchers"> The matchers which should be used to match the provided string</param>
            <param name="s">The string to match against</param>
            <returns>The first matching <see cref="T:Elastic.Apm.Helpers.WildcardMatcher" />, or <code>null</code> if none match.</returns>
        </member>
        <member name="M:Elastic.Apm.Helpers.WildcardMatcher.AnyMatch(System.Collections.Generic.IReadOnlyCollection{Elastic.Apm.Helpers.WildcardMatcher},System.String,System.String)">
            <summary>
            Returns the first <see cref="T:Elastic.Apm.Helpers.WildcardMatcher" /> that matches the provided partitioned string.
            </summary>
            <param name="matchers"> The matchers which should be used to match the provided string</param>
            <param name="firstPart"> The first part of the string to match against.</param>
            <param name="secondPart"> The second part of the string to match against.</param>
            <returns>The first matching <see cref="T:Elastic.Apm.Helpers.WildcardMatcher" />, or <code>null</code> if none match.</returns>
        </member>
        <member name="M:Elastic.Apm.Helpers.WildcardMatcher.IndexOfIgnoreCase(System.String,System.String,System.String,System.Boolean,System.Int32,System.Int32)">
            <summary>
            Based on https://stackoverflow.com/a/29809553/1125055
            Thx to Zach Vorhies
            </summary>
            <param name="haystack1"></param>
            <param name="haystack2"></param>
            <param name="needle"></param>
            <param name="ignoreCase"></param>
            <param name="start"></param>
            <param name="end"></param>
            <returns></returns>
        </member>
        <member name="T:Elastic.Apm.Helpers.WildcardMatcher.CompoundWildcardMatcher">
            <summary>
            This <see cref="T:Elastic.Apm.Helpers.WildcardMatcher" /> supports wildcards in the middle of the matcher by decomposing the matcher into
            several
            <see cref="T:Elastic.Apm.Helpers.WildcardMatcher.SimpleWildcardMatcher" />.
            </summary>
        </member>
        <member name="T:Elastic.Apm.Helpers.WildcardMatcher.SimpleWildcardMatcher">
            <summary>
            This <see cref="T:Elastic.Apm.Helpers.WildcardMatcher" /> does not support wildcards in the middle of a matcher.
            </summary>
        </member>
        <member name="P:Elastic.Apm.ICurrentExecutionSegmentsContainer.CurrentSpan">
            <summary>
            Gets or sets the current span
            </summary>
        </member>
        <member name="P:Elastic.Apm.ICurrentExecutionSegmentsContainer.CurrentTransaction">
            <summary>
            Gets or sets the current transaction
            </summary>
        </member>
        <member name="M:Elastic.Apm.Libraries.Ben.Demystifier.EnhancedStackFrame.GetFileColumnNumber">
            <summary>
                 Gets the column number in the file that contains the code that is executing.
                 This information is typically extracted from the debugging symbols for the executable.
            </summary>
            <returns>The file column number, or 0 (zero) if the file column number cannot be determined.</returns>
        </member>
        <member name="M:Elastic.Apm.Libraries.Ben.Demystifier.EnhancedStackFrame.GetFileLineNumber">
            <summary>
                Gets the line number in the file that contains the code that is executing.
                This information is typically extracted from the debugging symbols for the executable.
            </summary>
            <returns>The file line number, or 0 (zero) if the file line number cannot be determined.</returns>
        </member>
        <member name="M:Elastic.Apm.Libraries.Ben.Demystifier.EnhancedStackFrame.GetFileName">
            <summary>
                Gets the file name that contains the code that is executing.
                This information is typically extracted from the debugging symbols for the executable.
            </summary>
            <returns>The file name, or null if the file name cannot be determined.</returns>
        </member>
        <member name="M:Elastic.Apm.Libraries.Ben.Demystifier.EnhancedStackFrame.GetILOffset">
            <summary>
               Gets the offset from the start of the Microsoft intermediate language (MSIL)
               code for the method that is executing. This offset might be an approximation
               depending on whether or not the just-in-time (JIT) compiler is generating debugging
               code. The generation of this debugging information is controlled by the System.Diagnostics.DebuggableAttribute.
            </summary>
            <returns>The offset from the start of the MSIL code for the method that is executing.</returns>
        </member>
        <member name="M:Elastic.Apm.Libraries.Ben.Demystifier.EnhancedStackFrame.GetMethod">
            <summary>
                Gets the method in which the frame is executing.
            </summary>
            <returns>The method in which the frame is executing.</returns>
        </member>
        <member name="M:Elastic.Apm.Libraries.Ben.Demystifier.EnhancedStackFrame.GetNativeOffset">
            <summary>
                Gets the offset from the start of the native just-in-time (JIT)-compiled code
                for the method that is being executed. The generation of this debugging information
                is controlled by the System.Diagnostics.DebuggableAttribute class.
            </summary>
            <returns>The offset from the start of the JIT-compiled code for the method that is being executed.</returns>
        </member>
        <member name="M:Elastic.Apm.Libraries.Ben.Demystifier.EnhancedStackFrame.ToString">
            <summary>
                Builds a readable representation of the stack trace.
            </summary>
            <returns>A readable representation of the stack trace.</returns>
        </member>
        <member name="P:Elastic.Apm.Libraries.Ben.Demystifier.EnhancedStackTrace.FrameCount">
            <summary>
            Gets the number of frames in the stack trace.
            </summary>
            <returns>The number of frames in the stack trace.</returns>
        </member>
        <member name="M:Elastic.Apm.Libraries.Ben.Demystifier.EnhancedStackTrace.GetFrame(System.Int32)">
            <summary>
            Gets the specified stack frame.
            </summary>
            <param name="index">The index of the stack frame requested.</param>
            <returns>The specified stack frame.</returns>
        </member>
        <member name="M:Elastic.Apm.Libraries.Ben.Demystifier.EnhancedStackTrace.GetFrames">
            <summary>
                Returns a copy of all stack frames in the current stack trace.
            </summary>
            <returns>
                An array of type System.Diagnostics.StackFrame representing the function calls
                in the stack trace.
            </returns>
        </member>
        <member name="M:Elastic.Apm.Libraries.Ben.Demystifier.EnhancedStackTrace.ToString">
            <summary>
            Builds a readable representation of the stack trace.
            </summary>
            <returns>A readable representation of the stack trace.</returns>
        </member>
        <member name="M:Elastic.Apm.Libraries.Ben.Demystifier.EnhancedStackTrace.TryGetFullPath(System.String)">
            <summary>
            Tries to convert a given <paramref name="filePath" /> to a full path.
            Returns original value if the conversion isn't possible or a given path is relative.
            </summary>
        </member>
        <member name="P:Elastic.Apm.Libraries.Ben.Demystifier.Enumerable.EnumerableIList`1.Item(System.Int32)">
            <inheritdoc />
        </member>
        <member name="P:Elastic.Apm.Libraries.Ben.Demystifier.Enumerable.EnumerableIList`1.Count">
            <inheritdoc />
        </member>
        <member name="P:Elastic.Apm.Libraries.Ben.Demystifier.Enumerable.EnumerableIList`1.IsReadOnly">
            <inheritdoc />
        </member>
        <member name="M:Elastic.Apm.Libraries.Ben.Demystifier.Enumerable.EnumerableIList`1.Add(`0)">
            <inheritdoc />
        </member>
        <member name="M:Elastic.Apm.Libraries.Ben.Demystifier.Enumerable.EnumerableIList`1.Clear">
            <inheritdoc />
        </member>
        <member name="M:Elastic.Apm.Libraries.Ben.Demystifier.Enumerable.EnumerableIList`1.Contains(`0)">
            <inheritdoc />
        </member>
        <member name="M:Elastic.Apm.Libraries.Ben.Demystifier.Enumerable.EnumerableIList`1.CopyTo(`0[],System.Int32)">
            <inheritdoc />
        </member>
        <member name="M:Elastic.Apm.Libraries.Ben.Demystifier.Enumerable.EnumerableIList`1.IndexOf(`0)">
            <inheritdoc />
        </member>
        <member name="M:Elastic.Apm.Libraries.Ben.Demystifier.Enumerable.EnumerableIList`1.Insert(System.Int32,`0)">
            <inheritdoc />
        </member>
        <member name="M:Elastic.Apm.Libraries.Ben.Demystifier.Enumerable.EnumerableIList`1.Remove(`0)">
            <inheritdoc />
        </member>
        <member name="M:Elastic.Apm.Libraries.Ben.Demystifier.Enumerable.EnumerableIList`1.RemoveAt(System.Int32)">
            <inheritdoc />
        </member>
        <member name="M:Elastic.Apm.Libraries.Ben.Demystifier.ExceptionExtensions.Demystify``1(``0)">
            <summary>
            Demystifies the given <paramref name="exception" /> and tracks the original stack traces for the whole exception tree.
            </summary>
        </member>
        <member name="M:Elastic.Apm.Libraries.Ben.Demystifier.ExceptionExtensions.ToStringDemystified(System.Exception)">
            <summary>
            Gets demystified string representation of the <paramref name="exception" />.
            </summary>
            <remarks>
            <see cref="M:Elastic.Apm.Libraries.Ben.Demystifier.ExceptionExtensions.Demystify``1(``0)" /> method mutates the exception instance that can cause
            issues if a system relies on the stack trace be in the specific form.
            Unlike <see cref="M:Elastic.Apm.Libraries.Ben.Demystifier.ExceptionExtensions.Demystify``1(``0)" /> this method is pure. It calls <see cref="M:Elastic.Apm.Libraries.Ben.Demystifier.ExceptionExtensions.Demystify``1(``0)" /> first,
            computes a demystified string representation and then restores the original state of the exception back.
            </remarks>
        </member>
        <member name="T:Elastic.Apm.Libraries.Ben.Demystifier.Internal.ReflectionHelper">
            <summary>
            A helper class that contains utilities methods for dealing with reflection.
            </summary>
        </member>
        <member name="M:Elastic.Apm.Libraries.Ben.Demystifier.Internal.ReflectionHelper.IsValueTuple(System.Type)">
            <summary>
            Returns true if the <paramref name="type" /> is a value tuple type.
            </summary>
        </member>
        <member name="M:Elastic.Apm.Libraries.Ben.Demystifier.Internal.ReflectionHelper.IsTupleElementNameAttribue(System.Attribute)">
            <summary>
            Returns true if the given <paramref name="attribute" /> is of type <code>TupleElementNameAttribute</code>.
            </summary>
            <remarks>
            To avoid compile-time depencency hell with System.ValueTuple, this method uses reflection and not checks statically
            that
            the given <paramref name="attribute" /> is <code>TupleElementNameAttribute</code>.
            </remarks>
        </member>
        <member name="M:Elastic.Apm.Libraries.Ben.Demystifier.Internal.ReflectionHelper.GetTransformerNames(System.Attribute)">
            <summary>
            Returns 'TransformNames' property value from a given <paramref name="attribute" />.
            </summary>
            <remarks>
            To avoid compile-time depencency hell with System.ValueTuple, this method uses reflection
            instead of casting the attribute to a specific type.
            </remarks>
        </member>
        <member name="M:Elastic.Apm.Libraries.Ben.Demystifier.TypeNameHelper.GetTypeDisplayName(System.Type,System.Boolean,System.Boolean)">
            <summary>
            Pretty print a type name.
            </summary>
            <param name="type">The <see cref="T:System.Type" />.</param>
            <param name="fullName"><c>true</c> to print a fully qualified name.</param>
            <param name="includeGenericParameterNames"><c>true</c> to include generic parameter names.</param>
            <returns>The pretty printed type name.</returns>
        </member>
        <member name="M:Elastic.Apm.Libraries.Ben.Demystifier.TypeNameHelper.GetTypeNameForGenericType(System.Type)">
            <summary>
            Returns a name of given generic type without '`'.
            </summary>
        </member>
        <member name="T:Elastic.Apm.Libraries.Newtonsoft.Json.Bson.BsonObjectId">
            <summary>
            Represents a BSON Oid (object id).
            </summary>
        </member>
        <member name="M:Elastic.Apm.Libraries.Newtonsoft.Json.Bson.BsonObjectId.#ctor(System.Byte[])">
            <summary>
            Initializes a new instance of the <see cref="T:Elastic.Apm.Libraries.Newtonsoft.Json.Bson.BsonObjectId" /> class.
            </summary>
            <param name="value">The Oid value.</param>
        </member>
        <member name="P:Elastic.Apm.Libraries.Newtonsoft.Json.Bson.BsonObjectId.Value">
            <summary>
            Gets or sets the value of the Oid.
            </summary>
            <value>The value of the Oid.</value>
        </member>
        <member name="T:Elastic.Apm.Libraries.Newtonsoft.Json.Bson.BsonReader">
            <summary>
            Represents a reader that provides fast, non-cached, forward-only access to serialized BSON data.
            </summary>
        </member>
        <member name="M:Elastic.Apm.Libraries.Newtonsoft.Json.Bson.BsonReader.#ctor(System.IO.Stream)">
            <summary>
            Initializes a new instance of the <see cref="T:Elastic.Apm.Libraries.Newtonsoft.Json.Bson.BsonReader" /> class.
            </summary>
            <param name="stream">The <see cref="T:System.IO.Stream" /> containing the BSON data to read.</param>
        </member>
        <member name="M:Elastic.Apm.Libraries.Newtonsoft.Json.Bson.BsonReader.#ctor(System.IO.BinaryReader)">
            <summary>
            Initializes a new instance of the <see cref="T:Elastic.Apm.Libraries.Newtonsoft.Json.Bson.BsonReader" /> class.
            </summary>
            <param name="reader">The <see cref="T:System.IO.BinaryReader" /> containing the BSON data to read.</param>
        </member>
        <member name="M:Elastic.Apm.Libraries.Newtonsoft.Json.Bson.BsonReader.#ctor(System.IO.Stream,System.Boolean,System.DateTimeKind)">
            <summary>
            Initializes a new instance of the <see cref="T:Elastic.Apm.Libraries.Newtonsoft.Json.Bson.BsonReader" /> class.
            </summary>
            <param name="stream">The <see cref="T:System.IO.Stream" /> containing the BSON data to read.</param>
            <param name="readRootValueAsArray">if set to <c>true</c> the root object will be read as a JSON array.</param>
            <param name="dateTimeKindHandling">
            The <see cref="T:System.DateTimeKind" /> used when reading <see cref="T:System.DateTime" /> values
            from BSON.
            </param>
        </member>
        <member name="M:Elastic.Apm.Libraries.Newtonsoft.Json.Bson.BsonReader.#ctor(System.IO.BinaryReader,System.Boolean,System.DateTimeKind)">
            <summary>
            Initializes a new instance of the <see cref="T:Elastic.Apm.Libraries.Newtonsoft.Json.Bson.BsonReader" /> class.
            </summary>
            <param name="reader">The <see cref="T:System.IO.BinaryReader" /> containing the BSON data to read.</param>
            <param name="readRootValueAsArray">if set to <c>true</c> the root object will be read as a JSON array.</param>
            <param name="dateTimeKindHandling">
            The <see cref="T:System.DateTimeKind" /> used when reading <see cref="T:System.DateTime" /> values
            from BSON.
            </param>
        </member>
        <member name="P:Elastic.Apm.Libraries.Newtonsoft.Json.Bson.BsonReader.DateTimeKindHandling">
            <summary>
            Gets or sets the <see cref="T:System.DateTimeKind" /> used when reading <see cref="T:System.DateTime" /> values from BSON.
            </summary>
            <value>The <see cref="T:System.DateTimeKind" /> used when reading <see cref="T:System.DateTime" /> values from BSON.</value>
        </member>
        <member name="P:Elastic.Apm.Libraries.Newtonsoft.Json.Bson.BsonReader.JsonNet35BinaryCompatibility">
            <summary>
            Gets or sets a value indicating whether binary data reading should be compatible with incorrect Json.NET 3.5 written
            binary.
            </summary>
            <value>
            	<c>true</c> if binary data reading will be compatible with incorrect Json.NET 3.5 written binary; otherwise,
            <c>false</c>.
            </value>
        </member>
        <member name="P:Elastic.Apm.Libraries.Newtonsoft.Json.Bson.BsonReader.ReadRootValueAsArray">
            <summary>
            Gets or sets a value indicating whether the root object will be read as a JSON array.
            </summary>
            <value>
            	<c>true</c> if the root object will be read as a JSON array; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="M:Elastic.Apm.Libraries.Newtonsoft.Json.Bson.BsonReader.Read">
            <summary>
            Reads the next JSON token from the underlying <see cref="T:System.IO.Stream" />.
            </summary>
            <returns>
            <c>true</c> if the next token was read successfully; <c>false</c> if there are no more tokens to read.
            </returns>
        </member>
        <member name="M:Elastic.Apm.Libraries.Newtonsoft.Json.Bson.BsonReader.Close">
            <summary>
            Changes the reader's state to <see cref="F:Elastic.Apm.Libraries.Newtonsoft.Json.JsonReader.State.Closed" />.
            If <see cref="P:Elastic.Apm.Libraries.Newtonsoft.Json.JsonReader.CloseInput" /> is set to <c>true</c>, the underlying <see cref="T:System.IO.Stream" /> is also closed.
            </summary>
        </member>
        <member name="T:Elastic.Apm.Libraries.Newtonsoft.Json.Bson.BsonWriter">
            <summary>
            Represents a writer that provides a fast, non-cached, forward-only way of generating BSON data.
            </summary>
        </member>
        <member name="P:Elastic.Apm.Libraries.Newtonsoft.Json.Bson.BsonWriter.DateTimeKindHandling">
            <summary>
            Gets or sets the <see cref="T:System.DateTimeKind" /> used when writing <see cref="T:System.DateTime" /> values to BSON.
            When set to <see cref="F:System.DateTimeKind.Unspecified" /> no conversion will occur.
            </summary>
            <value>The <see cref="T:System.DateTimeKind" /> used when writing <see cref="T:System.DateTime" /> values to BSON.</value>
        </member>
        <member name="M:Elastic.Apm.Libraries.Newtonsoft.Json.Bson.BsonWriter.#ctor(System.IO.Stream)">
            <summary>
            Initializes a new instance of the <see cref="T:Elastic.Apm.Libraries.Newtonsoft.Json.Bson.BsonWriter" /> class.
            </summary>
            <param name="stream">The <see cref="T:System.IO.Stream" /> to write to.</param>
        </member>
        <member name="M:Elastic.Apm.Libraries.Newtonsoft.Json.Bson.BsonWriter.#ctor(System.IO.BinaryWriter)">
            <summary>
            Initializes a new instance of the <see cref="T:Elastic.Apm.Libraries.Newtonsoft.Json.Bson.BsonWriter" /> class.
            </summary>
            <param name="writer">The <see cref="T:System.IO.BinaryWriter" /> to write to.</param>
        </member>
        <member name="M:Elastic.Apm.Libraries.Newtonsoft.Json.Bson.BsonWriter.Flush">
            <summary>
            Flushes whatever is in the buffer to the underlying <see cref="T:System.IO.Stream" /> and also flushes the underlying stream.
            </summary>
        </member>
        <member name="M:Elastic.Apm.Libraries.Newtonsoft.Json.Bson.BsonWriter.WriteEnd(Elastic.Apm.Libraries.Newtonsoft.Json.JsonToken)">
            <summary>
            Writes the end.
            </summary>
            <param name="token">The token.</param>
        </member>
        <member name="M:Elastic.Apm.Libraries.Newtonsoft.Json.Bson.BsonWriter.WriteComment(System.String)">
            <summary>
            Writes a comment <c>/*...*/</c> containing the specified text.
            </summary>
            <param name="text">Text to place inside the comment.</param>
        </member>
        <member name="M:Elastic.Apm.Libraries.Newtonsoft.Json.Bson.BsonWriter.WriteStartConstructor(System.String)">
            <summary>
            Writes the start of a constructor with the given name.
            </summary>
            <param name="name">The name of the constructor.</param>
        </member>
        <member name="M:Elastic.Apm.Libraries.Newtonsoft.Json.Bson.BsonWriter.WriteRaw(System.String)">
            <summary>
            Writes raw JSON.
            </summary>
            <param name="json">The raw JSON to write.</param>
        </member>
        <member name="M:Elastic.Apm.Libraries.Newtonsoft.Json.Bson.BsonWriter.WriteRawValue(System.String)">
            <summary>
            Writes raw JSON where a value is expected and updates the writer's state.
            </summary>
            <param name="json">The raw JSON to write.</param>
        </member>
        <member name="M:Elastic.Apm.Libraries.Newtonsoft.Json.Bson.BsonWriter.WriteStartArray">
            <summary>
            Writes the beginning of a JSON array.
            </summary>
        </member>
        <member name="M:Elastic.Apm.Libraries.Newtonsoft.Json.Bson.BsonWriter.WriteStartObject">
            <summary>
            Writes the beginning of a JSON object.
            </summary>
        </member>
        <member name="M:Elastic.Apm.Libraries.Newtonsoft.Json.Bson.BsonWriter.WritePropertyName(System.String)">
            <summary>
            Writes the property name of a name/value pair on a JSON object.
            </summary>
            <param name="name">The name of the property.</param>
        </member>
        <member name="M:Elastic.Apm.Libraries.Newtonsoft.Json.Bson.BsonWriter.Close">
            <summary>
            Closes this writer.
            If <see cref="P:Elastic.Apm.Libraries.Newtonsoft.Json.JsonWriter.CloseOutput" /> is set to <c>true</c>, the underlying <see cref="T:System.IO.Stream" /> is also closed.
            If <see cref="P:Elastic.Apm.Libraries.Newtonsoft.Json.JsonWriter.AutoCompleteOnClose" /> is set to <c>true</c>, the JSON is auto-completed.
            </summary>
        </member>
        <member name="M:Elastic.Apm.Libraries.Newtonsoft.Json.Bson.BsonWriter.WriteValue(System.Object)">
            <summary>
            Writes a <see cref="T:System.Object" /> value.
            An error will raised if the value cannot be written as a single JSON token.
            </summary>
            <param name="value">The <see cref="T:System.Object" /> value to write.</param>
        </member>
        <member name="M:Elastic.Apm.Libraries.Newtonsoft.Json.Bson.BsonWriter.WriteNull">
            <summary>
            Writes a null value.
            </summary>
        </member>
        <member name="M:Elastic.Apm.Libraries.Newtonsoft.Json.Bson.BsonWriter.WriteUndefined">
            <summary>
            Writes an undefined value.
            </summary>
        </member>
        <member name="M:Elastic.Apm.Libraries.Newtonsoft.Json.Bson.BsonWriter.WriteValue(System.String)">
            <summary>
            Writes a <see cref="T:System.String" /> value.
            </summary>
            <param name="value">The <see cref="T:System.String" /> value to write.</param>
        </member>
        <member name="M:Elastic.Apm.Libraries.Newtonsoft.Json.Bson.BsonWriter.WriteValue(System.Int32)">
            <summary>
            Writes a <see cref="T:System.Int32" /> value.
            </summary>
            <param name="value">The <see cref="T:System.Int32" /> value to write.</param>
        </member>
        <member name="M:Elastic.Apm.Libraries.Newtonsoft.Json.Bson.BsonWriter.WriteValue(System.UInt32)">
            <summary>
            Writes a <see cref="T:System.UInt32" /> value.
            </summary>
            <param name="value">The <see cref="T:System.UInt32" /> value to write.</param>
        </member>
        <member name="M:Elastic.Apm.Libraries.Newtonsoft.Json.Bson.BsonWriter.WriteValue(System.Int64)">
            <summary>
            Writes a <see cref="T:System.Int64" /> value.
            </summary>
            <param name="value">The <see cref="T:System.Int64" /> value to write.</param>
        </member>
        <member name="M:Elastic.Apm.Libraries.Newtonsoft.Json.Bson.BsonWriter.WriteValue(System.UInt64)">
            <summary>
            Writes a <see cref="T:System.UInt64" /> value.
            </summary>
            <param name="value">The <see cref="T:System.UInt64" /> value to write.</param>
        </member>
        <member name="M:Elastic.Apm.Libraries.Newtonsoft.Json.Bson.BsonWriter.WriteValue(System.Single)">
            <summary>
            Writes a <see cref="T:System.Single" /> value.
            </summary>
            <param name="value">The <see cref="T:System.Single" /> value to write.</param>
        </member>
        <member name="M:Elastic.Apm.Libraries.Newtonsoft.Json.Bson.BsonWriter.WriteValue(System.Double)">
            <summary>
            Writes a <see cref="T:System.Double" /> value.
            </summary>
            <param name="value">The <see cref="T:System.Double" /> value to write.</param>
        </member>
        <member name="M:Elastic.Apm.Libraries.Newtonsoft.Json.Bson.BsonWriter.WriteValue(System.Boolean)">
            <summary>
            Writes a <see cref="T:System.Boolean" /> value.
            </summary>
            <param name="value">The <see cref="T:System.Boolean" /> value to write.</param>
        </member>
        <member name="M:Elastic.Apm.Libraries.Newtonsoft.Json.Bson.BsonWriter.WriteValue(System.Int16)">
            <summary>
            Writes a <see cref="T:System.Int16" /> value.
            </summary>
            <param name="value">The <see cref="T:System.Int16" /> value to write.</param>
        </member>
        <member name="M:Elastic.Apm.Libraries.Newtonsoft.Json.Bson.BsonWriter.WriteValue(System.UInt16)">
            <summary>
            Writes a <see cref="T:System.UInt16" /> value.
            </summary>
            <param name="value">The <see cref="T:System.UInt16" /> value to write.</param>
        </member>
        <member name="M:Elastic.Apm.Libraries.Newtonsoft.Json.Bson.BsonWriter.WriteValue(System.Char)">
            <summary>
            Writes a <see cref="T:System.Char" /> value.
            </summary>
            <param name="value">The <see cref="T:System.Char" /> value to write.</param>
        </member>
        <member name="M:Elastic.Apm.Libraries.Newtonsoft.Json.Bson.BsonWriter.WriteValue(System.Byte)">
            <summary>
            Writes a <see cref="T:System.Byte" /> value.
            </summary>
            <param name="value">The <see cref="T:System.Byte" /> value to write.</param>
        </member>
        <member name="M:Elastic.Apm.Libraries.Newtonsoft.Json.Bson.BsonWriter.WriteValue(System.SByte)">
            <summary>
            Writes a <see cref="T:System.SByte" /> value.
            </summary>
            <param name="value">The <see cref="T:System.SByte" /> value to write.</param>
        </member>
        <member name="M:Elastic.Apm.Libraries.Newtonsoft.Json.Bson.BsonWriter.WriteValue(System.Decimal)">
            <summary>
            Writes a <see cref="T:System.Decimal" /> value.
            </summary>
            <param name="value">The <see cref="T:System.Decimal" /> value to write.</param>
        </member>
        <member name="M:Elastic.Apm.Libraries.Newtonsoft.Json.Bson.BsonWriter.WriteValue(System.DateTime)">
            <summary>
            Writes a <see cref="T:System.DateTime" /> value.
            </summary>
            <param name="value">The <see cref="T:System.DateTime" /> value to write.</param>
        </member>
        <member name="M:Elastic.Apm.Libraries.Newtonsoft.Json.Bson.BsonWriter.WriteValue(System.DateTimeOffset)">
            <summary>
            Writes a <see cref="T:System.DateTimeOffset"/> value.
            </summary>
            <param name="value">The <see cref="T:System.DateTimeOffset"/> value to write.</param>
        </member>
        <member name="M:Elastic.Apm.Libraries.Newtonsoft.Json.Bson.BsonWriter.WriteValue(System.Byte[])">
            <summary>
            Writes a <see cref="T:System.Byte" />[] value.
            </summary>
            <param name="value">The <see cref="T:System.Byte" />[] value to write.</param>
        </member>
        <member name="M:Elastic.Apm.Libraries.Newtonsoft.Json.Bson.BsonWriter.WriteValue(System.Guid)">
            <summary>
            Writes a <see cref="T:System.Guid" /> value.
            </summary>
            <param name="value">The <see cref="T:System.Guid" /> value to write.</param>
        </member>
        <member name="M:Elastic.Apm.Libraries.Newtonsoft.Json.Bson.BsonWriter.WriteValue(System.TimeSpan)">
            <summary>
            Writes a <see cref="T:System.TimeSpan" /> value.
            </summary>
            <param name="value">The <see cref="T:System.TimeSpan" /> value to write.</param>
        </member>
        <member name="M:Elastic.Apm.Libraries.Newtonsoft.Json.Bson.BsonWriter.WriteValue(System.Uri)">
            <summary>
            Writes a <see cref="T:System.Uri" /> value.
            </summary>
            <param name="value">The <see cref="T:System.Uri" /> value to write.</param>
        </member>
        <member name="M:Elastic.Apm.Libraries.Newtonsoft.Json.Bson.BsonWriter.WriteObjectId(System.Byte[])">
            <summary>
            Writes a <see cref="T:System.Byte" />[] value that represents a BSON object id.
            </summary>
            <param name="value">The Object ID value to write.</param>
        </member>
        <member name="M:Elastic.Apm.Libraries.Newtonsoft.Json.Bson.BsonWriter.WriteRegex(System.String,System.String)">
            <summary>
            Writes a BSON regex.
            </summary>
            <param name="pattern">The regex pattern.</param>
            <param name="options">The regex options.</param>
        </member>
        <member name="T:Elastic.Apm.Libraries.Newtonsoft.Json.ConstructorHandling">
            <summary>
            Specifies how constructors are used when initializing objects during deserialization by the
            <see cref="T:Elastic.Apm.Libraries.Newtonsoft.Json.JsonSerializer" />.
            </summary>
        </member>
        <member name="F:Elastic.Apm.Libraries.Newtonsoft.Json.ConstructorHandling.Default">
            <summary>
            First attempt to use the public default constructor, then fall back to a single parameterized constructor, then to the
            non-public default constructor.
            </summary>
        </member>
        <member name="F:Elastic.Apm.Libraries.Newtonsoft.Json.ConstructorHandling.AllowNonPublicDefaultConstructor">
            <summary>
            Json.NET will use a non-public default constructor before falling back to a parameterized constructor.
            </summary>
        </member>
        <member name="T:Elastic.Apm.Libraries.Newtonsoft.Json.Converters.BinaryConverter">
            <summary>
            Converts a binary value to and from a base 64 string value.
            </summary>
        </member>
        <member name="M:Elastic.Apm.Libraries.Newtonsoft.Json.Converters.BinaryConverter.WriteJson(Elastic.Apm.Libraries.Newtonsoft.Json.JsonWriter,System.Object,Elastic.Apm.Libraries.Newtonsoft.Json.JsonSerializer)">
            <summary>
            Writes the JSON representation of the object.
            </summary>
            <param name="writer">The <see cref="T:Elastic.Apm.Libraries.Newtonsoft.Json.JsonWriter"/> to write to.</param>
            <param name="value">The value.</param>
            <param name="serializer">The calling serializer.</param>
        </member>
        <member name="M:Elastic.Apm.Libraries.Newtonsoft.Json.Converters.BinaryConverter.ReadJson(Elastic.Apm.Libraries.Newtonsoft.Json.JsonReader,System.Type,System.Object,Elastic.Apm.Libraries.Newtonsoft.Json.JsonSerializer)">
            <summary>
            Reads the JSON representation of the object.
            </summary>
            <param name="reader">The <see cref="T:Elastic.Apm.Libraries.Newtonsoft.Json.JsonReader"/> to read from.</param>
            <param name="objectType">Type of the object.</param>
            <param name="existingValue">The existing value of object being read.</param>
            <param name="serializer">The calling serializer.</param>
            <returns>The object value.</returns>
        </member>
        <member name="M:Elastic.Apm.Libraries.Newtonsoft.Json.Converters.BinaryConverter.CanConvert(System.Type)">
            <summary>
            Determines whether this instance can convert the specified object type.
            </summary>
            <param name="objectType">Type of the object.</param>
            <returns>
            	<c>true</c> if this instance can convert the specified object type; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="T:Elastic.Apm.Libraries.Newtonsoft.Json.Converters.BsonObjectIdConverter">
            <summary>
            Converts a <see cref="T:Elastic.Apm.Libraries.Newtonsoft.Json.Bson.BsonObjectId" /> to and from JSON and BSON.
            </summary>
        </member>
        <member name="M:Elastic.Apm.Libraries.Newtonsoft.Json.Converters.BsonObjectIdConverter.WriteJson(Elastic.Apm.Libraries.Newtonsoft.Json.JsonWriter,System.Object,Elastic.Apm.Libraries.Newtonsoft.Json.JsonSerializer)">
            <summary>
            Writes the JSON representation of the object.
            </summary>
            <param name="writer">The <see cref="T:Elastic.Apm.Libraries.Newtonsoft.Json.JsonWriter" /> to write to.</param>
            <param name="value">The value.</param>
            <param name="serializer">The calling serializer.</param>
        </member>
        <member name="M:Elastic.Apm.Libraries.Newtonsoft.Json.Converters.BsonObjectIdConverter.ReadJson(Elastic.Apm.Libraries.Newtonsoft.Json.JsonReader,System.Type,System.Object,Elastic.Apm.Libraries.Newtonsoft.Json.JsonSerializer)">
            <summary>
            Reads the JSON representation of the object.
            </summary>
            <param name="reader">The <see cref="T:Elastic.Apm.Libraries.Newtonsoft.Json.JsonReader" /> to read from.</param>
            <param name="objectType">Type of the object.</param>
            <param name="existingValue">The existing value of object being read.</param>
            <param name="serializer">The calling serializer.</param>
            <returns>The object value.</returns>
        </member>
        <member name="M:Elastic.Apm.Libraries.Newtonsoft.Json.Converters.BsonObjectIdConverter.CanConvert(System.Type)">
            <summary>
            Determines whether this instance can convert the specified object type.
            </summary>
            <param name="objectType">Type of the object.</param>
            <returns>
            	<c>true</c> if this instance can convert the specified object type; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="T:Elastic.Apm.Libraries.Newtonsoft.Json.Converters.CustomCreationConverter`1">
            <summary>
            Creates a custom object.
            </summary>
            <typeparam name="T">The object type to convert.</typeparam>
        </member>
        <member name="M:Elastic.Apm.Libraries.Newtonsoft.Json.Converters.CustomCreationConverter`1.Create(System.Type)">
            <summary>
            Creates an object which will then be populated by the serializer.
            </summary>
            <param name="objectType">Type of the object.</param>
            <returns>The created object.</returns>
        </member>
        <member name="P:Elastic.Apm.Libraries.Newtonsoft.Json.Converters.CustomCreationConverter`1.CanWrite">
            <summary>
            Gets a value indicating whether this <see cref="T:Elastic.Apm.Libraries.Newtonsoft.Json.JsonConverter" /> can write JSON.
            </summary>
            <value>
            	<c>true</c> if this <see cref="T:Elastic.Apm.Libraries.Newtonsoft.Json.JsonConverter" /> can write JSON; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="M:Elastic.Apm.Libraries.Newtonsoft.Json.Converters.CustomCreationConverter`1.WriteJson(Elastic.Apm.Libraries.Newtonsoft.Json.JsonWriter,System.Object,Elastic.Apm.Libraries.Newtonsoft.Json.JsonSerializer)">
            <summary>
            Writes the JSON representation of the object.
            </summary>
            <param name="writer">The <see cref="T:Elastic.Apm.Libraries.Newtonsoft.Json.JsonWriter" /> to write to.</param>
            <param name="value">The value.</param>
            <param name="serializer">The calling serializer.</param>
        </member>
        <member name="M:Elastic.Apm.Libraries.Newtonsoft.Json.Converters.CustomCreationConverter`1.ReadJson(Elastic.Apm.Libraries.Newtonsoft.Json.JsonReader,System.Type,System.Object,Elastic.Apm.Libraries.Newtonsoft.Json.JsonSerializer)">
            <summary>
            Reads the JSON representation of the object.
            </summary>
            <param name="reader">The <see cref="T:Elastic.Apm.Libraries.Newtonsoft.Json.JsonReader" /> to read from.</param>
            <param name="objectType">Type of the object.</param>
            <param name="existingValue">The existing value of object being read.</param>
            <param name="serializer">The calling serializer.</param>
            <returns>The object value.</returns>
        </member>
        <member name="M:Elastic.Apm.Libraries.Newtonsoft.Json.Converters.CustomCreationConverter`1.CanConvert(System.Type)">
            <summary>
            Determines whether this instance can convert the specified object type.
            </summary>
            <param name="objectType">Type of the object.</param>
            <returns>
            	<c>true</c> if this instance can convert the specified object type; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="T:Elastic.Apm.Libraries.Newtonsoft.Json.Converters.DataSetConverter">
            <summary>
            Converts a <see cref="T:System.Data.DataSet"/> to and from JSON.
            </summary>
        </member>
        <member name="M:Elastic.Apm.Libraries.Newtonsoft.Json.Converters.DataSetConverter.WriteJson(Elastic.Apm.Libraries.Newtonsoft.Json.JsonWriter,System.Object,Elastic.Apm.Libraries.Newtonsoft.Json.JsonSerializer)">
            <summary>
            Writes the JSON representation of the object.
            </summary>
            <param name="writer">The <see cref="T:Elastic.Apm.Libraries.Newtonsoft.Json.JsonWriter"/> to write to.</param>
            <param name="value">The value.</param>
            <param name="serializer">The calling serializer.</param>
        </member>
        <member name="M:Elastic.Apm.Libraries.Newtonsoft.Json.Converters.DataSetConverter.ReadJson(Elastic.Apm.Libraries.Newtonsoft.Json.JsonReader,System.Type,System.Object,Elastic.Apm.Libraries.Newtonsoft.Json.JsonSerializer)">
            <summary>
            Reads the JSON representation of the object.
            </summary>
            <param name="reader">The <see cref="T:Elastic.Apm.Libraries.Newtonsoft.Json.JsonReader"/> to read from.</param>
            <param name="objectType">Type of the object.</param>
            <param name="existingValue">The existing value of object being read.</param>
            <param name="serializer">The calling serializer.</param>
            <returns>The object value.</returns>
        </member>
        <member name="M:Elastic.Apm.Libraries.Newtonsoft.Json.Converters.DataSetConverter.CanConvert(System.Type)">
            <summary>
            Determines whether this instance can convert the specified value type.
            </summary>
            <param name="valueType">Type of the value.</param>
            <returns>
            	<c>true</c> if this instance can convert the specified value type; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="T:Elastic.Apm.Libraries.Newtonsoft.Json.Converters.DataTableConverter">
            <summary>
            Converts a <see cref="T:System.Data.DataTable"/> to and from JSON.
            </summary>
        </member>
        <member name="M:Elastic.Apm.Libraries.Newtonsoft.Json.Converters.DataTableConverter.WriteJson(Elastic.Apm.Libraries.Newtonsoft.Json.JsonWriter,System.Object,Elastic.Apm.Libraries.Newtonsoft.Json.JsonSerializer)">
            <summary>
            Writes the JSON representation of the object.
            </summary>
            <param name="writer">The <see cref="T:Elastic.Apm.Libraries.Newtonsoft.Json.JsonWriter"/> to write to.</param>
            <param name="value">The value.</param>
            <param name="serializer">The calling serializer.</param>
        </member>
        <member name="M:Elastic.Apm.Libraries.Newtonsoft.Json.Converters.DataTableConverter.ReadJson(Elastic.Apm.Libraries.Newtonsoft.Json.JsonReader,System.Type,System.Object,Elastic.Apm.Libraries.Newtonsoft.Json.JsonSerializer)">
            <summary>
            Reads the JSON representation of the object.
            </summary>
            <param name="reader">The <see cref="T:Elastic.Apm.Libraries.Newtonsoft.Json.JsonReader"/> to read from.</param>
            <param name="objectType">Type of the object.</param>
            <param name="existingValue">The existing value of object being read.</param>
            <param name="serializer">The calling serializer.</param>
            <returns>The object value.</returns>
        </member>
        <member name="M:Elastic.Apm.Libraries.Newtonsoft.Json.Converters.DataTableConverter.CanConvert(System.Type)">
            <summary>
            Determines whether this instance can convert the specified value type.
            </summary>
            <param name="valueType">Type of the value.</param>
            <returns>
            	<c>true</c> if this instance can convert the specified value type; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="T:Elastic.Apm.Libraries.Newtonsoft.Json.Converters.DateTimeConverterBase">
            <summary>
            Provides a base class for converting a <see cref="T:System.DateTime" /> to and from JSON.
            </summary>
        </member>
        <member name="M:Elastic.Apm.Libraries.Newtonsoft.Json.Converters.DateTimeConverterBase.CanConvert(System.Type)">
            <summary>
            Determines whether this instance can convert the specified object type.
            </summary>
            <param name="objectType">Type of the object.</param>
            <returns>
            	<c>true</c> if this instance can convert the specified object type; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="T:Elastic.Apm.Libraries.Newtonsoft.Json.Converters.DiscriminatedUnionConverter">
            <summary>
            Converts a F# discriminated union type to and from JSON.
            </summary>
        </member>
        <member name="M:Elastic.Apm.Libraries.Newtonsoft.Json.Converters.DiscriminatedUnionConverter.WriteJson(Elastic.Apm.Libraries.Newtonsoft.Json.JsonWriter,System.Object,Elastic.Apm.Libraries.Newtonsoft.Json.JsonSerializer)">
            <summary>
            Writes the JSON representation of the object.
            </summary>
            <param name="writer">The <see cref="T:Elastic.Apm.Libraries.Newtonsoft.Json.JsonWriter"/> to write to.</param>
            <param name="value">The value.</param>
            <param name="serializer">The calling serializer.</param>
        </member>
        <member name="M:Elastic.Apm.Libraries.Newtonsoft.Json.Converters.DiscriminatedUnionConverter.ReadJson(Elastic.Apm.Libraries.Newtonsoft.Json.JsonReader,System.Type,System.Object,Elastic.Apm.Libraries.Newtonsoft.Json.JsonSerializer)">
            <summary>
            Reads the JSON representation of the object.
            </summary>
            <param name="reader">The <see cref="T:Elastic.Apm.Libraries.Newtonsoft.Json.JsonReader"/> to read from.</param>
            <param name="objectType">Type of the object.</param>
            <param name="existingValue">The existing value of object being read.</param>
            <param name="serializer">The calling serializer.</param>
            <returns>The object value.</returns>
        </member>
        <member name="M:Elastic.Apm.Libraries.Newtonsoft.Json.Converters.DiscriminatedUnionConverter.CanConvert(System.Type)">
            <summary>
            Determines whether this instance can convert the specified object type.
            </summary>
            <param name="objectType">Type of the object.</param>
            <returns>
            	<c>true</c> if this instance can convert the specified object type; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="T:Elastic.Apm.Libraries.Newtonsoft.Json.Converters.EntityKeyMemberConverter">
            <summary>
            Converts an Entity Framework <see cref="T:System.Data.EntityKeyMember"/> to and from JSON.
            </summary>
        </member>
        <member name="M:Elastic.Apm.Libraries.Newtonsoft.Json.Converters.EntityKeyMemberConverter.WriteJson(Elastic.Apm.Libraries.Newtonsoft.Json.JsonWriter,System.Object,Elastic.Apm.Libraries.Newtonsoft.Json.JsonSerializer)">
            <summary>
            Writes the JSON representation of the object.
            </summary>
            <param name="writer">The <see cref="T:Elastic.Apm.Libraries.Newtonsoft.Json.JsonWriter"/> to write to.</param>
            <param name="value">The value.</param>
            <param name="serializer">The calling serializer.</param>
        </member>
        <member name="M:Elastic.Apm.Libraries.Newtonsoft.Json.Converters.EntityKeyMemberConverter.ReadJson(Elastic.Apm.Libraries.Newtonsoft.Json.JsonReader,System.Type,System.Object,Elastic.Apm.Libraries.Newtonsoft.Json.JsonSerializer)">
            <summary>
            Reads the JSON representation of the object.
            </summary>
            <param name="reader">The <see cref="T:Elastic.Apm.Libraries.Newtonsoft.Json.JsonReader"/> to read from.</param>
            <param name="objectType">Type of the object.</param>
            <param name="existingValue">The existing value of object being read.</param>
            <param name="serializer">The calling serializer.</param>
            <returns>The object value.</returns>
        </member>
        <member name="M:Elastic.Apm.Libraries.Newtonsoft.Json.Converters.EntityKeyMemberConverter.CanConvert(System.Type)">
            <summary>
            Determines whether this instance can convert the specified object type.
            </summary>
            <param name="objectType">Type of the object.</param>
            <returns>
            	<c>true</c> if this instance can convert the specified object type; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="T:Elastic.Apm.Libraries.Newtonsoft.Json.Converters.ExpandoObjectConverter">
            <summary>
            Converts an <see cref="T:System.Dynamic.ExpandoObject"/> to and from JSON.
            </summary>
        </member>
        <member name="M:Elastic.Apm.Libraries.Newtonsoft.Json.Converters.ExpandoObjectConverter.WriteJson(Elastic.Apm.Libraries.Newtonsoft.Json.JsonWriter,System.Object,Elastic.Apm.Libraries.Newtonsoft.Json.JsonSerializer)">
            <summary>
            Writes the JSON representation of the object.
            </summary>
            <param name="writer">The <see cref="T:Elastic.Apm.Libraries.Newtonsoft.Json.JsonWriter"/> to write to.</param>
            <param name="value">The value.</param>
            <param name="serializer">The calling serializer.</param>
        </member>
        <member name="M:Elastic.Apm.Libraries.Newtonsoft.Json.Converters.ExpandoObjectConverter.ReadJson(Elastic.Apm.Libraries.Newtonsoft.Json.JsonReader,System.Type,System.Object,Elastic.Apm.Libraries.Newtonsoft.Json.JsonSerializer)">
            <summary>
            Reads the JSON representation of the object.
            </summary>
            <param name="reader">The <see cref="T:Elastic.Apm.Libraries.Newtonsoft.Json.JsonReader"/> to read from.</param>
            <param name="objectType">Type of the object.</param>
            <param name="existingValue">The existing value of object being read.</param>
            <param name="serializer">The calling serializer.</param>
            <returns>The object value.</returns>
        </member>
        <member name="M:Elastic.Apm.Libraries.Newtonsoft.Json.Converters.ExpandoObjectConverter.CanConvert(System.Type)">
            <summary>
            Determines whether this instance can convert the specified object type.
            </summary>
            <param name="objectType">Type of the object.</param>
            <returns>
            	<c>true</c> if this instance can convert the specified object type; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="P:Elastic.Apm.Libraries.Newtonsoft.Json.Converters.ExpandoObjectConverter.CanWrite">
            <summary>
            Gets a value indicating whether this <see cref="T:Elastic.Apm.Libraries.Newtonsoft.Json.JsonConverter"/> can write JSON.
            </summary>
            <value>
            	<c>true</c> if this <see cref="T:Elastic.Apm.Libraries.Newtonsoft.Json.JsonConverter"/> can write JSON; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="T:Elastic.Apm.Libraries.Newtonsoft.Json.Converters.IsoDateTimeConverter">
            <summary>
            Converts a <see cref="T:System.DateTime" /> to and from the ISO 8601 date format (e.g. <c>"2008-04-12T12:53Z"</c>).
            </summary>
        </member>
        <member name="P:Elastic.Apm.Libraries.Newtonsoft.Json.Converters.IsoDateTimeConverter.Culture">
            <summary>
            Gets or sets the culture used when converting a date to and from JSON.
            </summary>
            <value>The culture used when converting a date to and from JSON.</value>
        </member>
        <member name="P:Elastic.Apm.Libraries.Newtonsoft.Json.Converters.IsoDateTimeConverter.DateTimeFormat">
            <summary>
            Gets or sets the date time format used when converting a date to and from JSON.
            </summary>
            <value>The date time format used when converting a date to and from JSON.</value>
        </member>
        <member name="P:Elastic.Apm.Libraries.Newtonsoft.Json.Converters.IsoDateTimeConverter.DateTimeStyles">
            <summary>
            Gets or sets the date time styles used when converting a date to and from JSON.
            </summary>
            <value>The date time styles used when converting a date to and from JSON.</value>
        </member>
        <member name="M:Elastic.Apm.Libraries.Newtonsoft.Json.Converters.IsoDateTimeConverter.WriteJson(Elastic.Apm.Libraries.Newtonsoft.Json.JsonWriter,System.Object,Elastic.Apm.Libraries.Newtonsoft.Json.JsonSerializer)">
            <summary>
            Writes the JSON representation of the object.
            </summary>
            <param name="writer">The <see cref="T:Elastic.Apm.Libraries.Newtonsoft.Json.JsonWriter" /> to write to.</param>
            <param name="value">The value.</param>
            <param name="serializer">The calling serializer.</param>
        </member>
        <member name="M:Elastic.Apm.Libraries.Newtonsoft.Json.Converters.IsoDateTimeConverter.ReadJson(Elastic.Apm.Libraries.Newtonsoft.Json.JsonReader,System.Type,System.Object,Elastic.Apm.Libraries.Newtonsoft.Json.JsonSerializer)">
            <summary>
            Reads the JSON representation of the object.
            </summary>
            <param name="reader">The <see cref="T:Elastic.Apm.Libraries.Newtonsoft.Json.JsonReader" /> to read from.</param>
            <param name="objectType">Type of the object.</param>
            <param name="existingValue">The existing value of object being read.</param>
            <param name="serializer">The calling serializer.</param>
            <returns>The object value.</returns>
        </member>
        <member name="T:Elastic.Apm.Libraries.Newtonsoft.Json.Converters.JavaScriptDateTimeConverter">
            <summary>
            Converts a <see cref="T:System.DateTime" /> to and from a JavaScript <c>Date</c> constructor (e.g. <c>new Date(52231943)</c>).
            </summary>
        </member>
        <member name="M:Elastic.Apm.Libraries.Newtonsoft.Json.Converters.JavaScriptDateTimeConverter.WriteJson(Elastic.Apm.Libraries.Newtonsoft.Json.JsonWriter,System.Object,Elastic.Apm.Libraries.Newtonsoft.Json.JsonSerializer)">
            <summary>
            Writes the JSON representation of the object.
            </summary>
            <param name="writer">The <see cref="T:Elastic.Apm.Libraries.Newtonsoft.Json.JsonWriter" /> to write to.</param>
            <param name="value">The value.</param>
            <param name="serializer">The calling serializer.</param>
        </member>
        <member name="M:Elastic.Apm.Libraries.Newtonsoft.Json.Converters.JavaScriptDateTimeConverter.ReadJson(Elastic.Apm.Libraries.Newtonsoft.Json.JsonReader,System.Type,System.Object,Elastic.Apm.Libraries.Newtonsoft.Json.JsonSerializer)">
            <summary>
            Reads the JSON representation of the object.
            </summary>
            <param name="reader">The <see cref="T:Elastic.Apm.Libraries.Newtonsoft.Json.JsonReader" /> to read from.</param>
            <param name="objectType">Type of the object.</param>
            <param name="existingValue">The existing property value of the JSON that is being converted.</param>
            <param name="serializer">The calling serializer.</param>
            <returns>The object value.</returns>
        </member>
        <member name="T:Elastic.Apm.Libraries.Newtonsoft.Json.Converters.KeyValuePairConverter">
            <summary>
            Converts a <see cref="T:System.Collections.Generic.KeyValuePair`2" /> to and from JSON.
            </summary>
        </member>
        <member name="M:Elastic.Apm.Libraries.Newtonsoft.Json.Converters.KeyValuePairConverter.WriteJson(Elastic.Apm.Libraries.Newtonsoft.Json.JsonWriter,System.Object,Elastic.Apm.Libraries.Newtonsoft.Json.JsonSerializer)">
            <summary>
            Writes the JSON representation of the object.
            </summary>
            <param name="writer">The <see cref="T:Elastic.Apm.Libraries.Newtonsoft.Json.JsonWriter" /> to write to.</param>
            <param name="value">The value.</param>
            <param name="serializer">The calling serializer.</param>
        </member>
        <member name="M:Elastic.Apm.Libraries.Newtonsoft.Json.Converters.KeyValuePairConverter.ReadJson(Elastic.Apm.Libraries.Newtonsoft.Json.JsonReader,System.Type,System.Object,Elastic.Apm.Libraries.Newtonsoft.Json.JsonSerializer)">
            <summary>
            Reads the JSON representation of the object.
            </summary>
            <param name="reader">The <see cref="T:Elastic.Apm.Libraries.Newtonsoft.Json.JsonReader" /> to read from.</param>
            <param name="objectType">Type of the object.</param>
            <param name="existingValue">The existing value of object being read.</param>
            <param name="serializer">The calling serializer.</param>
            <returns>The object value.</returns>
        </member>
        <member name="M:Elastic.Apm.Libraries.Newtonsoft.Json.Converters.KeyValuePairConverter.CanConvert(System.Type)">
            <summary>
            Determines whether this instance can convert the specified object type.
            </summary>
            <param name="objectType">Type of the object.</param>
            <returns>
            	<c>true</c> if this instance can convert the specified object type; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="T:Elastic.Apm.Libraries.Newtonsoft.Json.Converters.RegexConverter">
            <summary>
            Converts a <see cref="T:System.Text.RegularExpressions.Regex" /> to and from JSON and BSON.
            </summary>
        </member>
        <member name="M:Elastic.Apm.Libraries.Newtonsoft.Json.Converters.RegexConverter.WriteJson(Elastic.Apm.Libraries.Newtonsoft.Json.JsonWriter,System.Object,Elastic.Apm.Libraries.Newtonsoft.Json.JsonSerializer)">
            <summary>
            Writes the JSON representation of the object.
            </summary>
            <param name="writer">The <see cref="T:Elastic.Apm.Libraries.Newtonsoft.Json.JsonWriter" /> to write to.</param>
            <param name="value">The value.</param>
            <param name="serializer">The calling serializer.</param>
        </member>
        <member name="M:Elastic.Apm.Libraries.Newtonsoft.Json.Converters.RegexConverter.ReadJson(Elastic.Apm.Libraries.Newtonsoft.Json.JsonReader,System.Type,System.Object,Elastic.Apm.Libraries.Newtonsoft.Json.JsonSerializer)">
            <summary>
            Reads the JSON representation of the object.
            </summary>
            <param name="reader">The <see cref="T:Elastic.Apm.Libraries.Newtonsoft.Json.JsonReader" /> to read from.</param>
            <param name="objectType">Type of the object.</param>
            <param name="existingValue">The existing value of object being read.</param>
            <param name="serializer">The calling serializer.</param>
            <returns>The object value.</returns>
        </member>
        <member name="M:Elastic.Apm.Libraries.Newtonsoft.Json.Converters.RegexConverter.CanConvert(System.Type)">
            <summary>
            Determines whether this instance can convert the specified object type.
            </summary>
            <param name="objectType">Type of the object.</param>
            <returns>
            	<c>true</c> if this instance can convert the specified object type; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="T:Elastic.Apm.Libraries.Newtonsoft.Json.Converters.StringEnumConverter">
            <summary>
            Converts an <see cref="T:System.Enum" /> to and from its name string value.
            </summary>
        </member>
        <member name="M:Elastic.Apm.Libraries.Newtonsoft.Json.Converters.StringEnumConverter.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Elastic.Apm.Libraries.Newtonsoft.Json.Converters.StringEnumConverter" /> class.
            </summary>
        </member>
        <member name="M:Elastic.Apm.Libraries.Newtonsoft.Json.Converters.StringEnumConverter.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:Elastic.Apm.Libraries.Newtonsoft.Json.Converters.StringEnumConverter" /> class.
            </summary>
            <param name="camelCaseText"><c>true</c> if the written enum text will be camel case; otherwise, <c>false</c>.</param>
        </member>
        <member name="M:Elastic.Apm.Libraries.Newtonsoft.Json.Converters.StringEnumConverter.#ctor(Elastic.Apm.Libraries.Newtonsoft.Json.Serialization.NamingStrategy,System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:Elastic.Apm.Libraries.Newtonsoft.Json.Converters.StringEnumConverter" /> class.
            </summary>
            <param name="namingStrategy">The naming strategy used to resolve how enum text is written.</param>
            <param name="allowIntegerValues">
            <c>true</c> if integers are allowed when serializing and deserializing; otherwise,
            <c>false</c>.
            </param>
        </member>
        <member name="M:Elastic.Apm.Libraries.Newtonsoft.Json.Converters.StringEnumConverter.#ctor(System.Type)">
            <summary>
            Initializes a new instance of the <see cref="T:Elastic.Apm.Libraries.Newtonsoft.Json.Converters.StringEnumConverter" /> class.
            </summary>
            <param name="namingStrategyType">
            The <see cref="T:System.Type" /> of the
            <see cref="T:Elastic.Apm.Libraries.Newtonsoft.Json.Serialization.NamingStrategy" /> used to write enum text.
            </param>
        </member>
        <member name="M:Elastic.Apm.Libraries.Newtonsoft.Json.Converters.StringEnumConverter.#ctor(System.Type,System.Object[])">
            <summary>
            Initializes a new instance of the <see cref="T:Elastic.Apm.Libraries.Newtonsoft.Json.Converters.StringEnumConverter" /> class.
            </summary>
            <param name="namingStrategyType">
            The <see cref="T:System.Type" /> of the
            <see cref="T:Elastic.Apm.Libraries.Newtonsoft.Json.Serialization.NamingStrategy" /> used to write enum text.
            </param>
            <param name="namingStrategyParameters">
            The parameter list to use when constructing the <see cref="T:Elastic.Apm.Libraries.Newtonsoft.Json.Serialization.NamingStrategy" /> described
            by <paramref name="namingStrategyType" />.
            If <c>null</c>, the default constructor is used.
            When non-<c>null</c>, there must be a constructor defined in the
            <see cref="T:Elastic.Apm.Libraries.Newtonsoft.Json.Serialization.NamingStrategy" /> that exactly matches the number,
            order, and type of these parameters.
            </param>
        </member>
        <member name="M:Elastic.Apm.Libraries.Newtonsoft.Json.Converters.StringEnumConverter.#ctor(System.Type,System.Object[],System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:Elastic.Apm.Libraries.Newtonsoft.Json.Converters.StringEnumConverter" /> class.
            </summary>
            <param name="namingStrategyType">
            The <see cref="T:System.Type" /> of the
            <see cref="T:Elastic.Apm.Libraries.Newtonsoft.Json.Serialization.NamingStrategy" /> used to write enum text.
            </param>
            <param name="namingStrategyParameters">
            The parameter list to use when constructing the <see cref="T:Elastic.Apm.Libraries.Newtonsoft.Json.Serialization.NamingStrategy" /> described
            by <paramref name="namingStrategyType" />.
            If <c>null</c>, the default constructor is used.
            When non-<c>null</c>, there must be a constructor defined in the
            <see cref="T:Elastic.Apm.Libraries.Newtonsoft.Json.Serialization.NamingStrategy" /> that exactly matches the number,
            order, and type of these parameters.
            </param>
            <param name="allowIntegerValues">
            <c>true</c> if integers are allowed when serializing and deserializing; otherwise,
            <c>false</c>.
            </param>
        </member>
        <member name="P:Elastic.Apm.Libraries.Newtonsoft.Json.Converters.StringEnumConverter.AllowIntegerValues">
            <summary>
            Gets or sets a value indicating whether integer values are allowed when serializing and deserializing.
            The default value is <c>true</c>.
            </summary>
            <value><c>true</c> if integers are allowed when serializing and deserializing; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Elastic.Apm.Libraries.Newtonsoft.Json.Converters.StringEnumConverter.CamelCaseText">
            <summary>
            Gets or sets a value indicating whether the written enum text should be camel case.
            The default value is <c>false</c>.
            </summary>
            <value><c>true</c> if the written enum text will be camel case; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Elastic.Apm.Libraries.Newtonsoft.Json.Converters.StringEnumConverter.NamingStrategy">
            <summary>
            Gets or sets the naming strategy used to resolve how enum text is written.
            </summary>
            <value>The naming strategy used to resolve how enum text is written.</value>
        </member>
        <member name="M:Elastic.Apm.Libraries.Newtonsoft.Json.Converters.StringEnumConverter.WriteJson(Elastic.Apm.Libraries.Newtonsoft.Json.JsonWriter,System.Object,Elastic.Apm.Libraries.Newtonsoft.Json.JsonSerializer)">
            <summary>
            Writes the JSON representation of the object.
            </summary>
            <param name="writer">The <see cref="T:Elastic.Apm.Libraries.Newtonsoft.Json.JsonWriter" /> to write to.</param>
            <param name="value">The value.</param>
            <param name="serializer">The calling serializer.</param>
        </member>
        <member name="M:Elastic.Apm.Libraries.Newtonsoft.Json.Converters.StringEnumConverter.ReadJson(Elastic.Apm.Libraries.Newtonsoft.Json.JsonReader,System.Type,System.Object,Elastic.Apm.Libraries.Newtonsoft.Json.JsonSerializer)">
            <summary>
            Reads the JSON representation of the object.
            </summary>
            <param name="reader">The <see cref="T:Elastic.Apm.Libraries.Newtonsoft.Json.JsonReader" /> to read from.</param>
            <param name="objectType">Type of the object.</param>
            <param name="existingValue">The existing value of object being read.</param>
            <param name="serializer">The calling serializer.</param>
            <returns>The object value.</returns>
        </member>
        <member name="M:Elastic.Apm.Libraries.Newtonsoft.Json.Converters.StringEnumConverter.CanConvert(System.Type)">
            <summary>
            Determines whether this instance can convert the specified object type.
            </summary>
            <param name="objectType">Type of the object.</param>
            <returns>
            <c>true</c> if this instance can convert the specified object type; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="T:Elastic.Apm.Libraries.Newtonsoft.Json.Converters.UnixDateTimeConverter">
            <summary>
            Converts a <see cref="T:System.DateTime" /> to and from Unix epoch time
            </summary>
        </member>
        <member name="M:Elastic.Apm.Libraries.Newtonsoft.Json.Converters.UnixDateTimeConverter.WriteJson(Elastic.Apm.Libraries.Newtonsoft.Json.JsonWriter,System.Object,Elastic.Apm.Libraries.Newtonsoft.Json.JsonSerializer)">
            <summary>
            Writes the JSON representation of the object.
            </summary>
            <param name="writer">The <see cref="T:Elastic.Apm.Libraries.Newtonsoft.Json.JsonWriter" /> to write to.</param>
            <param name="value">The value.</param>
            <param name="serializer">The calling serializer.</param>
        </member>
        <member name="M:Elastic.Apm.Libraries.Newtonsoft.Json.Converters.UnixDateTimeConverter.ReadJson(Elastic.Apm.Libraries.Newtonsoft.Json.JsonReader,System.Type,System.Object,Elastic.Apm.Libraries.Newtonsoft.Json.JsonSerializer)">
            <summary>
            Reads the JSON representation of the object.
            </summary>
            <param name="reader">The <see cref="T:Elastic.Apm.Libraries.Newtonsoft.Json.JsonReader" /> to read from.</param>
            <param name="objectType">Type of the object.</param>
            <param name="existingValue">The existing property value of the JSON that is being converted.</param>
            <param name="serializer">The calling serializer.</param>
            <returns>The object value.</returns>
        </member>
        <member name="T:Elastic.Apm.Libraries.Newtonsoft.Json.Converters.VersionConverter">
            <summary>
            Converts a <see cref="T:System.Version" /> to and from a string (e.g. <c>"1.2.3.4"</c>).
            </summary>
        </member>
        <member name="M:Elastic.Apm.Libraries.Newtonsoft.Json.Converters.VersionConverter.WriteJson(Elastic.Apm.Libraries.Newtonsoft.Json.JsonWriter,System.Object,Elastic.Apm.Libraries.Newtonsoft.Json.JsonSerializer)">
            <summary>
            Writes the JSON representation of the object.
            </summary>
            <param name="writer">The <see cref="T:Elastic.Apm.Libraries.Newtonsoft.Json.JsonWriter" /> to write to.</param>
            <param name="value">The value.</param>
            <param name="serializer">The calling serializer.</param>
        </member>
        <member name="M:Elastic.Apm.Libraries.Newtonsoft.Json.Converters.VersionConverter.ReadJson(Elastic.Apm.Libraries.Newtonsoft.Json.JsonReader,System.Type,System.Object,Elastic.Apm.Libraries.Newtonsoft.Json.JsonSerializer)">
            <summary>
            Reads the JSON representation of the object.
            </summary>
            <param name="reader">The <see cref="T:Elastic.Apm.Libraries.Newtonsoft.Json.JsonReader" /> to read from.</param>
            <param name="objectType">Type of the object.</param>
            <param name="existingValue">The existing property value of the JSON that is being converted.</param>
            <param name="serializer">The calling serializer.</param>
            <returns>The object value.</returns>
        </member>
        <member name="M:Elastic.Apm.Libraries.Newtonsoft.Json.Converters.VersionConverter.CanConvert(System.Type)">
            <summary>
            Determines whether this instance can convert the specified object type.
            </summary>
            <param name="objectType">Type of the object.</param>
            <returns>
            	<c>true</c> if this instance can convert the specified object type; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="T:Elastic.Apm.Libraries.Newtonsoft.Json.Converters.XmlNodeConverter">
            <summary>
            Converts XML to and from JSON.
            </summary>
        </member>
        <member name="P:Elastic.Apm.Libraries.Newtonsoft.Json.Converters.XmlNodeConverter.DeserializeRootElementName">
            <summary>
            Gets or sets the name of the root element to insert when deserializing to XML if the JSON structure has produced multiple root elements.
            </summary>
            <value>The name of the deserialized root element.</value>
        </member>
        <member name="P:Elastic.Apm.Libraries.Newtonsoft.Json.Converters.XmlNodeConverter.WriteArrayAttribute">
            <summary>
            Gets or sets a value to indicate whether to write the Json.NET array attribute.
            This attribute helps preserve arrays when converting the written XML back to JSON.
            </summary>
            <value><c>true</c> if the array attribute is written to the XML; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Elastic.Apm.Libraries.Newtonsoft.Json.Converters.XmlNodeConverter.OmitRootObject">
            <summary>
            Gets or sets a value indicating whether to write the root JSON object.
            </summary>
            <value><c>true</c> if the JSON root object is omitted; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Elastic.Apm.Libraries.Newtonsoft.Json.Converters.XmlNodeConverter.EncodeSpecialCharacters">
            <summary>
            Gets or sets a value indicating whether to encode special characters when converting JSON to XML.
            If <c>true</c>, special characters like ':', '@', '?', '#' and '$' in JSON property names aren't used to specify
            XML namespaces, attributes or processing directives. Instead special characters are encoded and written
            as part of the XML element name.
            </summary>
            <value><c>true</c> if special characters are encoded; otherwise, <c>false</c>.</value>
        </member>
        <member name="M:Elastic.Apm.Libraries.Newtonsoft.Json.Converters.XmlNodeConverter.WriteJson(Elastic.Apm.Libraries.Newtonsoft.Json.JsonWriter,System.Object,Elastic.Apm.Libraries.Newtonsoft.Json.JsonSerializer)">
            <summary>
            Writes the JSON representation of the object.
            </summary>
            <param name="writer">The <see cref="T:Elastic.Apm.Libraries.Newtonsoft.Json.JsonWriter"/> to write to.</param>
            <param name="serializer">The calling serializer.</param>
            <param name="value">The value.</param>
        </member>
        <member name="M:Elastic.Apm.Libraries.Newtonsoft.Json.Converters.XmlNodeConverter.ReadJson(Elastic.Apm.Libraries.Newtonsoft.Json.JsonReader,System.Type,System.Object,Elastic.Apm.Libraries.Newtonsoft.Json.JsonSerializer)">
            <summary>
            Reads the JSON representation of the object.
            </summary>
            <param name="reader">The <see cref="T:Elastic.Apm.Libraries.Newtonsoft.Json.JsonReader"/> to read from.</param>
            <param name="objectType">Type of the object.</param>
            <param name="existingValue">The existing value of object being read.</param>
            <param name="serializer">The calling serializer.</param>
            <returns>The object value.</returns>
        </member>
        <member name="M:Elastic.Apm.Libraries.Newtonsoft.Json.Converters.XmlNodeConverter.IsNamespaceAttribute(System.String,System.String@)">
            <summary>
            Checks if the <paramref name="attributeName"/> is a namespace attribute.
            </summary>
            <param name="attributeName">Attribute name to test.</param>
            <param name="prefix">The attribute name prefix if it has one, otherwise an empty string.</param>
            <returns><c>true</c> if attribute name is for a namespace attribute, otherwise <c>false</c>.</returns>
        </member>
        <member name="M:Elastic.Apm.Libraries.Newtonsoft.Json.Converters.XmlNodeConverter.CanConvert(System.Type)">
            <summary>
            Determines whether this instance can convert the specified value type.
            </summary>
            <param name="valueType">Type of the value.</param>
            <returns>
            	<c>true</c> if this instance can convert the specified value type; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="T:Elastic.Apm.Libraries.Newtonsoft.Json.DateFormatHandling">
            <summary>
            Specifies how dates are formatted when writing JSON text.
            </summary>
        </member>
        <member name="F:Elastic.Apm.Libraries.Newtonsoft.Json.DateFormatHandling.IsoDateFormat">
            <summary>
            Dates are written in the ISO 8601 format, e.g. <c>"2012-03-21T05:40Z"</c>.
            </summary>
        </member>
        <member name="F:Elastic.Apm.Libraries.Newtonsoft.Json.DateFormatHandling.MicrosoftDateFormat">
            <summary>
            Dates are written in the Microsoft JSON format, e.g. <c>"\/Date(1198908717056)\/"</c>.
            </summary>
        </member>
        <member name="T:Elastic.Apm.Libraries.Newtonsoft.Json.DateParseHandling">
            <summary>
            Specifies how date formatted strings, e.g. <c>"\/Date(1198908717056)\/"</c> and <c>"2012-03-21T05:40Z"</c>, are parsed
            when reading JSON text.
            </summary>
        </member>
        <member name="F:Elastic.Apm.Libraries.Newtonsoft.Json.DateParseHandling.None">
            <summary>
            Date formatted strings are not parsed to a date type and are read as strings.
            </summary>
        </member>
        <member name="F:Elastic.Apm.Libraries.Newtonsoft.Json.DateParseHandling.DateTime">
            <summary>
            Date formatted strings, e.g. <c>"\/Date(1198908717056)\/"</c> and <c>"2012-03-21T05:40Z"</c>, are parsed to
            <see cref="T:System.DateTime" />.
            </summary>
        </member>
        <member name="F:Elastic.Apm.Libraries.Newtonsoft.Json.DateParseHandling.DateTimeOffset">
            <summary>
            Date formatted strings, e.g. <c>"\/Date(1198908717056)\/"</c> and <c>"2012-03-21T05:40Z"</c>, are parsed to <see cref="T:System.DateTimeOffset"/>.
            </summary>
        </member>
        <member name="T:Elastic.Apm.Libraries.Newtonsoft.Json.DateTimeZoneHandling">
            <summary>
            Specifies how to treat the time value when converting between string and <see cref="T:System.DateTime" />.
            </summary>
        </member>
        <member name="F:Elastic.Apm.Libraries.Newtonsoft.Json.DateTimeZoneHandling.Local">
            <summary>
            Treat as local time. If the <see cref="T:System.DateTime" /> object represents a Coordinated Universal Time (UTC), it is
            converted to the local time.
            </summary>
        </member>
        <member name="F:Elastic.Apm.Libraries.Newtonsoft.Json.DateTimeZoneHandling.Utc">
            <summary>
            Treat as a UTC. If the <see cref="T:System.DateTime" /> object represents a local time, it is converted to a UTC.
            </summary>
        </member>
        <member name="F:Elastic.Apm.Libraries.Newtonsoft.Json.DateTimeZoneHandling.Unspecified">
            <summary>
            Treat as a local time if a <see cref="T:System.DateTime" /> is being converted to a string.
            If a string is being converted to <see cref="T:System.DateTime" />, convert to a local time if a time zone is specified.
            </summary>
        </member>
        <member name="F:Elastic.Apm.Libraries.Newtonsoft.Json.DateTimeZoneHandling.RoundtripKind">
            <summary>
            Time zone information should be preserved when converting.
            </summary>
        </member>
        <member name="T:Elastic.Apm.Libraries.Newtonsoft.Json.DefaultJsonNameTable">
            <summary>
            The default JSON name table implementation.
            </summary>
        </member>
        <member name="M:Elastic.Apm.Libraries.Newtonsoft.Json.DefaultJsonNameTable.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Elastic.Apm.Libraries.Newtonsoft.Json.DefaultJsonNameTable" /> class.
            </summary>
        </member>
        <member name="M:Elastic.Apm.Libraries.Newtonsoft.Json.DefaultJsonNameTable.Get(System.Char[],System.Int32,System.Int32)">
            <summary>
            Gets a string containing the same characters as the specified range of characters in the given array.
            </summary>
            <param name="key">The character array containing the name to find.</param>
            <param name="start">The zero-based index into the array specifying the first character of the name.</param>
            <param name="length">The number of characters in the name.</param>
            <returns>A string containing the same characters as the specified range of characters in the given array.</returns>
        </member>
        <member name="M:Elastic.Apm.Libraries.Newtonsoft.Json.DefaultJsonNameTable.Add(System.String)">
            <summary>
            Adds the specified string into name table.
            </summary>
            <param name="key">The string to add.</param>
            <remarks>This method is not thread-safe.</remarks>
            <returns>The resolved string.</returns>
        </member>
        <member name="T:Elastic.Apm.Libraries.Newtonsoft.Json.DefaultValueHandling">
            <summary>
            Specifies default value handling options for the <see cref="T:Elastic.Apm.Libraries.Newtonsoft.Json.JsonSerializer" />.
            </summary>
            <example>
              <code lang="cs" source="..\Src\Newtonsoft.Json.Tests\Documentation\SerializationTests.cs"
                  region="ReducingSerializedJsonSizeDefaultValueHandlingObject" title="DefaultValueHandling Class" />
              <code lang="cs" source="..\Src\Newtonsoft.Json.Tests\Documentation\SerializationTests.cs"
                  region="ReducingSerializedJsonSizeDefaultValueHandlingExample" title="DefaultValueHandling Ignore Example" />
            </example>
        </member>
        <member name="F:Elastic.Apm.Libraries.Newtonsoft.Json.DefaultValueHandling.Include">
            <summary>
            Include members where the member value is the same as the member's default value when serializing objects.
            Included members are written to JSON. Has no effect when deserializing.
            </summary>
        </member>
        <member name="F:Elastic.Apm.Libraries.Newtonsoft.Json.DefaultValueHandling.Ignore">
            <summary>
            Ignore members where the member value is the same as the member's default value when serializing objects
            so that it is not written to JSON.
            This option will ignore all default values (e.g. <c>null</c> for objects and nullable types; <c>0</c> for integers,
            decimals and floating point numbers; and <c>false</c> for booleans). The default value ignored can be changed by
            placing the <see cref="T:System.ComponentModel.DefaultValueAttribute" /> on the property.
            </summary>
        </member>
        <member name="F:Elastic.Apm.Libraries.Newtonsoft.Json.DefaultValueHandling.Populate">
            <summary>
            Members with a default value but no JSON will be set to their default value when deserializing.
            </summary>
        </member>
        <member name="F:Elastic.Apm.Libraries.Newtonsoft.Json.DefaultValueHandling.IgnoreAndPopulate">
            <summary>
            Ignore members where the member value is the same as the member's default value when serializing objects
            and set members to their default value when deserializing.
            </summary>
        </member>
        <member name="T:Elastic.Apm.Libraries.Newtonsoft.Json.FloatFormatHandling">
            <summary>
            Specifies float format handling options when writing special floating point numbers, e.g. <see cref="F:System.Double.NaN" />,
            <see cref="F:System.Double.PositiveInfinity" /> and <see cref="F:System.Double.NegativeInfinity" /> with <see cref="T:Elastic.Apm.Libraries.Newtonsoft.Json.JsonWriter" />.
            </summary>
        </member>
        <member name="F:Elastic.Apm.Libraries.Newtonsoft.Json.FloatFormatHandling.String">
            <summary>
            Write special floating point values as strings in JSON, e.g. <c>"NaN"</c>, <c>"Infinity"</c>, <c>"-Infinity"</c>.
            </summary>
        </member>
        <member name="F:Elastic.Apm.Libraries.Newtonsoft.Json.FloatFormatHandling.Symbol">
            <summary>
            Write special floating point values as symbols in JSON, e.g. <c>NaN</c>, <c>Infinity</c>, <c>-Infinity</c>.
            Note that this will produce non-valid JSON.
            </summary>
        </member>
        <member name="F:Elastic.Apm.Libraries.Newtonsoft.Json.FloatFormatHandling.DefaultValue">
            <summary>
            Write special floating point values as the property's default value in JSON, e.g. 0.0 for a <see cref="T:System.Double" />
            property, <c>null</c> for a <see cref="T:System.Nullable`1" /> of <see cref="T:System.Double" /> property.
            </summary>
        </member>
        <member name="T:Elastic.Apm.Libraries.Newtonsoft.Json.FloatParseHandling">
            <summary>
            Specifies how floating point numbers, e.g. 1.0 and 9.9, are parsed when reading JSON text.
            </summary>
        </member>
        <member name="F:Elastic.Apm.Libraries.Newtonsoft.Json.FloatParseHandling.Double">
            <summary>
            Floating point numbers are parsed to <see cref="F:Elastic.Apm.Libraries.Newtonsoft.Json.FloatParseHandling.Double" />.
            </summary>
        </member>
        <member name="F:Elastic.Apm.Libraries.Newtonsoft.Json.FloatParseHandling.Decimal">
            <summary>
            Floating point numbers are parsed to <see cref="F:Elastic.Apm.Libraries.Newtonsoft.Json.FloatParseHandling.Decimal" />.
            </summary>
        </member>
        <member name="T:Elastic.Apm.Libraries.Newtonsoft.Json.Formatting">
            <summary>
            Specifies formatting options for the <see cref="T:Elastic.Apm.Libraries.Newtonsoft.Json.JsonTextWriter" />.
            </summary>
        </member>
        <member name="F:Elastic.Apm.Libraries.Newtonsoft.Json.Formatting.None">
            <summary>
            No special formatting is applied. This is the default.
            </summary>
        </member>
        <member name="F:Elastic.Apm.Libraries.Newtonsoft.Json.Formatting.Indented">
            <summary>
            Causes child objects to be indented according to the <see cref="P:Elastic.Apm.Libraries.Newtonsoft.Json.JsonTextWriter.Indentation" /> and
            <see cref="P:Elastic.Apm.Libraries.Newtonsoft.Json.JsonTextWriter.IndentChar" /> settings.
            </summary>
        </member>
        <member name="T:Elastic.Apm.Libraries.Newtonsoft.Json.IArrayPool`1">
            <summary>
            Provides an interface for using pooled arrays.
            </summary>
            <typeparam name="T">The array type content.</typeparam>
        </member>
        <member name="M:Elastic.Apm.Libraries.Newtonsoft.Json.IArrayPool`1.Rent(System.Int32)">
            <summary>
            Rent an array from the pool. This array must be returned when it is no longer needed.
            </summary>
            <param name="minimumLength">The minimum required length of the array. The returned array may be longer.</param>
            <returns>The rented array from the pool. This array must be returned when it is no longer needed.</returns>
        </member>
        <member name="M:Elastic.Apm.Libraries.Newtonsoft.Json.IArrayPool`1.Return(`0[])">
            <summary>
            Return an array to the pool.
            </summary>
            <param name="array">The array that is being returned.</param>
        </member>
        <member name="T:Elastic.Apm.Libraries.Newtonsoft.Json.IJsonLineInfo">
            <summary>
            Provides an interface to enable a class to return line and position information.
            </summary>
        </member>
        <member name="P:Elastic.Apm.Libraries.Newtonsoft.Json.IJsonLineInfo.LineNumber">
            <summary>
            Gets the current line number.
            </summary>
            <value>
            The current line number or 0 if no line information is available (for example, when <see cref="M:Elastic.Apm.Libraries.Newtonsoft.Json.IJsonLineInfo.HasLineInfo" />
            returns <c>false</c>).
            </value>
        </member>
        <member name="P:Elastic.Apm.Libraries.Newtonsoft.Json.IJsonLineInfo.LinePosition">
            <summary>
            Gets the current line position.
            </summary>
            <value>
            The current line position or 0 if no line information is available (for example, when <see cref="M:Elastic.Apm.Libraries.Newtonsoft.Json.IJsonLineInfo.HasLineInfo" />
            returns <c>false</c>).
            </value>
        </member>
        <member name="M:Elastic.Apm.Libraries.Newtonsoft.Json.IJsonLineInfo.HasLineInfo">
            <summary>
            Gets a value indicating whether the class can return line information.
            </summary>
            <returns>
            	<c>true</c> if <see cref="P:Elastic.Apm.Libraries.Newtonsoft.Json.IJsonLineInfo.LineNumber" /> and <see cref="P:Elastic.Apm.Libraries.Newtonsoft.Json.IJsonLineInfo.LinePosition" /> can be provided; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="T:Elastic.Apm.Libraries.Newtonsoft.Json.JsonArrayAttribute">
            <summary>
            Instructs the <see cref="T:Elastic.Apm.Libraries.Newtonsoft.Json.JsonSerializer" /> how to serialize the collection.
            </summary>
        </member>
        <member name="M:Elastic.Apm.Libraries.Newtonsoft.Json.JsonArrayAttribute.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Elastic.Apm.Libraries.Newtonsoft.Json.JsonArrayAttribute" /> class.
            </summary>
        </member>
        <member name="M:Elastic.Apm.Libraries.Newtonsoft.Json.JsonArrayAttribute.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:Elastic.Apm.Libraries.Newtonsoft.Json.JsonObjectAttribute" /> class with a flag indicating whether the array can
            contain null items.
            </summary>
            <param name="allowNullItems">A flag indicating whether the array can contain null items.</param>
        </member>
        <member name="M:Elastic.Apm.Libraries.Newtonsoft.Json.JsonArrayAttribute.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Elastic.Apm.Libraries.Newtonsoft.Json.JsonArrayAttribute" /> class with the specified container Id.
            </summary>
            <param name="id">The container Id.</param>
        </member>
        <member name="P:Elastic.Apm.Libraries.Newtonsoft.Json.JsonArrayAttribute.AllowNullItems">
            <summary>
            Gets or sets a value indicating whether null items are allowed in the collection.
            </summary>
            <value><c>true</c> if null items are allowed in the collection; otherwise, <c>false</c>.</value>
        </member>
        <member name="T:Elastic.Apm.Libraries.Newtonsoft.Json.JsonConstructorAttribute">
            <summary>
            Instructs the <see cref="T:Elastic.Apm.Libraries.Newtonsoft.Json.JsonSerializer" /> to use the specified constructor when deserializing that object.
            </summary>
        </member>
        <member name="T:Elastic.Apm.Libraries.Newtonsoft.Json.JsonContainerAttribute">
            <summary>
            Instructs the <see cref="T:Elastic.Apm.Libraries.Newtonsoft.Json.JsonSerializer" /> how to serialize the object.
            </summary>
        </member>
        <member name="M:Elastic.Apm.Libraries.Newtonsoft.Json.JsonContainerAttribute.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Elastic.Apm.Libraries.Newtonsoft.Json.JsonContainerAttribute" /> class.
            </summary>
        </member>
        <member name="M:Elastic.Apm.Libraries.Newtonsoft.Json.JsonContainerAttribute.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Elastic.Apm.Libraries.Newtonsoft.Json.JsonContainerAttribute" /> class with the specified container Id.
            </summary>
            <param name="id">The container Id.</param>
        </member>
        <member name="P:Elastic.Apm.Libraries.Newtonsoft.Json.JsonContainerAttribute.Description">
            <summary>
            Gets or sets the description.
            </summary>
            <value>The description.</value>
        </member>
        <member name="P:Elastic.Apm.Libraries.Newtonsoft.Json.JsonContainerAttribute.Id">
            <summary>
            Gets or sets the id.
            </summary>
            <value>The id.</value>
        </member>
        <member name="P:Elastic.Apm.Libraries.Newtonsoft.Json.JsonContainerAttribute.IsReference">
            <summary>
            Gets or sets a value that indicates whether to preserve object references.
            </summary>
            <value>
            	<c>true</c> to keep object reference; otherwise, <c>false</c>. The default is <c>false</c>.
            </value>
        </member>
        <member name="P:Elastic.Apm.Libraries.Newtonsoft.Json.JsonContainerAttribute.ItemConverterParameters">
            <summary>
            The parameter list to use when constructing the <see cref="T:Elastic.Apm.Libraries.Newtonsoft.Json.JsonConverter" /> described by
            <see cref="P:Elastic.Apm.Libraries.Newtonsoft.Json.JsonContainerAttribute.ItemConverterType" />.
            If <c>null</c>, the default constructor is used.
            When non-<c>null</c>, there must be a constructor defined in the <see cref="T:Elastic.Apm.Libraries.Newtonsoft.Json.JsonConverter" /> that exactly matches the
            number,
            order, and type of these parameters.
            </summary>
            <example>
            <code>
            [JsonContainer(ItemConverterType = typeof(MyContainerConverter), ItemConverterParameters = new object[] { 123, "Four" })]
            </code>
            </example>
        </member>
        <member name="P:Elastic.Apm.Libraries.Newtonsoft.Json.JsonContainerAttribute.ItemConverterType">
            <summary>
            Gets or sets the collection's items converter.
            </summary>
            <value>The collection's items converter.</value>
        </member>
        <member name="P:Elastic.Apm.Libraries.Newtonsoft.Json.JsonContainerAttribute.ItemIsReference">
            <summary>
            Gets or sets a value that indicates whether to preserve collection's items references.
            </summary>
            <value>
            	<c>true</c> to keep collection's items object references; otherwise, <c>false</c>. The default is <c>false</c>.
            </value>
        </member>
        <member name="P:Elastic.Apm.Libraries.Newtonsoft.Json.JsonContainerAttribute.ItemReferenceLoopHandling">
            <summary>
            Gets or sets the reference loop handling used when serializing the collection's items.
            </summary>
            <value>The reference loop handling.</value>
        </member>
        <member name="P:Elastic.Apm.Libraries.Newtonsoft.Json.JsonContainerAttribute.ItemTypeNameHandling">
            <summary>
            Gets or sets the type name handling used when serializing the collection's items.
            </summary>
            <value>The type name handling.</value>
        </member>
        <member name="P:Elastic.Apm.Libraries.Newtonsoft.Json.JsonContainerAttribute.NamingStrategyParameters">
            <summary>
            The parameter list to use when constructing the <see cref="T:Elastic.Apm.Libraries.Newtonsoft.Json.Serialization.NamingStrategy" /> described by
            <see cref="P:Elastic.Apm.Libraries.Newtonsoft.Json.JsonContainerAttribute.NamingStrategyType" />.
            If <c>null</c>, the default constructor is used.
            When non-<c>null</c>, there must be a constructor defined in the <see cref="T:Elastic.Apm.Libraries.Newtonsoft.Json.Serialization.NamingStrategy" /> that exactly matches the
            number,
            order, and type of these parameters.
            </summary>
            <example>
            <code>
            [JsonContainer(NamingStrategyType = typeof(MyNamingStrategy), NamingStrategyParameters = new object[] { 123, "Four" })]
            </code>
            </example>
        </member>
        <member name="P:Elastic.Apm.Libraries.Newtonsoft.Json.JsonContainerAttribute.NamingStrategyType">
            <summary>
            Gets or sets the <see cref="T:System.Type" /> of the <see cref="T:Elastic.Apm.Libraries.Newtonsoft.Json.Serialization.NamingStrategy" />.
            </summary>
            <value>The <see cref="T:System.Type" /> of the <see cref="T:Elastic.Apm.Libraries.Newtonsoft.Json.Serialization.NamingStrategy" />.</value>
        </member>
        <member name="P:Elastic.Apm.Libraries.Newtonsoft.Json.JsonContainerAttribute.Title">
            <summary>
            Gets or sets the title.
            </summary>
            <value>The title.</value>
        </member>
        <member name="T:Elastic.Apm.Libraries.Newtonsoft.Json.JsonConvert">
            <summary>
            Provides methods for converting between .NET types and JSON types.
            </summary>
            <example>
              <code lang="cs" source="..\Src\Newtonsoft.Json.Tests\Documentation\SerializationTests.cs" region="SerializeObject"
                  title="Serializing and Deserializing JSON with JsonConvert" />
            </example>
        </member>
        <member name="P:Elastic.Apm.Libraries.Newtonsoft.Json.JsonConvert.DefaultSettings">
            <summary>
            Gets or sets a function that creates default <see cref="T:Elastic.Apm.Libraries.Newtonsoft.Json.JsonSerializerSettings" />.
            Default settings are automatically used by serialization methods on <see cref="T:Elastic.Apm.Libraries.Newtonsoft.Json.JsonConvert" />,
            and <see cref="M:Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JToken.ToObject``1" /> and <see cref="M:Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JToken.FromObject(System.Object)" /> on <see cref="T:Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JToken" />.
            To serialize without using any default settings create a <see cref="T:Elastic.Apm.Libraries.Newtonsoft.Json.JsonSerializer" /> with
            <see cref="M:Elastic.Apm.Libraries.Newtonsoft.Json.JsonSerializer.Create" />.
            </summary>
        </member>
        <member name="F:Elastic.Apm.Libraries.Newtonsoft.Json.JsonConvert.True">
            <summary>
            Represents JavaScript's boolean value <c>true</c> as a string. This field is read-only.
            </summary>
        </member>
        <member name="F:Elastic.Apm.Libraries.Newtonsoft.Json.JsonConvert.False">
            <summary>
            Represents JavaScript's boolean value <c>false</c> as a string. This field is read-only.
            </summary>
        </member>
        <member name="F:Elastic.Apm.Libraries.Newtonsoft.Json.JsonConvert.Null">
            <summary>
            Represents JavaScript's <c>null</c> as a string. This field is read-only.
            </summary>
        </member>
        <member name="F:Elastic.Apm.Libraries.Newtonsoft.Json.JsonConvert.Undefined">
            <summary>
            Represents JavaScript's <c>undefined</c> as a string. This field is read-only.
            </summary>
        </member>
        <member name="F:Elastic.Apm.Libraries.Newtonsoft.Json.JsonConvert.PositiveInfinity">
            <summary>
            Represents JavaScript's positive infinity as a string. This field is read-only.
            </summary>
        </member>
        <member name="F:Elastic.Apm.Libraries.Newtonsoft.Json.JsonConvert.NegativeInfinity">
            <summary>
            Represents JavaScript's negative infinity as a string. This field is read-only.
            </summary>
        </member>
        <member name="F:Elastic.Apm.Libraries.Newtonsoft.Json.JsonConvert.NaN">
            <summary>
            Represents JavaScript's <c>NaN</c> as a string. This field is read-only.
            </summary>
        </member>
        <member name="M:Elastic.Apm.Libraries.Newtonsoft.Json.JsonConvert.ToString(System.DateTime)">
            <summary>
            Converts the <see cref="T:System.DateTime" /> to its JSON string representation.
            </summary>
            <param name="value">The value to convert.</param>
            <returns>A JSON string representation of the <see cref="T:System.DateTime" />.</returns>
        </member>
        <member name="M:Elastic.Apm.Libraries.Newtonsoft.Json.JsonConvert.ToString(System.DateTime,Elastic.Apm.Libraries.Newtonsoft.Json.DateFormatHandling,Elastic.Apm.Libraries.Newtonsoft.Json.DateTimeZoneHandling)">
            <summary>
            Converts the <see cref="T:System.DateTime" /> to its JSON string representation using the <see cref="T:Elastic.Apm.Libraries.Newtonsoft.Json.DateFormatHandling" />
            specified.
            </summary>
            <param name="value">The value to convert.</param>
            <param name="format">The format the date will be converted to.</param>
            <param name="timeZoneHandling">The time zone handling when the date is converted to a string.</param>
            <returns>A JSON string representation of the <see cref="T:System.DateTime" />.</returns>
        </member>
        <member name="M:Elastic.Apm.Libraries.Newtonsoft.Json.JsonConvert.ToString(System.DateTimeOffset)">
            <summary>
            Converts the <see cref="T:System.DateTimeOffset"/> to its JSON string representation.
            </summary>
            <param name="value">The value to convert.</param>
            <returns>A JSON string representation of the <see cref="T:System.DateTimeOffset"/>.</returns>
        </member>
        <member name="M:Elastic.Apm.Libraries.Newtonsoft.Json.JsonConvert.ToString(System.DateTimeOffset,Elastic.Apm.Libraries.Newtonsoft.Json.DateFormatHandling)">
            <summary>
            Converts the <see cref="T:System.DateTimeOffset"/> to its JSON string representation using the <see cref="T:Elastic.Apm.Libraries.Newtonsoft.Json.DateFormatHandling"/> specified.
            </summary>
            <param name="value">The value to convert.</param>
            <param name="format">The format the date will be converted to.</param>
            <returns>A JSON string representation of the <see cref="T:System.DateTimeOffset"/>.</returns>
        </member>
        <member name="M:Elastic.Apm.Libraries.Newtonsoft.Json.JsonConvert.ToString(System.Boolean)">
            <summary>
            Converts the <see cref="T:System.Boolean" /> to its JSON string representation.
            </summary>
            <param name="value">The value to convert.</param>
            <returns>A JSON string representation of the <see cref="T:System.Boolean" />.</returns>
        </member>
        <member name="M:Elastic.Apm.Libraries.Newtonsoft.Json.JsonConvert.ToString(System.Char)">
            <summary>
            Converts the <see cref="T:System.Char" /> to its JSON string representation.
            </summary>
            <param name="value">The value to convert.</param>
            <returns>A JSON string representation of the <see cref="T:System.Char" />.</returns>
        </member>
        <member name="M:Elastic.Apm.Libraries.Newtonsoft.Json.JsonConvert.ToString(System.Enum)">
            <summary>
            Converts the <see cref="T:System.Enum" /> to its JSON string representation.
            </summary>
            <param name="value">The value to convert.</param>
            <returns>A JSON string representation of the <see cref="T:System.Enum" />.</returns>
        </member>
        <member name="M:Elastic.Apm.Libraries.Newtonsoft.Json.JsonConvert.ToString(System.Int32)">
            <summary>
            Converts the <see cref="T:System.Int32" /> to its JSON string representation.
            </summary>
            <param name="value">The value to convert.</param>
            <returns>A JSON string representation of the <see cref="T:System.Int32" />.</returns>
        </member>
        <member name="M:Elastic.Apm.Libraries.Newtonsoft.Json.JsonConvert.ToString(System.Int16)">
            <summary>
            Converts the <see cref="T:System.Int16" /> to its JSON string representation.
            </summary>
            <param name="value">The value to convert.</param>
            <returns>A JSON string representation of the <see cref="T:System.Int16" />.</returns>
        </member>
        <member name="M:Elastic.Apm.Libraries.Newtonsoft.Json.JsonConvert.ToString(System.UInt16)">
            <summary>
            Converts the <see cref="T:System.UInt16" /> to its JSON string representation.
            </summary>
            <param name="value">The value to convert.</param>
            <returns>A JSON string representation of the <see cref="T:System.UInt16" />.</returns>
        </member>
        <member name="M:Elastic.Apm.Libraries.Newtonsoft.Json.JsonConvert.ToString(System.UInt32)">
            <summary>
            Converts the <see cref="T:System.UInt32" /> to its JSON string representation.
            </summary>
            <param name="value">The value to convert.</param>
            <returns>A JSON string representation of the <see cref="T:System.UInt32" />.</returns>
        </member>
        <member name="M:Elastic.Apm.Libraries.Newtonsoft.Json.JsonConvert.ToString(System.Int64)">
            <summary>
            Converts the <see cref="T:System.Int64" />  to its JSON string representation.
            </summary>
            <param name="value">The value to convert.</param>
            <returns>A JSON string representation of the <see cref="T:System.Int64" />.</returns>
        </member>
        <member name="M:Elastic.Apm.Libraries.Newtonsoft.Json.JsonConvert.ToString(System.UInt64)">
            <summary>
            Converts the <see cref="T:System.UInt64" /> to its JSON string representation.
            </summary>
            <param name="value">The value to convert.</param>
            <returns>A JSON string representation of the <see cref="T:System.UInt64" />.</returns>
        </member>
        <member name="M:Elastic.Apm.Libraries.Newtonsoft.Json.JsonConvert.ToString(System.Single)">
            <summary>
            Converts the <see cref="T:System.Single" /> to its JSON string representation.
            </summary>
            <param name="value">The value to convert.</param>
            <returns>A JSON string representation of the <see cref="T:System.Single" />.</returns>
        </member>
        <member name="M:Elastic.Apm.Libraries.Newtonsoft.Json.JsonConvert.ToString(System.Double)">
            <summary>
            Converts the <see cref="T:System.Double" /> to its JSON string representation.
            </summary>
            <param name="value">The value to convert.</param>
            <returns>A JSON string representation of the <see cref="T:System.Double" />.</returns>
        </member>
        <member name="M:Elastic.Apm.Libraries.Newtonsoft.Json.JsonConvert.ToString(System.Byte)">
            <summary>
            Converts the <see cref="T:System.Byte" /> to its JSON string representation.
            </summary>
            <param name="value">The value to convert.</param>
            <returns>A JSON string representation of the <see cref="T:System.Byte" />.</returns>
        </member>
        <member name="M:Elastic.Apm.Libraries.Newtonsoft.Json.JsonConvert.ToString(System.SByte)">
            <summary>
            Converts the <see cref="T:System.SByte" /> to its JSON string representation.
            </summary>
            <param name="value">The value to convert.</param>
            <returns>A JSON string representation of the <see cref="T:System.SByte" />.</returns>
        </member>
        <member name="M:Elastic.Apm.Libraries.Newtonsoft.Json.JsonConvert.ToString(System.Decimal)">
            <summary>
            Converts the <see cref="T:System.Decimal" /> to its JSON string representation.
            </summary>
            <param name="value">The value to convert.</param>
            <returns>A JSON string representation of the <see cref="T:System.Decimal" />.</returns>
        </member>
        <member name="M:Elastic.Apm.Libraries.Newtonsoft.Json.JsonConvert.ToString(System.Guid)">
            <summary>
            Converts the <see cref="T:System.Guid" /> to its JSON string representation.
            </summary>
            <param name="value">The value to convert.</param>
            <returns>A JSON string representation of the <see cref="T:System.Guid" />.</returns>
        </member>
        <member name="M:Elastic.Apm.Libraries.Newtonsoft.Json.JsonConvert.ToString(System.TimeSpan)">
            <summary>
            Converts the <see cref="T:System.TimeSpan" /> to its JSON string representation.
            </summary>
            <param name="value">The value to convert.</param>
            <returns>A JSON string representation of the <see cref="T:System.TimeSpan" />.</returns>
        </member>
        <member name="M:Elastic.Apm.Libraries.Newtonsoft.Json.JsonConvert.ToString(System.Uri)">
            <summary>
            Converts the <see cref="T:System.Uri" /> to its JSON string representation.
            </summary>
            <param name="value">The value to convert.</param>
            <returns>A JSON string representation of the <see cref="T:System.Uri" />.</returns>
        </member>
        <member name="M:Elastic.Apm.Libraries.Newtonsoft.Json.JsonConvert.ToString(System.String)">
            <summary>
            Converts the <see cref="T:System.String" /> to its JSON string representation.
            </summary>
            <param name="value">The value to convert.</param>
            <returns>A JSON string representation of the <see cref="T:System.String" />.</returns>
        </member>
        <member name="M:Elastic.Apm.Libraries.Newtonsoft.Json.JsonConvert.ToString(System.String,System.Char)">
            <summary>
            Converts the <see cref="T:System.String" /> to its JSON string representation.
            </summary>
            <param name="value">The value to convert.</param>
            <param name="delimiter">The string delimiter character.</param>
            <returns>A JSON string representation of the <see cref="T:System.String" />.</returns>
        </member>
        <member name="M:Elastic.Apm.Libraries.Newtonsoft.Json.JsonConvert.ToString(System.String,System.Char,Elastic.Apm.Libraries.Newtonsoft.Json.StringEscapeHandling)">
            <summary>
            Converts the <see cref="T:System.String" /> to its JSON string representation.
            </summary>
            <param name="value">The value to convert.</param>
            <param name="delimiter">The string delimiter character.</param>
            <param name="stringEscapeHandling">The string escape handling.</param>
            <returns>A JSON string representation of the <see cref="T:System.String" />.</returns>
        </member>
        <member name="M:Elastic.Apm.Libraries.Newtonsoft.Json.JsonConvert.ToString(System.Object)">
            <summary>
            Converts the <see cref="T:System.Object" /> to its JSON string representation.
            </summary>
            <param name="value">The value to convert.</param>
            <returns>A JSON string representation of the <see cref="T:System.Object" />.</returns>
        </member>
        <member name="M:Elastic.Apm.Libraries.Newtonsoft.Json.JsonConvert.SerializeObject(System.Object)">
            <summary>
            Serializes the specified object to a JSON string.
            </summary>
            <param name="value">The object to serialize.</param>
            <returns>A JSON string representation of the object.</returns>
        </member>
        <member name="M:Elastic.Apm.Libraries.Newtonsoft.Json.JsonConvert.SerializeObject(System.Object,Elastic.Apm.Libraries.Newtonsoft.Json.Formatting)">
            <summary>
            Serializes the specified object to a JSON string using formatting.
            </summary>
            <param name="value">The object to serialize.</param>
            <param name="formatting">Indicates how the output should be formatted.</param>
            <returns>
            A JSON string representation of the object.
            </returns>
        </member>
        <member name="M:Elastic.Apm.Libraries.Newtonsoft.Json.JsonConvert.SerializeObject(System.Object,Elastic.Apm.Libraries.Newtonsoft.Json.JsonConverter[])">
            <summary>
            Serializes the specified object to a JSON string using a collection of <see cref="T:Elastic.Apm.Libraries.Newtonsoft.Json.JsonConverter" />.
            </summary>
            <param name="value">The object to serialize.</param>
            <param name="converters">A collection of converters used while serializing.</param>
            <returns>A JSON string representation of the object.</returns>
        </member>
        <member name="M:Elastic.Apm.Libraries.Newtonsoft.Json.JsonConvert.SerializeObject(System.Object,Elastic.Apm.Libraries.Newtonsoft.Json.Formatting,Elastic.Apm.Libraries.Newtonsoft.Json.JsonConverter[])">
            <summary>
            Serializes the specified object to a JSON string using formatting and a collection of <see cref="T:Elastic.Apm.Libraries.Newtonsoft.Json.JsonConverter" />.
            </summary>
            <param name="value">The object to serialize.</param>
            <param name="formatting">Indicates how the output should be formatted.</param>
            <param name="converters">A collection of converters used while serializing.</param>
            <returns>A JSON string representation of the object.</returns>
        </member>
        <member name="M:Elastic.Apm.Libraries.Newtonsoft.Json.JsonConvert.SerializeObject(System.Object,Elastic.Apm.Libraries.Newtonsoft.Json.JsonSerializerSettings)">
            <summary>
            Serializes the specified object to a JSON string using <see cref="T:Elastic.Apm.Libraries.Newtonsoft.Json.JsonSerializerSettings" />.
            </summary>
            <param name="value">The object to serialize.</param>
            <param name="settings">
            The <see cref="T:Elastic.Apm.Libraries.Newtonsoft.Json.JsonSerializerSettings" /> used to serialize the object.
            If this is <c>null</c>, default serialization settings will be used.
            </param>
            <returns>
            A JSON string representation of the object.
            </returns>
        </member>
        <member name="M:Elastic.Apm.Libraries.Newtonsoft.Json.JsonConvert.SerializeObject(System.Object,System.Type,Elastic.Apm.Libraries.Newtonsoft.Json.JsonSerializerSettings)">
            <summary>
            Serializes the specified object to a JSON string using a type, formatting and <see cref="T:Elastic.Apm.Libraries.Newtonsoft.Json.JsonSerializerSettings" />.
            </summary>
            <param name="value">The object to serialize.</param>
            <param name="settings">
            The <see cref="T:Elastic.Apm.Libraries.Newtonsoft.Json.JsonSerializerSettings" /> used to serialize the object.
            If this is <c>null</c>, default serialization settings will be used.
            </param>
            <param name="type">
            The type of the value being serialized.
            This parameter is used when <see cref="P:Elastic.Apm.Libraries.Newtonsoft.Json.JsonSerializer.TypeNameHandling" /> is <see cref="F:Elastic.Apm.Libraries.Newtonsoft.Json.TypeNameHandling.Auto" /> to
            write out the type name if the type of the value does not match.
            Specifying the type is optional.
            </param>
            <returns>
            A JSON string representation of the object.
            </returns>
        </member>
        <member name="M:Elastic.Apm.Libraries.Newtonsoft.Json.JsonConvert.SerializeObject(System.Object,Elastic.Apm.Libraries.Newtonsoft.Json.Formatting,Elastic.Apm.Libraries.Newtonsoft.Json.JsonSerializerSettings)">
            <summary>
            Serializes the specified object to a JSON string using formatting and <see cref="T:Elastic.Apm.Libraries.Newtonsoft.Json.JsonSerializerSettings" />.
            </summary>
            <param name="value">The object to serialize.</param>
            <param name="formatting">Indicates how the output should be formatted.</param>
            <param name="settings">
            The <see cref="T:Elastic.Apm.Libraries.Newtonsoft.Json.JsonSerializerSettings" /> used to serialize the object.
            If this is <c>null</c>, default serialization settings will be used.
            </param>
            <returns>
            A JSON string representation of the object.
            </returns>
        </member>
        <member name="M:Elastic.Apm.Libraries.Newtonsoft.Json.JsonConvert.SerializeObject(System.Object,System.Type,Elastic.Apm.Libraries.Newtonsoft.Json.Formatting,Elastic.Apm.Libraries.Newtonsoft.Json.JsonSerializerSettings)">
            <summary>
            Serializes the specified object to a JSON string using a type, formatting and <see cref="T:Elastic.Apm.Libraries.Newtonsoft.Json.JsonSerializerSettings" />.
            </summary>
            <param name="value">The object to serialize.</param>
            <param name="formatting">Indicates how the output should be formatted.</param>
            <param name="settings">
            The <see cref="T:Elastic.Apm.Libraries.Newtonsoft.Json.JsonSerializerSettings" /> used to serialize the object.
            If this is <c>null</c>, default serialization settings will be used.
            </param>
            <param name="type">
            The type of the value being serialized.
            This parameter is used when <see cref="P:Elastic.Apm.Libraries.Newtonsoft.Json.JsonSerializer.TypeNameHandling" /> is <see cref="F:Elastic.Apm.Libraries.Newtonsoft.Json.TypeNameHandling.Auto" /> to
            write out the type name if the type of the value does not match.
            Specifying the type is optional.
            </param>
            <returns>
            A JSON string representation of the object.
            </returns>
        </member>
        <member name="M:Elastic.Apm.Libraries.Newtonsoft.Json.JsonConvert.DeserializeObject(System.String)">
            <summary>
            Deserializes the JSON to a .NET object.
            </summary>
            <param name="value">The JSON to deserialize.</param>
            <returns>The deserialized object from the JSON string.</returns>
        </member>
        <member name="M:Elastic.Apm.Libraries.Newtonsoft.Json.JsonConvert.DeserializeObject(System.String,Elastic.Apm.Libraries.Newtonsoft.Json.JsonSerializerSettings)">
            <summary>
            Deserializes the JSON to a .NET object using <see cref="T:Elastic.Apm.Libraries.Newtonsoft.Json.JsonSerializerSettings" />.
            </summary>
            <param name="value">The JSON to deserialize.</param>
            <param name="settings">
            The <see cref="T:Elastic.Apm.Libraries.Newtonsoft.Json.JsonSerializerSettings" /> used to deserialize the object.
            If this is <c>null</c>, default serialization settings will be used.
            </param>
            <returns>The deserialized object from the JSON string.</returns>
        </member>
        <member name="M:Elastic.Apm.Libraries.Newtonsoft.Json.JsonConvert.DeserializeObject(System.String,System.Type)">
            <summary>
            Deserializes the JSON to the specified .NET type.
            </summary>
            <param name="value">The JSON to deserialize.</param>
            <param name="type">The <see cref="T:System.Type" /> of object being deserialized.</param>
            <returns>The deserialized object from the JSON string.</returns>
        </member>
        <member name="M:Elastic.Apm.Libraries.Newtonsoft.Json.JsonConvert.DeserializeObject``1(System.String)">
            <summary>
            Deserializes the JSON to the specified .NET type.
            </summary>
            <typeparam name="T">The type of the object to deserialize to.</typeparam>
            <param name="value">The JSON to deserialize.</param>
            <returns>The deserialized object from the JSON string.</returns>
        </member>
        <member name="M:Elastic.Apm.Libraries.Newtonsoft.Json.JsonConvert.DeserializeAnonymousType``1(System.String,``0)">
            <summary>
            Deserializes the JSON to the given anonymous type.
            </summary>
            <typeparam name="T">
            The anonymous type to deserialize to. This can't be specified
            traditionally and must be inferred from the anonymous type passed
            as a parameter.
            </typeparam>
            <param name="value">The JSON to deserialize.</param>
            <param name="anonymousTypeObject">The anonymous type object.</param>
            <returns>The deserialized anonymous type from the JSON string.</returns>
        </member>
        <member name="M:Elastic.Apm.Libraries.Newtonsoft.Json.JsonConvert.DeserializeAnonymousType``1(System.String,``0,Elastic.Apm.Libraries.Newtonsoft.Json.JsonSerializerSettings)">
            <summary>
            Deserializes the JSON to the given anonymous type using <see cref="T:Elastic.Apm.Libraries.Newtonsoft.Json.JsonSerializerSettings" />.
            </summary>
            <typeparam name="T">
            The anonymous type to deserialize to. This can't be specified
            traditionally and must be inferred from the anonymous type passed
            as a parameter.
            </typeparam>
            <param name="value">The JSON to deserialize.</param>
            <param name="anonymousTypeObject">The anonymous type object.</param>
            <param name="settings">
            The <see cref="T:Elastic.Apm.Libraries.Newtonsoft.Json.JsonSerializerSettings" /> used to deserialize the object.
            If this is <c>null</c>, default serialization settings will be used.
            </param>
            <returns>The deserialized anonymous type from the JSON string.</returns>
        </member>
        <member name="M:Elastic.Apm.Libraries.Newtonsoft.Json.JsonConvert.DeserializeObject``1(System.String,Elastic.Apm.Libraries.Newtonsoft.Json.JsonConverter[])">
            <summary>
            Deserializes the JSON to the specified .NET type using a collection of <see cref="T:Elastic.Apm.Libraries.Newtonsoft.Json.JsonConverter" />.
            </summary>
            <typeparam name="T">The type of the object to deserialize to.</typeparam>
            <param name="value">The JSON to deserialize.</param>
            <param name="converters">Converters to use while deserializing.</param>
            <returns>The deserialized object from the JSON string.</returns>
        </member>
        <member name="M:Elastic.Apm.Libraries.Newtonsoft.Json.JsonConvert.DeserializeObject``1(System.String,Elastic.Apm.Libraries.Newtonsoft.Json.JsonSerializerSettings)">
            <summary>
            Deserializes the JSON to the specified .NET type using <see cref="T:Elastic.Apm.Libraries.Newtonsoft.Json.JsonSerializerSettings" />.
            </summary>
            <typeparam name="T">The type of the object to deserialize to.</typeparam>
            <param name="value">The object to deserialize.</param>
            <param name="settings">
            The <see cref="T:Elastic.Apm.Libraries.Newtonsoft.Json.JsonSerializerSettings" /> used to deserialize the object.
            If this is <c>null</c>, default serialization settings will be used.
            </param>
            <returns>The deserialized object from the JSON string.</returns>
        </member>
        <member name="M:Elastic.Apm.Libraries.Newtonsoft.Json.JsonConvert.DeserializeObject(System.String,System.Type,Elastic.Apm.Libraries.Newtonsoft.Json.JsonConverter[])">
            <summary>
            Deserializes the JSON to the specified .NET type using a collection of <see cref="T:Elastic.Apm.Libraries.Newtonsoft.Json.JsonConverter" />.
            </summary>
            <param name="value">The JSON to deserialize.</param>
            <param name="type">The type of the object to deserialize.</param>
            <param name="converters">Converters to use while deserializing.</param>
            <returns>The deserialized object from the JSON string.</returns>
        </member>
        <member name="M:Elastic.Apm.Libraries.Newtonsoft.Json.JsonConvert.DeserializeObject(System.String,System.Type,Elastic.Apm.Libraries.Newtonsoft.Json.JsonSerializerSettings)">
            <summary>
            Deserializes the JSON to the specified .NET type using <see cref="T:Elastic.Apm.Libraries.Newtonsoft.Json.JsonSerializerSettings" />.
            </summary>
            <param name="value">The JSON to deserialize.</param>
            <param name="type">The type of the object to deserialize to.</param>
            <param name="settings">
            The <see cref="T:Elastic.Apm.Libraries.Newtonsoft.Json.JsonSerializerSettings" /> used to deserialize the object.
            If this is <c>null</c>, default serialization settings will be used.
            </param>
            <returns>The deserialized object from the JSON string.</returns>
        </member>
        <member name="M:Elastic.Apm.Libraries.Newtonsoft.Json.JsonConvert.PopulateObject(System.String,System.Object)">
            <summary>
            Populates the object with values from the JSON string.
            </summary>
            <param name="value">The JSON to populate values from.</param>
            <param name="target">The target object to populate values onto.</param>
        </member>
        <member name="M:Elastic.Apm.Libraries.Newtonsoft.Json.JsonConvert.PopulateObject(System.String,System.Object,Elastic.Apm.Libraries.Newtonsoft.Json.JsonSerializerSettings)">
            <summary>
            Populates the object with values from the JSON string using <see cref="T:Elastic.Apm.Libraries.Newtonsoft.Json.JsonSerializerSettings" />.
            </summary>
            <param name="value">The JSON to populate values from.</param>
            <param name="target">The target object to populate values onto.</param>
            <param name="settings">
            The <see cref="T:Elastic.Apm.Libraries.Newtonsoft.Json.JsonSerializerSettings" /> used to deserialize the object.
            If this is <c>null</c>, default serialization settings will be used.
            </param>
        </member>
        <member name="M:Elastic.Apm.Libraries.Newtonsoft.Json.JsonConvert.SerializeXmlNode(System.Xml.XmlNode)">
            <summary>
            Serializes the <see cref="T:System.Xml.XmlNode"/> to a JSON string.
            </summary>
            <param name="node">The node to serialize.</param>
            <returns>A JSON string of the <see cref="T:System.Xml.XmlNode"/>.</returns>
        </member>
        <member name="M:Elastic.Apm.Libraries.Newtonsoft.Json.JsonConvert.SerializeXmlNode(System.Xml.XmlNode,Elastic.Apm.Libraries.Newtonsoft.Json.Formatting)">
            <summary>
            Serializes the <see cref="T:System.Xml.XmlNode"/> to a JSON string using formatting.
            </summary>
            <param name="node">The node to serialize.</param>
            <param name="formatting">Indicates how the output should be formatted.</param>
            <returns>A JSON string of the <see cref="T:System.Xml.XmlNode"/>.</returns>
        </member>
        <member name="M:Elastic.Apm.Libraries.Newtonsoft.Json.JsonConvert.SerializeXmlNode(System.Xml.XmlNode,Elastic.Apm.Libraries.Newtonsoft.Json.Formatting,System.Boolean)">
            <summary>
            Serializes the <see cref="T:System.Xml.XmlNode"/> to a JSON string using formatting and omits the root object if <paramref name="omitRootObject"/> is <c>true</c>.
            </summary>
            <param name="node">The node to serialize.</param>
            <param name="formatting">Indicates how the output should be formatted.</param>
            <param name="omitRootObject">Omits writing the root object.</param>
            <returns>A JSON string of the <see cref="T:System.Xml.XmlNode"/>.</returns>
        </member>
        <member name="M:Elastic.Apm.Libraries.Newtonsoft.Json.JsonConvert.DeserializeXmlNode(System.String)">
            <summary>
            Deserializes the <see cref="T:System.Xml.XmlNode"/> from a JSON string.
            </summary>
            <param name="value">The JSON string.</param>
            <returns>The deserialized <see cref="T:System.Xml.XmlNode"/>.</returns>
        </member>
        <member name="M:Elastic.Apm.Libraries.Newtonsoft.Json.JsonConvert.DeserializeXmlNode(System.String,System.String)">
            <summary>
            Deserializes the <see cref="T:System.Xml.XmlNode"/> from a JSON string nested in a root element specified by <paramref name="deserializeRootElementName"/>.
            </summary>
            <param name="value">The JSON string.</param>
            <param name="deserializeRootElementName">The name of the root element to append when deserializing.</param>
            <returns>The deserialized <see cref="T:System.Xml.XmlNode"/>.</returns>
        </member>
        <member name="M:Elastic.Apm.Libraries.Newtonsoft.Json.JsonConvert.DeserializeXmlNode(System.String,System.String,System.Boolean)">
            <summary>
            Deserializes the <see cref="T:System.Xml.XmlNode"/> from a JSON string nested in a root element specified by <paramref name="deserializeRootElementName"/>
            and writes a Json.NET array attribute for collections.
            </summary>
            <param name="value">The JSON string.</param>
            <param name="deserializeRootElementName">The name of the root element to append when deserializing.</param>
            <param name="writeArrayAttribute">
            A value to indicate whether to write the Json.NET array attribute.
            This attribute helps preserve arrays when converting the written XML back to JSON.
            </param>
            <returns>The deserialized <see cref="T:System.Xml.XmlNode"/>.</returns>
        </member>
        <member name="M:Elastic.Apm.Libraries.Newtonsoft.Json.JsonConvert.DeserializeXmlNode(System.String,System.String,System.Boolean,System.Boolean)">
            <summary>
            Deserializes the <see cref="T:System.Xml.XmlNode"/> from a JSON string nested in a root element specified by <paramref name="deserializeRootElementName"/>,
            writes a Json.NET array attribute for collections, and encodes special characters.
            </summary>
            <param name="value">The JSON string.</param>
            <param name="deserializeRootElementName">The name of the root element to append when deserializing.</param>
            <param name="writeArrayAttribute">
            A value to indicate whether to write the Json.NET array attribute.
            This attribute helps preserve arrays when converting the written XML back to JSON.
            </param>
            <param name="encodeSpecialCharacters">
            A value to indicate whether to encode special characters when converting JSON to XML.
            If <c>true</c>, special characters like ':', '@', '?', '#' and '$' in JSON property names aren't used to specify
            XML namespaces, attributes or processing directives. Instead special characters are encoded and written
            as part of the XML element name.
            </param>
            <returns>The deserialized <see cref="T:System.Xml.XmlNode"/>.</returns>
        </member>
        <member name="T:Elastic.Apm.Libraries.Newtonsoft.Json.JsonConverter">
            <summary>
            Converts an object to and from JSON.
            </summary>
        </member>
        <member name="M:Elastic.Apm.Libraries.Newtonsoft.Json.JsonConverter.CanConvert(System.Type)">
            <summary>
            Determines whether this instance can convert the specified object type.
            </summary>
            <param name="objectType">Type of the object.</param>
            <returns>
            	<c>true</c> if this instance can convert the specified object type; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Elastic.Apm.Libraries.Newtonsoft.Json.JsonConverter.ReadJson(Elastic.Apm.Libraries.Newtonsoft.Json.JsonReader,System.Type,System.Object,Elastic.Apm.Libraries.Newtonsoft.Json.JsonSerializer)">
            <summary>
            Reads the JSON representation of the object.
            </summary>
            <param name="reader">The <see cref="T:Elastic.Apm.Libraries.Newtonsoft.Json.JsonReader" /> to read from.</param>
            <param name="objectType">Type of the object.</param>
            <param name="existingValue">The existing value of object being read.</param>
            <param name="serializer">The calling serializer.</param>
            <returns>The object value.</returns>
        </member>
        <member name="M:Elastic.Apm.Libraries.Newtonsoft.Json.JsonConverter.WriteJson(Elastic.Apm.Libraries.Newtonsoft.Json.JsonWriter,System.Object,Elastic.Apm.Libraries.Newtonsoft.Json.JsonSerializer)">
            <summary>
            Writes the JSON representation of the object.
            </summary>
            <param name="writer">The <see cref="T:Elastic.Apm.Libraries.Newtonsoft.Json.JsonWriter" /> to write to.</param>
            <param name="value">The value.</param>
            <param name="serializer">The calling serializer.</param>
        </member>
        <member name="P:Elastic.Apm.Libraries.Newtonsoft.Json.JsonConverter.CanRead">
            <summary>
            Gets a value indicating whether this <see cref="T:Elastic.Apm.Libraries.Newtonsoft.Json.JsonConverter" /> can read JSON.
            </summary>
            <value><c>true</c> if this <see cref="T:Elastic.Apm.Libraries.Newtonsoft.Json.JsonConverter" /> can read JSON; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Elastic.Apm.Libraries.Newtonsoft.Json.JsonConverter.CanWrite">
            <summary>
            Gets a value indicating whether this <see cref="T:Elastic.Apm.Libraries.Newtonsoft.Json.JsonConverter" /> can write JSON.
            </summary>
            <value><c>true</c> if this <see cref="T:Elastic.Apm.Libraries.Newtonsoft.Json.JsonConverter" /> can write JSON; otherwise, <c>false</c>.</value>
        </member>
        <member name="T:Elastic.Apm.Libraries.Newtonsoft.Json.JsonConverter`1">
            <summary>
            Converts an object to and from JSON.
            </summary>
            <typeparam name="T">The object type to convert.</typeparam>
        </member>
        <member name="M:Elastic.Apm.Libraries.Newtonsoft.Json.JsonConverter`1.ReadJson(Elastic.Apm.Libraries.Newtonsoft.Json.JsonReader,System.Type,`0,System.Boolean,Elastic.Apm.Libraries.Newtonsoft.Json.JsonSerializer)">
            <summary>
            Reads the JSON representation of the object.
            </summary>
            <param name="reader">The <see cref="T:Elastic.Apm.Libraries.Newtonsoft.Json.JsonReader" /> to read from.</param>
            <param name="objectType">Type of the object.</param>
            <param name="existingValue">
            The existing value of object being read. If there is no existing value then <c>null</c>
            will be used.
            </param>
            <param name="hasExistingValue">The existing value has a value.</param>
            <param name="serializer">The calling serializer.</param>
            <returns>The object value.</returns>
        </member>
        <member name="M:Elastic.Apm.Libraries.Newtonsoft.Json.JsonConverter`1.WriteJson(Elastic.Apm.Libraries.Newtonsoft.Json.JsonWriter,`0,Elastic.Apm.Libraries.Newtonsoft.Json.JsonSerializer)">
            <summary>
            Writes the JSON representation of the object.
            </summary>
            <param name="writer">The <see cref="T:Elastic.Apm.Libraries.Newtonsoft.Json.JsonWriter" /> to write to.</param>
            <param name="value">The value.</param>
            <param name="serializer">The calling serializer.</param>
        </member>
        <member name="M:Elastic.Apm.Libraries.Newtonsoft.Json.JsonConverter`1.WriteJson(Elastic.Apm.Libraries.Newtonsoft.Json.JsonWriter,System.Object,Elastic.Apm.Libraries.Newtonsoft.Json.JsonSerializer)">
            <summary>
            Writes the JSON representation of the object.
            </summary>
            <param name="writer">The <see cref="T:Elastic.Apm.Libraries.Newtonsoft.Json.JsonWriter" /> to write to.</param>
            <param name="value">The value.</param>
            <param name="serializer">The calling serializer.</param>
        </member>
        <member name="M:Elastic.Apm.Libraries.Newtonsoft.Json.JsonConverter`1.ReadJson(Elastic.Apm.Libraries.Newtonsoft.Json.JsonReader,System.Type,System.Object,Elastic.Apm.Libraries.Newtonsoft.Json.JsonSerializer)">
            <summary>
            Reads the JSON representation of the object.
            </summary>
            <param name="reader">The <see cref="T:Elastic.Apm.Libraries.Newtonsoft.Json.JsonReader" /> to read from.</param>
            <param name="objectType">Type of the object.</param>
            <param name="existingValue">The existing value of object being read.</param>
            <param name="serializer">The calling serializer.</param>
            <returns>The object value.</returns>
        </member>
        <member name="M:Elastic.Apm.Libraries.Newtonsoft.Json.JsonConverter`1.CanConvert(System.Type)">
            <summary>
            Determines whether this instance can convert the specified object type.
            </summary>
            <param name="objectType">Type of the object.</param>
            <returns>
            	<c>true</c> if this instance can convert the specified object type; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="T:Elastic.Apm.Libraries.Newtonsoft.Json.JsonConverterAttribute">
            <summary>
            Instructs the <see cref="T:Elastic.Apm.Libraries.Newtonsoft.Json.JsonSerializer" /> to use the specified <see cref="T:Elastic.Apm.Libraries.Newtonsoft.Json.JsonConverter" /> when serializing the
            member or class.
            </summary>
        </member>
        <member name="M:Elastic.Apm.Libraries.Newtonsoft.Json.JsonConverterAttribute.#ctor(System.Type)">
            <summary>
            Initializes a new instance of the <see cref="T:Elastic.Apm.Libraries.Newtonsoft.Json.JsonConverterAttribute" /> class.
            </summary>
            <param name="converterType">Type of the <see cref="T:Elastic.Apm.Libraries.Newtonsoft.Json.JsonConverter" />.</param>
        </member>
        <member name="M:Elastic.Apm.Libraries.Newtonsoft.Json.JsonConverterAttribute.#ctor(System.Type,System.Object[])">
            <summary>
            Initializes a new instance of the <see cref="T:Elastic.Apm.Libraries.Newtonsoft.Json.JsonConverterAttribute" /> class.
            </summary>
            <param name="converterType">Type of the <see cref="T:Elastic.Apm.Libraries.Newtonsoft.Json.JsonConverter" />.</param>
            <param name="converterParameters">
            Parameter list to use when constructing the <see cref="T:Elastic.Apm.Libraries.Newtonsoft.Json.JsonConverter" />. Can be
            <c>null</c>.
            </param>
        </member>
        <member name="P:Elastic.Apm.Libraries.Newtonsoft.Json.JsonConverterAttribute.ConverterParameters">
            <summary>
            The parameter list to use when constructing the <see cref="T:Elastic.Apm.Libraries.Newtonsoft.Json.JsonConverter" /> described by <see cref="P:Elastic.Apm.Libraries.Newtonsoft.Json.JsonConverterAttribute.ConverterType" />.
            If <c>null</c>, the default constructor is used.
            </summary>
        </member>
        <member name="P:Elastic.Apm.Libraries.Newtonsoft.Json.JsonConverterAttribute.ConverterType">
            <summary>
            Gets the <see cref="T:System.Type" /> of the <see cref="T:Elastic.Apm.Libraries.Newtonsoft.Json.JsonConverter" />.
            </summary>
            <value>The <see cref="T:System.Type" /> of the <see cref="T:Elastic.Apm.Libraries.Newtonsoft.Json.JsonConverter" />.</value>
        </member>
        <member name="T:Elastic.Apm.Libraries.Newtonsoft.Json.JsonConverterCollection">
            <summary>
            Represents a collection of <see cref="T:Elastic.Apm.Libraries.Newtonsoft.Json.JsonConverter" />.
            </summary>
        </member>
        <member name="T:Elastic.Apm.Libraries.Newtonsoft.Json.JsonDictionaryAttribute">
            <summary>
            Instructs the <see cref="T:Elastic.Apm.Libraries.Newtonsoft.Json.JsonSerializer" /> how to serialize the collection.
            </summary>
        </member>
        <member name="M:Elastic.Apm.Libraries.Newtonsoft.Json.JsonDictionaryAttribute.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Elastic.Apm.Libraries.Newtonsoft.Json.JsonDictionaryAttribute" /> class.
            </summary>
        </member>
        <member name="M:Elastic.Apm.Libraries.Newtonsoft.Json.JsonDictionaryAttribute.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Elastic.Apm.Libraries.Newtonsoft.Json.JsonDictionaryAttribute" /> class with the specified container Id.
            </summary>
            <param name="id">The container Id.</param>
        </member>
        <member name="T:Elastic.Apm.Libraries.Newtonsoft.Json.JsonException">
            <summary>
            The exception thrown when an error occurs during JSON serialization or deserialization.
            </summary>
        </member>
        <member name="M:Elastic.Apm.Libraries.Newtonsoft.Json.JsonException.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Elastic.Apm.Libraries.Newtonsoft.Json.JsonException" /> class.
            </summary>
        </member>
        <member name="M:Elastic.Apm.Libraries.Newtonsoft.Json.JsonException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Elastic.Apm.Libraries.Newtonsoft.Json.JsonException" /> class
            with a specified error message.
            </summary>
            <param name="message">The error message that explains the reason for the exception.</param>
        </member>
        <member name="M:Elastic.Apm.Libraries.Newtonsoft.Json.JsonException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:Elastic.Apm.Libraries.Newtonsoft.Json.JsonException" /> class
            with a specified error message and a reference to the inner exception that is the cause of this exception.
            </summary>
            <param name="message">The error message that explains the reason for the exception.</param>
            <param name="innerException">
            The exception that is the cause of the current exception, or <c>null</c> if no inner
            exception is specified.
            </param>
        </member>
        <member name="M:Elastic.Apm.Libraries.Newtonsoft.Json.JsonException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the <see cref="T:Elastic.Apm.Libraries.Newtonsoft.Json.JsonException"/> class.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo"/> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext"/> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info"/> parameter is <c>null</c>.</exception>
            <exception cref="T:System.Runtime.Serialization.SerializationException">The class name is <c>null</c> or <see cref="P:System.Exception.HResult"/> is zero (0).</exception>
        </member>
        <member name="T:Elastic.Apm.Libraries.Newtonsoft.Json.JsonExtensionDataAttribute">
            <summary>
            Instructs the <see cref="T:Elastic.Apm.Libraries.Newtonsoft.Json.JsonSerializer" /> to deserialize properties with no matching class member into the specified
            collection
            and write values during serialization.
            </summary>
        </member>
        <member name="M:Elastic.Apm.Libraries.Newtonsoft.Json.JsonExtensionDataAttribute.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Elastic.Apm.Libraries.Newtonsoft.Json.JsonExtensionDataAttribute" /> class.
            </summary>
        </member>
        <member name="P:Elastic.Apm.Libraries.Newtonsoft.Json.JsonExtensionDataAttribute.ReadData">
            <summary>
            Gets or sets a value that indicates whether to read extension data when deserializing the object.
            </summary>
            <value>
            	<c>true</c> to read extension data when deserializing the object; otherwise, <c>false</c>. The default is <c>true</c>.
            </value>
        </member>
        <member name="P:Elastic.Apm.Libraries.Newtonsoft.Json.JsonExtensionDataAttribute.WriteData">
            <summary>
            Gets or sets a value that indicates whether to write extension data when serializing the object.
            </summary>
            <value>
            	<c>true</c> to write extension data when serializing the object; otherwise, <c>false</c>. The default is <c>true</c>.
            </value>
        </member>
        <member name="T:Elastic.Apm.Libraries.Newtonsoft.Json.JsonIgnoreAttribute">
            <summary>
            Instructs the <see cref="T:Elastic.Apm.Libraries.Newtonsoft.Json.JsonSerializer" /> not to serialize the public field or public read/write property value.
            </summary>
        </member>
        <member name="T:Elastic.Apm.Libraries.Newtonsoft.Json.JsonNameTable">
            <summary>
            Base class for a table of atomized string objects.
            </summary>
        </member>
        <member name="M:Elastic.Apm.Libraries.Newtonsoft.Json.JsonNameTable.Get(System.Char[],System.Int32,System.Int32)">
            <summary>
            Gets a string containing the same characters as the specified range of characters in the given array.
            </summary>
            <param name="key">The character array containing the name to find.</param>
            <param name="start">The zero-based index into the array specifying the first character of the name.</param>
            <param name="length">The number of characters in the name.</param>
            <returns>A string containing the same characters as the specified range of characters in the given array.</returns>
        </member>
        <member name="T:Elastic.Apm.Libraries.Newtonsoft.Json.JsonObjectAttribute">
            <summary>
            Instructs the <see cref="T:Elastic.Apm.Libraries.Newtonsoft.Json.JsonSerializer" /> how to serialize the object.
            </summary>
        </member>
        <member name="M:Elastic.Apm.Libraries.Newtonsoft.Json.JsonObjectAttribute.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Elastic.Apm.Libraries.Newtonsoft.Json.JsonObjectAttribute" /> class.
            </summary>
        </member>
        <member name="M:Elastic.Apm.Libraries.Newtonsoft.Json.JsonObjectAttribute.#ctor(Elastic.Apm.Libraries.Newtonsoft.Json.MemberSerialization)">
            <summary>
            Initializes a new instance of the <see cref="T:Elastic.Apm.Libraries.Newtonsoft.Json.JsonObjectAttribute" /> class with the specified member serialization.
            </summary>
            <param name="memberSerialization">The member serialization.</param>
        </member>
        <member name="M:Elastic.Apm.Libraries.Newtonsoft.Json.JsonObjectAttribute.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Elastic.Apm.Libraries.Newtonsoft.Json.JsonObjectAttribute" /> class with the specified container Id.
            </summary>
            <param name="id">The container Id.</param>
        </member>
        <member name="P:Elastic.Apm.Libraries.Newtonsoft.Json.JsonObjectAttribute.ItemNullValueHandling">
            <summary>
            Gets or sets how the object's properties with null values are handled during serialization and deserialization.
            </summary>
            <value>How the object's properties with null values are handled during serialization and deserialization.</value>
        </member>
        <member name="P:Elastic.Apm.Libraries.Newtonsoft.Json.JsonObjectAttribute.ItemRequired">
            <summary>
            Gets or sets a value that indicates whether the object's properties are required.
            </summary>
            <value>
            	A value indicating whether the object's properties are required.
            </value>
        </member>
        <member name="P:Elastic.Apm.Libraries.Newtonsoft.Json.JsonObjectAttribute.MemberSerialization">
            <summary>
            Gets or sets the member serialization.
            </summary>
            <value>The member serialization.</value>
        </member>
        <member name="P:Elastic.Apm.Libraries.Newtonsoft.Json.JsonObjectAttribute.MissingMemberHandling">
            <summary>
            Gets or sets the missing member handling used when deserializing this object.
            </summary>
            <value>The missing member handling.</value>
        </member>
        <member name="T:Elastic.Apm.Libraries.Newtonsoft.Json.JsonPropertyAttribute">
            <summary>
            Instructs the <see cref="T:Elastic.Apm.Libraries.Newtonsoft.Json.JsonSerializer" /> to always serialize the member with the specified name.
            </summary>
        </member>
        <member name="M:Elastic.Apm.Libraries.Newtonsoft.Json.JsonPropertyAttribute.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Elastic.Apm.Libraries.Newtonsoft.Json.JsonPropertyAttribute" /> class.
            </summary>
        </member>
        <member name="M:Elastic.Apm.Libraries.Newtonsoft.Json.JsonPropertyAttribute.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Elastic.Apm.Libraries.Newtonsoft.Json.JsonPropertyAttribute" /> class with the specified name.
            </summary>
            <param name="propertyName">Name of the property.</param>
        </member>
        <member name="P:Elastic.Apm.Libraries.Newtonsoft.Json.JsonPropertyAttribute.DefaultValueHandling">
            <summary>
            Gets or sets the default value handling used when serializing this property.
            </summary>
            <value>The default value handling.</value>
        </member>
        <member name="P:Elastic.Apm.Libraries.Newtonsoft.Json.JsonPropertyAttribute.IsReference">
            <summary>
            Gets or sets whether this property's value is serialized as a reference.
            </summary>
            <value>Whether this property's value is serialized as a reference.</value>
        </member>
        <member name="P:Elastic.Apm.Libraries.Newtonsoft.Json.JsonPropertyAttribute.ItemConverterParameters">
            <summary>
            The parameter list to use when constructing the <see cref="T:Elastic.Apm.Libraries.Newtonsoft.Json.JsonConverter" /> described by
            <see cref="P:Elastic.Apm.Libraries.Newtonsoft.Json.JsonPropertyAttribute.ItemConverterType" />.
            If <c>null</c>, the default constructor is used.
            When non-<c>null</c>, there must be a constructor defined in the <see cref="T:Elastic.Apm.Libraries.Newtonsoft.Json.JsonConverter" /> that exactly matches the
            number,
            order, and type of these parameters.
            </summary>
            <example>
            <code>
            [JsonProperty(ItemConverterType = typeof(MyContainerConverter), ItemConverterParameters = new object[] { 123, "Four" })]
            </code>
            </example>
        </member>
        <member name="P:Elastic.Apm.Libraries.Newtonsoft.Json.JsonPropertyAttribute.ItemConverterType">
            <summary>
            Gets or sets the <see cref="T:Elastic.Apm.Libraries.Newtonsoft.Json.JsonConverter" /> type used when serializing the property's collection items.
            </summary>
            <value>The collection's items <see cref="T:Elastic.Apm.Libraries.Newtonsoft.Json.JsonConverter" /> type.</value>
        </member>
        <member name="P:Elastic.Apm.Libraries.Newtonsoft.Json.JsonPropertyAttribute.ItemIsReference">
            <summary>
            Gets or sets whether this property's collection items are serialized as a reference.
            </summary>
            <value>Whether this property's collection items are serialized as a reference.</value>
        </member>
        <member name="P:Elastic.Apm.Libraries.Newtonsoft.Json.JsonPropertyAttribute.ItemReferenceLoopHandling">
            <summary>
            Gets or sets the reference loop handling used when serializing the property's collection items.
            </summary>
            <value>The collection's items reference loop handling.</value>
        </member>
        <member name="P:Elastic.Apm.Libraries.Newtonsoft.Json.JsonPropertyAttribute.ItemTypeNameHandling">
            <summary>
            Gets or sets the type name handling used when serializing the property's collection items.
            </summary>
            <value>The collection's items type name handling.</value>
        </member>
        <member name="P:Elastic.Apm.Libraries.Newtonsoft.Json.JsonPropertyAttribute.NamingStrategyParameters">
            <summary>
            The parameter list to use when constructing the <see cref="T:Elastic.Apm.Libraries.Newtonsoft.Json.Serialization.NamingStrategy" /> described by
            <see cref="P:Elastic.Apm.Libraries.Newtonsoft.Json.JsonPropertyAttribute.NamingStrategyType" />.
            If <c>null</c>, the default constructor is used.
            When non-<c>null</c>, there must be a constructor defined in the <see cref="T:Elastic.Apm.Libraries.Newtonsoft.Json.Serialization.NamingStrategy" /> that exactly matches the
            number,
            order, and type of these parameters.
            </summary>
            <example>
            <code>
            [JsonProperty(NamingStrategyType = typeof(MyNamingStrategy), NamingStrategyParameters = new object[] { 123, "Four" })]
            </code>
            </example>
        </member>
        <member name="P:Elastic.Apm.Libraries.Newtonsoft.Json.JsonPropertyAttribute.NamingStrategyType">
            <summary>
            Gets or sets the <see cref="T:System.Type" /> of the <see cref="T:Elastic.Apm.Libraries.Newtonsoft.Json.Serialization.NamingStrategy" />.
            </summary>
            <value>The <see cref="T:System.Type" /> of the <see cref="T:Elastic.Apm.Libraries.Newtonsoft.Json.Serialization.NamingStrategy" />.</value>
        </member>
        <member name="P:Elastic.Apm.Libraries.Newtonsoft.Json.JsonPropertyAttribute.NullValueHandling">
            <summary>
            Gets or sets the null value handling used when serializing this property.
            </summary>
            <value>The null value handling.</value>
        </member>
        <member name="P:Elastic.Apm.Libraries.Newtonsoft.Json.JsonPropertyAttribute.ObjectCreationHandling">
            <summary>
            Gets or sets the object creation handling used when deserializing this property.
            </summary>
            <value>The object creation handling.</value>
        </member>
        <member name="P:Elastic.Apm.Libraries.Newtonsoft.Json.JsonPropertyAttribute.Order">
            <summary>
            Gets or sets the order of serialization of a member.
            </summary>
            <value>The numeric order of serialization.</value>
        </member>
        <member name="P:Elastic.Apm.Libraries.Newtonsoft.Json.JsonPropertyAttribute.PropertyName">
            <summary>
            Gets or sets the name of the property.
            </summary>
            <value>The name of the property.</value>
        </member>
        <member name="P:Elastic.Apm.Libraries.Newtonsoft.Json.JsonPropertyAttribute.ReferenceLoopHandling">
            <summary>
            Gets or sets the reference loop handling used when serializing this property.
            </summary>
            <value>The reference loop handling.</value>
        </member>
        <member name="P:Elastic.Apm.Libraries.Newtonsoft.Json.JsonPropertyAttribute.Required">
            <summary>
            Gets or sets a value indicating whether this property is required.
            </summary>
            <value>
            	A value indicating whether this property is required.
            </value>
        </member>
        <member name="P:Elastic.Apm.Libraries.Newtonsoft.Json.JsonPropertyAttribute.TypeNameHandling">
            <summary>
            Gets or sets the type name handling used when serializing this property.
            </summary>
            <value>The type name handling.</value>
        </member>
        <member name="T:Elastic.Apm.Libraries.Newtonsoft.Json.JsonReader">
            <summary>
            Represents a reader that provides fast, non-cached, forward-only access to serialized JSON data.
            </summary>
        </member>
        <member name="M:Elastic.Apm.Libraries.Newtonsoft.Json.JsonReader.ReadAsync(System.Threading.CancellationToken)">
            <summary>
            Asynchronously reads the next JSON token from the source.
            </summary>
            <param name="cancellationToken">The token to monitor for cancellation requests. The default value is <see cref="P:System.Threading.CancellationToken.None"/>.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task`1"/> that represents the asynchronous read. The <see cref="P:System.Threading.Tasks.Task`1.Result"/>
            property returns <c>true</c> if the next token was read successfully; <c>false</c> if there are no more tokens to read.</returns>
            <remarks>The default behaviour is to execute synchronously, returning an already-completed task. Derived
            classes can override this behaviour for true asynchronicity.</remarks>
        </member>
        <member name="M:Elastic.Apm.Libraries.Newtonsoft.Json.JsonReader.SkipAsync(System.Threading.CancellationToken)">
            <summary>
            Asynchronously skips the children of the current token.
            </summary>
            <param name="cancellationToken">The token to monitor for cancellation requests. The default value is <see cref="P:System.Threading.CancellationToken.None"/>.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> that represents the asynchronous operation.</returns>
            <remarks>The default behaviour is to execute synchronously, returning an already-completed task. Derived
            classes can override this behaviour for true asynchronicity.</remarks>
        </member>
        <member name="M:Elastic.Apm.Libraries.Newtonsoft.Json.JsonReader.ReadAsBooleanAsync(System.Threading.CancellationToken)">
            <summary>
            Asynchronously reads the next JSON token from the source as a <see cref="T:System.Nullable`1"/> of <see cref="T:System.Boolean"/>.
            </summary>
            <param name="cancellationToken">The token to monitor for cancellation requests. The default value is <see cref="P:System.Threading.CancellationToken.None"/>.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task`1"/> that represents the asynchronous read. The <see cref="P:System.Threading.Tasks.Task`1.Result"/>
            property returns the <see cref="T:System.Nullable`1"/> of <see cref="T:System.Boolean"/>. This result will be <c>null</c> at the end of an array.</returns>
            <remarks>The default behaviour is to execute synchronously, returning an already-completed task. Derived
            classes can override this behaviour for true asynchronicity.</remarks>
        </member>
        <member name="M:Elastic.Apm.Libraries.Newtonsoft.Json.JsonReader.ReadAsBytesAsync(System.Threading.CancellationToken)">
            <summary>
            Asynchronously reads the next JSON token from the source as a <see cref="T:System.Byte"/>[].
            </summary>
            <param name="cancellationToken">The token to monitor for cancellation requests. The default value is <see cref="P:System.Threading.CancellationToken.None"/>.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task`1"/> that represents the asynchronous read. The <see cref="P:System.Threading.Tasks.Task`1.Result"/>
            property returns the <see cref="T:System.Byte"/>[]. This result will be <c>null</c> at the end of an array.</returns>
            <remarks>The default behaviour is to execute synchronously, returning an already-completed task. Derived
            classes can override this behaviour for true asynchronicity.</remarks>
        </member>
        <member name="M:Elastic.Apm.Libraries.Newtonsoft.Json.JsonReader.ReadAsDateTimeAsync(System.Threading.CancellationToken)">
            <summary>
            Asynchronously reads the next JSON token from the source as a <see cref="T:System.Nullable`1"/> of <see cref="T:System.DateTime"/>.
            </summary>
            <param name="cancellationToken">The token to monitor for cancellation requests. The default value is <see cref="P:System.Threading.CancellationToken.None"/>.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task`1"/> that represents the asynchronous read. The <see cref="P:System.Threading.Tasks.Task`1.Result"/>
            property returns the <see cref="T:System.Nullable`1"/> of <see cref="T:System.DateTime"/>. This result will be <c>null</c> at the end of an array.</returns>
            <remarks>The default behaviour is to execute synchronously, returning an already-completed task. Derived
            classes can override this behaviour for true asynchronicity.</remarks>
        </member>
        <member name="M:Elastic.Apm.Libraries.Newtonsoft.Json.JsonReader.ReadAsDateTimeOffsetAsync(System.Threading.CancellationToken)">
            <summary>
            Asynchronously reads the next JSON token from the source as a <see cref="T:System.Nullable`1"/> of <see cref="T:System.DateTimeOffset"/>.
            </summary>
            <param name="cancellationToken">The token to monitor for cancellation requests. The default value is <see cref="P:System.Threading.CancellationToken.None"/>.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task`1"/> that represents the asynchronous read. The <see cref="P:System.Threading.Tasks.Task`1.Result"/>
            property returns the <see cref="T:System.Nullable`1"/> of <see cref="T:System.DateTimeOffset"/>. This result will be <c>null</c> at the end of an array.</returns>
            <remarks>The default behaviour is to execute synchronously, returning an already-completed task. Derived
            classes can override this behaviour for true asynchronicity.</remarks>
        </member>
        <member name="M:Elastic.Apm.Libraries.Newtonsoft.Json.JsonReader.ReadAsDecimalAsync(System.Threading.CancellationToken)">
            <summary>
            Asynchronously reads the next JSON token from the source as a <see cref="T:System.Nullable`1"/> of <see cref="T:System.Decimal"/>.
            </summary>
            <param name="cancellationToken">The token to monitor for cancellation requests. The default value is <see cref="P:System.Threading.CancellationToken.None"/>.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task`1"/> that represents the asynchronous read. The <see cref="P:System.Threading.Tasks.Task`1.Result"/>
            property returns the <see cref="T:System.Nullable`1"/> of <see cref="T:System.Decimal"/>. This result will be <c>null</c> at the end of an array.</returns>
            <remarks>The default behaviour is to execute synchronously, returning an already-completed task. Derived
            classes can override this behaviour for true asynchronicity.</remarks>
        </member>
        <member name="M:Elastic.Apm.Libraries.Newtonsoft.Json.JsonReader.ReadAsDoubleAsync(System.Threading.CancellationToken)">
            <summary>
            Asynchronously reads the next JSON token from the source as a <see cref="T:System.Nullable`1"/> of <see cref="T:System.Double"/>.
            </summary>
            <param name="cancellationToken">The token to monitor for cancellation requests. The default value is <see cref="P:System.Threading.CancellationToken.None"/>.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task`1"/> that represents the asynchronous read. The <see cref="P:System.Threading.Tasks.Task`1.Result"/>
            property returns the <see cref="T:System.Nullable`1"/> of <see cref="T:System.Double"/>. This result will be <c>null</c> at the end of an array.</returns>
            <remarks>The default behaviour is to execute synchronously, returning an already-completed task. Derived
            classes can override this behaviour for true asynchronicity.</remarks>
        </member>
        <member name="M:Elastic.Apm.Libraries.Newtonsoft.Json.JsonReader.ReadAsInt32Async(System.Threading.CancellationToken)">
            <summary>
            Asynchronously reads the next JSON token from the source as a <see cref="T:System.Nullable`1"/> of <see cref="T:System.Int32"/>.
            </summary>
            <param name="cancellationToken">The token to monitor for cancellation requests. The default value is <see cref="P:System.Threading.CancellationToken.None"/>.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task`1"/> that represents the asynchronous read. The <see cref="P:System.Threading.Tasks.Task`1.Result"/>
            property returns the <see cref="T:System.Nullable`1"/> of <see cref="T:System.Int32"/>. This result will be <c>null</c> at the end of an array.</returns>
            <remarks>The default behaviour is to execute synchronously, returning an already-completed task. Derived
            classes can override this behaviour for true asynchronicity.</remarks>
        </member>
        <member name="M:Elastic.Apm.Libraries.Newtonsoft.Json.JsonReader.ReadAsStringAsync(System.Threading.CancellationToken)">
            <summary>
            Asynchronously reads the next JSON token from the source as a <see cref="T:System.String"/>.
            </summary>
            <param name="cancellationToken">The token to monitor for cancellation requests. The default value is <see cref="P:System.Threading.CancellationToken.None"/>.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task`1"/> that represents the asynchronous read. The <see cref="P:System.Threading.Tasks.Task`1.Result"/>
            property returns the <see cref="T:System.String"/>. This result will be <c>null</c> at the end of an array.</returns>
            <remarks>The default behaviour is to execute synchronously, returning an already-completed task. Derived
            classes can override this behaviour for true asynchronicity.</remarks>
        </member>
        <member name="T:Elastic.Apm.Libraries.Newtonsoft.Json.JsonReader.State">
            <summary>
            Specifies the state of the reader.
            </summary>
        </member>
        <member name="F:Elastic.Apm.Libraries.Newtonsoft.Json.JsonReader.State.Start">
            <summary>
            A <see cref="T:Elastic.Apm.Libraries.Newtonsoft.Json.JsonReader" /> read method has not been called.
            </summary>
        </member>
        <member name="F:Elastic.Apm.Libraries.Newtonsoft.Json.JsonReader.State.Complete">
            <summary>
            The end of the file has been reached successfully.
            </summary>
        </member>
        <member name="F:Elastic.Apm.Libraries.Newtonsoft.Json.JsonReader.State.Property">
            <summary>
            Reader is at a property.
            </summary>
        </member>
        <member name="F:Elastic.Apm.Libraries.Newtonsoft.Json.JsonReader.State.ObjectStart">
            <summary>
            Reader is at the start of an object.
            </summary>
        </member>
        <member name="F:Elastic.Apm.Libraries.Newtonsoft.Json.JsonReader.State.Object">
            <summary>
            Reader is in an object.
            </summary>
        </member>
        <member name="F:Elastic.Apm.Libraries.Newtonsoft.Json.JsonReader.State.ArrayStart">
            <summary>
            Reader is at the start of an array.
            </summary>
        </member>
        <member name="F:Elastic.Apm.Libraries.Newtonsoft.Json.JsonReader.State.Array">
            <summary>
            Reader is in an array.
            </summary>
        </member>
        <member name="F:Elastic.Apm.Libraries.Newtonsoft.Json.JsonReader.State.Closed">
            <summary>
            The <see cref="M:Elastic.Apm.Libraries.Newtonsoft.Json.JsonReader.Close" /> method has been called.
            </summary>
        </member>
        <member name="F:Elastic.Apm.Libraries.Newtonsoft.Json.JsonReader.State.PostValue">
            <summary>
            Reader has just read a value.
            </summary>
        </member>
        <member name="F:Elastic.Apm.Libraries.Newtonsoft.Json.JsonReader.State.ConstructorStart">
            <summary>
            Reader is at the start of a constructor.
            </summary>
        </member>
        <member name="F:Elastic.Apm.Libraries.Newtonsoft.Json.JsonReader.State.Constructor">
            <summary>
            Reader is in a constructor.
            </summary>
        </member>
        <member name="F:Elastic.Apm.Libraries.Newtonsoft.Json.JsonReader.State.Error">
            <summary>
            An error occurred that prevents the read operation from continuing.
            </summary>
        </member>
        <member name="F:Elastic.Apm.Libraries.Newtonsoft.Json.JsonReader.State.Finished">
            <summary>
            The end of the file has been reached successfully.
            </summary>
        </member>
        <member name="P:Elastic.Apm.Libraries.Newtonsoft.Json.JsonReader.CurrentState">
            <summary>
            Gets the current reader state.
            </summary>
            <value>The current reader state.</value>
        </member>
        <member name="P:Elastic.Apm.Libraries.Newtonsoft.Json.JsonReader.CloseInput">
            <summary>
            Gets or sets a value indicating whether the source should be closed when this reader is closed.
            </summary>
            <value>
            <c>true</c> to close the source when this reader is closed; otherwise <c>false</c>. The default is <c>true</c>.
            </value>
        </member>
        <member name="P:Elastic.Apm.Libraries.Newtonsoft.Json.JsonReader.SupportMultipleContent">
            <summary>
            Gets or sets a value indicating whether multiple pieces of JSON content can
            be read from a continuous stream without erroring.
            </summary>
            <value>
            <c>true</c> to support reading multiple pieces of JSON content; otherwise <c>false</c>.
            The default is <c>false</c>.
            </value>
        </member>
        <member name="P:Elastic.Apm.Libraries.Newtonsoft.Json.JsonReader.QuoteChar">
            <summary>
            Gets the quotation mark character used to enclose the value of a string.
            </summary>
        </member>
        <member name="P:Elastic.Apm.Libraries.Newtonsoft.Json.JsonReader.DateTimeZoneHandling">
            <summary>
            Gets or sets how <see cref="T:System.DateTime" /> time zones are handled when reading JSON.
            </summary>
        </member>
        <member name="P:Elastic.Apm.Libraries.Newtonsoft.Json.JsonReader.DateParseHandling">
            <summary>
            Gets or sets how date formatted strings, e.g. "\/Date(1198908717056)\/" and "2012-03-21T05:40Z", are parsed when
            reading JSON.
            </summary>
        </member>
        <member name="P:Elastic.Apm.Libraries.Newtonsoft.Json.JsonReader.FloatParseHandling">
            <summary>
            Gets or sets how floating point numbers, e.g. 1.0 and 9.9, are parsed when reading JSON text.
            </summary>
        </member>
        <member name="P:Elastic.Apm.Libraries.Newtonsoft.Json.JsonReader.DateFormatString">
            <summary>
            Gets or sets how custom date formatted strings are parsed when reading JSON.
            </summary>
        </member>
        <member name="P:Elastic.Apm.Libraries.Newtonsoft.Json.JsonReader.MaxDepth">
            <summary>
            Gets or sets the maximum depth allowed when reading JSON. Reading past this depth will throw a
            <see cref="T:Elastic.Apm.Libraries.Newtonsoft.Json.JsonReaderException" />.
            A null value means there is no maximum.
            The default value is <c>128</c>.
            </summary>
        </member>
        <member name="P:Elastic.Apm.Libraries.Newtonsoft.Json.JsonReader.TokenType">
            <summary>
            Gets the type of the current JSON token.
            </summary>
        </member>
        <member name="P:Elastic.Apm.Libraries.Newtonsoft.Json.JsonReader.Value">
            <summary>
            Gets the text value of the current JSON token.
            </summary>
        </member>
        <member name="P:Elastic.Apm.Libraries.Newtonsoft.Json.JsonReader.ValueType">
            <summary>
            Gets the .NET type for the current JSON token.
            </summary>
        </member>
        <member name="P:Elastic.Apm.Libraries.Newtonsoft.Json.JsonReader.Depth">
            <summary>
            Gets the depth of the current token in the JSON document.
            </summary>
            <value>The depth of the current token in the JSON document.</value>
        </member>
        <member name="P:Elastic.Apm.Libraries.Newtonsoft.Json.JsonReader.Path">
            <summary>
            Gets the path of the current JSON token.
            </summary>
        </member>
        <member name="P:Elastic.Apm.Libraries.Newtonsoft.Json.JsonReader.Culture">
            <summary>
            Gets or sets the culture used when reading JSON. Defaults to <see cref="P:System.Globalization.CultureInfo.InvariantCulture" />.
            </summary>
        </member>
        <member name="M:Elastic.Apm.Libraries.Newtonsoft.Json.JsonReader.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Elastic.Apm.Libraries.Newtonsoft.Json.JsonReader" /> class.
            </summary>
        </member>
        <member name="M:Elastic.Apm.Libraries.Newtonsoft.Json.JsonReader.Read">
            <summary>
            Reads the next JSON token from the source.
            </summary>
            <returns><c>true</c> if the next token was read successfully; <c>false</c> if there are no more tokens to read.</returns>
        </member>
        <member name="M:Elastic.Apm.Libraries.Newtonsoft.Json.JsonReader.ReadAsInt32">
            <summary>
            Reads the next JSON token from the source as a <see cref="T:System.Nullable`1" /> of <see cref="T:System.Int32" />.
            </summary>
            <returns>
            A <see cref="T:System.Nullable`1" /> of <see cref="T:System.Int32" />. This method will return <c>null</c> at the end of an
            array.
            </returns>
        </member>
        <member name="M:Elastic.Apm.Libraries.Newtonsoft.Json.JsonReader.ReadAsString">
            <summary>
            Reads the next JSON token from the source as a <see cref="T:System.String" />.
            </summary>
            <returns>A <see cref="T:System.String" />. This method will return <c>null</c> at the end of an array.</returns>
        </member>
        <member name="M:Elastic.Apm.Libraries.Newtonsoft.Json.JsonReader.ReadAsBytes">
            <summary>
            Reads the next JSON token from the source as a <see cref="T:System.Byte" />[].
            </summary>
            <returns>
            A <see cref="T:System.Byte" />[] or <c>null</c> if the next JSON token is null. This method will return <c>null</c> at
            the end of an array.
            </returns>
        </member>
        <member name="M:Elastic.Apm.Libraries.Newtonsoft.Json.JsonReader.ReadAsDouble">
            <summary>
            Reads the next JSON token from the source as a <see cref="T:System.Nullable`1" /> of <see cref="T:System.Double" />.
            </summary>
            <returns>
            A <see cref="T:System.Nullable`1" /> of <see cref="T:System.Double" />. This method will return <c>null</c> at the end of an
            array.
            </returns>
        </member>
        <member name="M:Elastic.Apm.Libraries.Newtonsoft.Json.JsonReader.ReadAsBoolean">
            <summary>
            Reads the next JSON token from the source as a <see cref="T:System.Nullable`1" /> of <see cref="T:System.Boolean" />.
            </summary>
            <returns>
            A <see cref="T:System.Nullable`1" /> of <see cref="T:System.Boolean" />. This method will return <c>null</c> at the end of an
            array.
            </returns>
        </member>
        <member name="M:Elastic.Apm.Libraries.Newtonsoft.Json.JsonReader.ReadAsDecimal">
            <summary>
            Reads the next JSON token from the source as a <see cref="T:System.Nullable`1" /> of <see cref="T:System.Decimal" />.
            </summary>
            <returns>
            A <see cref="T:System.Nullable`1" /> of <see cref="T:System.Decimal" />. This method will return <c>null</c> at the end of an
            array.
            </returns>
        </member>
        <member name="M:Elastic.Apm.Libraries.Newtonsoft.Json.JsonReader.ReadAsDateTime">
            <summary>
            Reads the next JSON token from the source as a <see cref="T:System.Nullable`1" /> of <see cref="T:System.DateTime" />.
            </summary>
            <returns>
            A <see cref="T:System.Nullable`1" /> of <see cref="T:System.DateTime" />. This method will return <c>null</c> at the end of an
            array.
            </returns>
        </member>
        <member name="M:Elastic.Apm.Libraries.Newtonsoft.Json.JsonReader.ReadAsDateTimeOffset">
            <summary>
            Reads the next JSON token from the source as a <see cref="T:System.Nullable`1"/> of <see cref="T:System.DateTimeOffset"/>.
            </summary>
            <returns>A <see cref="T:System.Nullable`1"/> of <see cref="T:System.DateTimeOffset"/>. This method will return <c>null</c> at the end of an array.</returns>
        </member>
        <member name="M:Elastic.Apm.Libraries.Newtonsoft.Json.JsonReader.Skip">
            <summary>
            Skips the children of the current token.
            </summary>
        </member>
        <member name="M:Elastic.Apm.Libraries.Newtonsoft.Json.JsonReader.SetToken(Elastic.Apm.Libraries.Newtonsoft.Json.JsonToken)">
            <summary>
            Sets the current token.
            </summary>
            <param name="newToken">The new token.</param>
        </member>
        <member name="M:Elastic.Apm.Libraries.Newtonsoft.Json.JsonReader.SetToken(Elastic.Apm.Libraries.Newtonsoft.Json.JsonToken,System.Object)">
            <summary>
            Sets the current token and value.
            </summary>
            <param name="newToken">The new token.</param>
            <param name="value">The value.</param>
        </member>
        <member name="M:Elastic.Apm.Libraries.Newtonsoft.Json.JsonReader.SetToken(Elastic.Apm.Libraries.Newtonsoft.Json.JsonToken,System.Object,System.Boolean)">
            <summary>
            Sets the current token and value.
            </summary>
            <param name="newToken">The new token.</param>
            <param name="value">The value.</param>
            <param name="updateIndex">A flag indicating whether the position index inside an array should be updated.</param>
        </member>
        <member name="M:Elastic.Apm.Libraries.Newtonsoft.Json.JsonReader.SetStateBasedOnCurrent">
            <summary>
            Sets the state based on current token type.
            </summary>
        </member>
        <member name="M:Elastic.Apm.Libraries.Newtonsoft.Json.JsonReader.Dispose(System.Boolean)">
            <summary>
            Releases unmanaged and - optionally - managed resources.
            </summary>
            <param name="disposing">
            <c>true</c> to release both managed and unmanaged resources; <c>false</c> to release only
            unmanaged resources.
            </param>
        </member>
        <member name="M:Elastic.Apm.Libraries.Newtonsoft.Json.JsonReader.Close">
            <summary>
            Changes the reader's state to <see cref="F:Elastic.Apm.Libraries.Newtonsoft.Json.JsonReader.State.Closed" />.
            If <see cref="P:Elastic.Apm.Libraries.Newtonsoft.Json.JsonReader.CloseInput" /> is set to <c>true</c>, the source is also closed.
            </summary>
        </member>
        <member name="T:Elastic.Apm.Libraries.Newtonsoft.Json.JsonReaderException">
            <summary>
            The exception thrown when an error occurs while reading JSON text.
            </summary>
        </member>
        <member name="P:Elastic.Apm.Libraries.Newtonsoft.Json.JsonReaderException.LineNumber">
            <summary>
            Gets the line number indicating where the error occurred.
            </summary>
            <value>The line number indicating where the error occurred.</value>
        </member>
        <member name="P:Elastic.Apm.Libraries.Newtonsoft.Json.JsonReaderException.LinePosition">
            <summary>
            Gets the line position indicating where the error occurred.
            </summary>
            <value>The line position indicating where the error occurred.</value>
        </member>
        <member name="P:Elastic.Apm.Libraries.Newtonsoft.Json.JsonReaderException.Path">
            <summary>
            Gets the path to the JSON where the error occurred.
            </summary>
            <value>The path to the JSON where the error occurred.</value>
        </member>
        <member name="M:Elastic.Apm.Libraries.Newtonsoft.Json.JsonReaderException.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Elastic.Apm.Libraries.Newtonsoft.Json.JsonReaderException" /> class.
            </summary>
        </member>
        <member name="M:Elastic.Apm.Libraries.Newtonsoft.Json.JsonReaderException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Elastic.Apm.Libraries.Newtonsoft.Json.JsonReaderException" /> class
            with a specified error message.
            </summary>
            <param name="message">The error message that explains the reason for the exception.</param>
        </member>
        <member name="M:Elastic.Apm.Libraries.Newtonsoft.Json.JsonReaderException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:Elastic.Apm.Libraries.Newtonsoft.Json.JsonReaderException" /> class
            with a specified error message and a reference to the inner exception that is the cause of this exception.
            </summary>
            <param name="message">The error message that explains the reason for the exception.</param>
            <param name="innerException">
            The exception that is the cause of the current exception, or <c>null</c> if no inner
            exception is specified.
            </param>
        </member>
        <member name="M:Elastic.Apm.Libraries.Newtonsoft.Json.JsonReaderException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the <see cref="T:Elastic.Apm.Libraries.Newtonsoft.Json.JsonReaderException"/> class.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo"/> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext"/> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info"/> parameter is <c>null</c>.</exception>
            <exception cref="T:System.Runtime.Serialization.SerializationException">The class name is <c>null</c> or <see cref="P:System.Exception.HResult"/> is zero (0).</exception>
        </member>
        <member name="M:Elastic.Apm.Libraries.Newtonsoft.Json.JsonReaderException.#ctor(System.String,System.String,System.Int32,System.Int32,System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:Elastic.Apm.Libraries.Newtonsoft.Json.JsonReaderException" /> class
            with a specified error message, JSON path, line number, line position, and a reference to the inner exception that is
            the cause of this exception.
            </summary>
            <param name="message">The error message that explains the reason for the exception.</param>
            <param name="path">The path to the JSON where the error occurred.</param>
            <param name="lineNumber">The line number indicating where the error occurred.</param>
            <param name="linePosition">The line position indicating where the error occurred.</param>
            <param name="innerException">
            The exception that is the cause of the current exception, or <c>null</c> if no inner
            exception is specified.
            </param>
        </member>
        <member name="T:Elastic.Apm.Libraries.Newtonsoft.Json.JsonRequiredAttribute">
            <summary>
            Instructs the <see cref="T:Elastic.Apm.Libraries.Newtonsoft.Json.JsonSerializer" /> to always serialize the member, and to require that the member has a value.
            </summary>
        </member>
        <member name="T:Elastic.Apm.Libraries.Newtonsoft.Json.JsonSerializationException">
            <summary>
            The exception thrown when an error occurs during JSON serialization or deserialization.
            </summary>
        </member>
        <member name="P:Elastic.Apm.Libraries.Newtonsoft.Json.JsonSerializationException.LineNumber">
            <summary>
            Gets the line number indicating where the error occurred.
            </summary>
            <value>The line number indicating where the error occurred.</value>
        </member>
        <member name="P:Elastic.Apm.Libraries.Newtonsoft.Json.JsonSerializationException.LinePosition">
            <summary>
            Gets the line position indicating where the error occurred.
            </summary>
            <value>The line position indicating where the error occurred.</value>
        </member>
        <member name="P:Elastic.Apm.Libraries.Newtonsoft.Json.JsonSerializationException.Path">
            <summary>
            Gets the path to the JSON where the error occurred.
            </summary>
            <value>The path to the JSON where the error occurred.</value>
        </member>
        <member name="M:Elastic.Apm.Libraries.Newtonsoft.Json.JsonSerializationException.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Elastic.Apm.Libraries.Newtonsoft.Json.JsonSerializationException" /> class.
            </summary>
        </member>
        <member name="M:Elastic.Apm.Libraries.Newtonsoft.Json.JsonSerializationException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Elastic.Apm.Libraries.Newtonsoft.Json.JsonSerializationException" /> class
            with a specified error message.
            </summary>
            <param name="message">The error message that explains the reason for the exception.</param>
        </member>
        <member name="M:Elastic.Apm.Libraries.Newtonsoft.Json.JsonSerializationException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:Elastic.Apm.Libraries.Newtonsoft.Json.JsonSerializationException" /> class
            with a specified error message and a reference to the inner exception that is the cause of this exception.
            </summary>
            <param name="message">The error message that explains the reason for the exception.</param>
            <param name="innerException">
            The exception that is the cause of the current exception, or <c>null</c> if no inner
            exception is specified.
            </param>
        </member>
        <member name="M:Elastic.Apm.Libraries.Newtonsoft.Json.JsonSerializationException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the <see cref="T:Elastic.Apm.Libraries.Newtonsoft.Json.JsonSerializationException"/> class.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo"/> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext"/> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info"/> parameter is <c>null</c>.</exception>
            <exception cref="T:System.Runtime.Serialization.SerializationException">The class name is <c>null</c> or <see cref="P:System.Exception.HResult"/> is zero (0).</exception>
        </member>
        <member name="M:Elastic.Apm.Libraries.Newtonsoft.Json.JsonSerializationException.#ctor(System.String,System.String,System.Int32,System.Int32,System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:Elastic.Apm.Libraries.Newtonsoft.Json.JsonSerializationException" /> class
            with a specified error message, JSON path, line number, line position, and a reference to the inner exception that is
            the cause of this exception.
            </summary>
            <param name="message">The error message that explains the reason for the exception.</param>
            <param name="path">The path to the JSON where the error occurred.</param>
            <param name="lineNumber">The line number indicating where the error occurred.</param>
            <param name="linePosition">The line position indicating where the error occurred.</param>
            <param name="innerException">
            The exception that is the cause of the current exception, or <c>null</c> if no inner
            exception is specified.
            </param>
        </member>
        <member name="T:Elastic.Apm.Libraries.Newtonsoft.Json.JsonSerializer">
            <summary>
            Serializes and deserializes objects into and from the JSON format.
            The <see cref="T:Elastic.Apm.Libraries.Newtonsoft.Json.JsonSerializer" /> enables you to control how objects are encoded into JSON.
            </summary>
        </member>
        <member name="M:Elastic.Apm.Libraries.Newtonsoft.Json.JsonSerializer.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Elastic.Apm.Libraries.Newtonsoft.Json.JsonSerializer" /> class.
            </summary>
        </member>
        <member name="P:Elastic.Apm.Libraries.Newtonsoft.Json.JsonSerializer.Binder">
            <summary>
            Gets or sets the <see cref="P:Elastic.Apm.Libraries.Newtonsoft.Json.JsonSerializer.SerializationBinder" /> used by the serializer when resolving type names.
            </summary>
        </member>
        <member name="P:Elastic.Apm.Libraries.Newtonsoft.Json.JsonSerializer.CheckAdditionalContent">
            <summary>
            Gets a value indicating whether there will be a check for additional JSON content after deserializing an object.
            The default value is <c>false</c>.
            </summary>
            <value>
            	<c>true</c> if there will be a check for additional JSON content after deserializing an object; otherwise,
            <c>false</c>.
            </value>
        </member>
        <member name="P:Elastic.Apm.Libraries.Newtonsoft.Json.JsonSerializer.ConstructorHandling">
            <summary>
            Gets or sets how constructors are used during deserialization.
            The default value is <see cref="F:Elastic.Apm.Libraries.Newtonsoft.Json.ConstructorHandling.Default" />.
            </summary>
            <value>The constructor handling.</value>
        </member>
        <member name="P:Elastic.Apm.Libraries.Newtonsoft.Json.JsonSerializer.Context">
            <summary>
            Gets or sets the <see cref="T:System.Runtime.Serialization.StreamingContext" /> used by the serializer when invoking serialization callback methods.
            </summary>
            <value>The context.</value>
        </member>
        <member name="P:Elastic.Apm.Libraries.Newtonsoft.Json.JsonSerializer.ContractResolver">
            <summary>
            Gets or sets the contract resolver used by the serializer when
            serializing .NET objects to JSON and vice versa.
            </summary>
        </member>
        <member name="P:Elastic.Apm.Libraries.Newtonsoft.Json.JsonSerializer.Converters">
            <summary>
            Gets a collection <see cref="T:Elastic.Apm.Libraries.Newtonsoft.Json.JsonConverter" /> that will be used during serialization.
            </summary>
            <value>Collection <see cref="T:Elastic.Apm.Libraries.Newtonsoft.Json.JsonConverter" /> that will be used during serialization.</value>
        </member>
        <member name="P:Elastic.Apm.Libraries.Newtonsoft.Json.JsonSerializer.Culture">
            <summary>
            Gets or sets the culture used when reading JSON.
            The default value is <see cref="P:System.Globalization.CultureInfo.InvariantCulture" />.
            </summary>
        </member>
        <member name="P:Elastic.Apm.Libraries.Newtonsoft.Json.JsonSerializer.DateFormatHandling">
            <summary>
            Gets or sets how dates are written to JSON text.
            The default value is <see cref="F:Elastic.Apm.Libraries.Newtonsoft.Json.DateFormatHandling.IsoDateFormat" />.
            </summary>
        </member>
        <member name="P:Elastic.Apm.Libraries.Newtonsoft.Json.JsonSerializer.DateFormatString">
            <summary>
            Gets or sets how <see cref="T:System.DateTime" /> and <see cref="T:System.DateTimeOffset" /> values are formatted when writing JSON text,
            and the expected date format when reading JSON text.
            The default value is <c>"yyyy'-'MM'-'dd'T'HH':'mm':'ss.FFFFFFFK"</c>.
            </summary>
        </member>
        <member name="P:Elastic.Apm.Libraries.Newtonsoft.Json.JsonSerializer.DateParseHandling">
            <summary>
            Gets or sets how date formatted strings, e.g. <c>"\/Date(1198908717056)\/"</c> and <c>"2012-03-21T05:40Z"</c>, are
            parsed when reading JSON.
            The default value is <see cref="F:Elastic.Apm.Libraries.Newtonsoft.Json.DateParseHandling.DateTime" />.
            </summary>
        </member>
        <member name="P:Elastic.Apm.Libraries.Newtonsoft.Json.JsonSerializer.DateTimeZoneHandling">
            <summary>
            Gets or sets how <see cref="T:System.DateTime" /> time zones are handled during serialization and deserialization.
            The default value is <see cref="F:Elastic.Apm.Libraries.Newtonsoft.Json.DateTimeZoneHandling.RoundtripKind" />.
            </summary>
        </member>
        <member name="P:Elastic.Apm.Libraries.Newtonsoft.Json.JsonSerializer.DefaultValueHandling">
            <summary>
            Gets or sets how default values are handled during serialization and deserialization.
            The default value is <see cref="F:Elastic.Apm.Libraries.Newtonsoft.Json.DefaultValueHandling.Include" />.
            </summary>
        </member>
        <member name="P:Elastic.Apm.Libraries.Newtonsoft.Json.JsonSerializer.EqualityComparer">
            <summary>
            Gets or sets the equality comparer used by the serializer when comparing references.
            </summary>
            <value>The equality comparer.</value>
        </member>
        <member name="P:Elastic.Apm.Libraries.Newtonsoft.Json.JsonSerializer.FloatFormatHandling">
            <summary>
            Gets or sets how special floating point numbers, e.g. <see cref="F:System.Double.NaN" />,
            <see cref="F:System.Double.PositiveInfinity" /> and <see cref="F:System.Double.NegativeInfinity" />,
            are written as JSON text.
            The default value is <see cref="F:Elastic.Apm.Libraries.Newtonsoft.Json.FloatFormatHandling.String" />.
            </summary>
        </member>
        <member name="P:Elastic.Apm.Libraries.Newtonsoft.Json.JsonSerializer.FloatParseHandling">
            <summary>
            Gets or sets how floating point numbers, e.g. 1.0 and 9.9, are parsed when reading JSON text.
            The default value is <see cref="F:Elastic.Apm.Libraries.Newtonsoft.Json.FloatParseHandling.Double" />.
            </summary>
        </member>
        <member name="P:Elastic.Apm.Libraries.Newtonsoft.Json.JsonSerializer.Formatting">
            <summary>
            Indicates how JSON text output is formatted.
            The default value is <see cref="F:Elastic.Apm.Libraries.Newtonsoft.Json.Formatting.None" />.
            </summary>
        </member>
        <member name="P:Elastic.Apm.Libraries.Newtonsoft.Json.JsonSerializer.MaxDepth">
            <summary>
            Gets or sets the maximum depth allowed when reading JSON. Reading past this depth will throw a
            <see cref="T:Elastic.Apm.Libraries.Newtonsoft.Json.JsonReaderException" />.
            A null value means there is no maximum.
            The default value is <c>128</c>.
            </summary>
        </member>
        <member name="P:Elastic.Apm.Libraries.Newtonsoft.Json.JsonSerializer.MetadataPropertyHandling">
            <summary>
            Gets or sets how metadata properties are used during deserialization.
            The default value is <see cref="F:Elastic.Apm.Libraries.Newtonsoft.Json.MetadataPropertyHandling.Default" />.
            </summary>
            <value>The metadata properties handling.</value>
        </member>
        <member name="P:Elastic.Apm.Libraries.Newtonsoft.Json.JsonSerializer.MissingMemberHandling">
            <summary>
            Gets or sets how missing members (e.g. JSON contains a property that isn't a member on the object) are handled during
            deserialization.
            The default value is <see cref="F:Elastic.Apm.Libraries.Newtonsoft.Json.MissingMemberHandling.Ignore" />.
            </summary>
        </member>
        <member name="P:Elastic.Apm.Libraries.Newtonsoft.Json.JsonSerializer.NullValueHandling">
            <summary>
            Gets or sets how null values are handled during serialization and deserialization.
            The default value is <see cref="F:Elastic.Apm.Libraries.Newtonsoft.Json.NullValueHandling.Include" />.
            </summary>
        </member>
        <member name="P:Elastic.Apm.Libraries.Newtonsoft.Json.JsonSerializer.ObjectCreationHandling">
            <summary>
            Gets or sets how objects are created during deserialization.
            The default value is <see cref="F:Elastic.Apm.Libraries.Newtonsoft.Json.ObjectCreationHandling.Auto" />.
            </summary>
            <value>The object creation handling.</value>
        </member>
        <member name="P:Elastic.Apm.Libraries.Newtonsoft.Json.JsonSerializer.PreserveReferencesHandling">
            <summary>
            Gets or sets how object references are preserved by the serializer.
            The default value is <see cref="F:Elastic.Apm.Libraries.Newtonsoft.Json.PreserveReferencesHandling.None" />.
            </summary>
        </member>
        <member name="P:Elastic.Apm.Libraries.Newtonsoft.Json.JsonSerializer.ReferenceLoopHandling">
            <summary>
            Gets or sets how reference loops (e.g. a class referencing itself) is handled.
            The default value is <see cref="F:Elastic.Apm.Libraries.Newtonsoft.Json.ReferenceLoopHandling.Error" />.
            </summary>
        </member>
        <member name="P:Elastic.Apm.Libraries.Newtonsoft.Json.JsonSerializer.ReferenceResolver">
            <summary>
            Gets or sets the <see cref="T:Elastic.Apm.Libraries.Newtonsoft.Json.Serialization.IReferenceResolver" /> used by the serializer when resolving references.
            </summary>
        </member>
        <member name="P:Elastic.Apm.Libraries.Newtonsoft.Json.JsonSerializer.SerializationBinder">
            <summary>
            Gets or sets the <see cref="T:Elastic.Apm.Libraries.Newtonsoft.Json.Serialization.ISerializationBinder" /> used by the serializer when resolving type names.
            </summary>
        </member>
        <member name="P:Elastic.Apm.Libraries.Newtonsoft.Json.JsonSerializer.StringEscapeHandling">
            <summary>
            Gets or sets how strings are escaped when writing JSON text.
            The default value is <see cref="F:Elastic.Apm.Libraries.Newtonsoft.Json.StringEscapeHandling.Default" />.
            </summary>
        </member>
        <member name="P:Elastic.Apm.Libraries.Newtonsoft.Json.JsonSerializer.TraceWriter">
            <summary>
            Gets or sets the <see cref="T:Elastic.Apm.Libraries.Newtonsoft.Json.Serialization.ITraceWriter" /> used by the serializer when writing trace messages.
            </summary>
            <value>The trace writer.</value>
        </member>
        <member name="P:Elastic.Apm.Libraries.Newtonsoft.Json.JsonSerializer.TypeNameAssemblyFormat">
            <summary>
            Gets or sets how a type name assembly is written and resolved by the serializer.
            The default value is <see cref="F:System.Runtime.Serialization.Formatters.FormatterAssemblyStyle.Simple" />.
            </summary>
            <value>The type name assembly format.</value>
        </member>
        <member name="P:Elastic.Apm.Libraries.Newtonsoft.Json.JsonSerializer.TypeNameAssemblyFormatHandling">
            <summary>
            Gets or sets how a type name assembly is written and resolved by the serializer.
            The default value is <see cref="F:Elastic.Apm.Libraries.Newtonsoft.Json.TypeNameAssemblyFormatHandling.Simple" />.
            </summary>
            <value>The type name assembly format.</value>
        </member>
        <member name="P:Elastic.Apm.Libraries.Newtonsoft.Json.JsonSerializer.TypeNameHandling">
            <summary>
            Gets or sets how type name writing and reading is handled by the serializer.
            The default value is <see cref="F:Elastic.Apm.Libraries.Newtonsoft.Json.TypeNameHandling.None" />.
            </summary>
            <remarks>
            <see cref="P:Elastic.Apm.Libraries.Newtonsoft.Json.JsonSerializer.TypeNameHandling" /> should be used with caution when your application deserializes JSON from
            an external source.
            Incoming types should be validated with a custom <see cref="P:Elastic.Apm.Libraries.Newtonsoft.Json.JsonSerializer.SerializationBinder" />
            when deserializing with a value other than <see cref="F:Elastic.Apm.Libraries.Newtonsoft.Json.TypeNameHandling.None" />.
            </remarks>
        </member>
        <member name="E:Elastic.Apm.Libraries.Newtonsoft.Json.JsonSerializer.Error">
            <summary>
            Occurs when the <see cref="T:Elastic.Apm.Libraries.Newtonsoft.Json.JsonSerializer" /> errors during serialization and deserialization.
            </summary>
        </member>
        <member name="M:Elastic.Apm.Libraries.Newtonsoft.Json.JsonSerializer.Create">
            <summary>
            Creates a new <see cref="T:Elastic.Apm.Libraries.Newtonsoft.Json.JsonSerializer" /> instance.
            The <see cref="T:Elastic.Apm.Libraries.Newtonsoft.Json.JsonSerializer" /> will not use default settings
            from <see cref="P:Elastic.Apm.Libraries.Newtonsoft.Json.JsonConvert.DefaultSettings" />.
            </summary>
            <returns>
            A new <see cref="T:Elastic.Apm.Libraries.Newtonsoft.Json.JsonSerializer" /> instance.
            The <see cref="T:Elastic.Apm.Libraries.Newtonsoft.Json.JsonSerializer" /> will not use default settings
            from <see cref="P:Elastic.Apm.Libraries.Newtonsoft.Json.JsonConvert.DefaultSettings" />.
            </returns>
        </member>
        <member name="M:Elastic.Apm.Libraries.Newtonsoft.Json.JsonSerializer.Create(Elastic.Apm.Libraries.Newtonsoft.Json.JsonSerializerSettings)">
            <summary>
            Creates a new <see cref="T:Elastic.Apm.Libraries.Newtonsoft.Json.JsonSerializer" /> instance using the specified <see cref="T:Elastic.Apm.Libraries.Newtonsoft.Json.JsonSerializerSettings" />.
            The <see cref="T:Elastic.Apm.Libraries.Newtonsoft.Json.JsonSerializer" /> will not use default settings
            from <see cref="P:Elastic.Apm.Libraries.Newtonsoft.Json.JsonConvert.DefaultSettings" />.
            </summary>
            <param name="settings">The settings to be applied to the <see cref="T:Elastic.Apm.Libraries.Newtonsoft.Json.JsonSerializer" />.</param>
            <returns>
            A new <see cref="T:Elastic.Apm.Libraries.Newtonsoft.Json.JsonSerializer" /> instance using the specified <see cref="T:Elastic.Apm.Libraries.Newtonsoft.Json.JsonSerializerSettings" />.
            The <see cref="T:Elastic.Apm.Libraries.Newtonsoft.Json.JsonSerializer" /> will not use default settings
            from <see cref="P:Elastic.Apm.Libraries.Newtonsoft.Json.JsonConvert.DefaultSettings" />.
            </returns>
        </member>
        <member name="M:Elastic.Apm.Libraries.Newtonsoft.Json.JsonSerializer.CreateDefault">
            <summary>
            Creates a new <see cref="T:Elastic.Apm.Libraries.Newtonsoft.Json.JsonSerializer" /> instance.
            The <see cref="T:Elastic.Apm.Libraries.Newtonsoft.Json.JsonSerializer" /> will use default settings
            from <see cref="P:Elastic.Apm.Libraries.Newtonsoft.Json.JsonConvert.DefaultSettings" />.
            </summary>
            <returns>
            A new <see cref="T:Elastic.Apm.Libraries.Newtonsoft.Json.JsonSerializer" /> instance.
            The <see cref="T:Elastic.Apm.Libraries.Newtonsoft.Json.JsonSerializer" /> will use default settings
            from <see cref="P:Elastic.Apm.Libraries.Newtonsoft.Json.JsonConvert.DefaultSettings" />.
            </returns>
        </member>
        <member name="M:Elastic.Apm.Libraries.Newtonsoft.Json.JsonSerializer.CreateDefault(Elastic.Apm.Libraries.Newtonsoft.Json.JsonSerializerSettings)">
            <summary>
            Creates a new <see cref="T:Elastic.Apm.Libraries.Newtonsoft.Json.JsonSerializer" /> instance using the specified <see cref="T:Elastic.Apm.Libraries.Newtonsoft.Json.JsonSerializerSettings" />.
            The <see cref="T:Elastic.Apm.Libraries.Newtonsoft.Json.JsonSerializer" /> will use default settings
            from <see cref="P:Elastic.Apm.Libraries.Newtonsoft.Json.JsonConvert.DefaultSettings" /> as well as the specified <see cref="T:Elastic.Apm.Libraries.Newtonsoft.Json.JsonSerializerSettings" />.
            </summary>
            <param name="settings">The settings to be applied to the <see cref="T:Elastic.Apm.Libraries.Newtonsoft.Json.JsonSerializer" />.</param>
            <returns>
            A new <see cref="T:Elastic.Apm.Libraries.Newtonsoft.Json.JsonSerializer" /> instance using the specified <see cref="T:Elastic.Apm.Libraries.Newtonsoft.Json.JsonSerializerSettings" />.
            The <see cref="T:Elastic.Apm.Libraries.Newtonsoft.Json.JsonSerializer" /> will use default settings
            from <see cref="P:Elastic.Apm.Libraries.Newtonsoft.Json.JsonConvert.DefaultSettings" /> as well as the specified <see cref="T:Elastic.Apm.Libraries.Newtonsoft.Json.JsonSerializerSettings" />.
            </returns>
        </member>
        <member name="M:Elastic.Apm.Libraries.Newtonsoft.Json.JsonSerializer.Populate(System.IO.TextReader,System.Object)">
            <summary>
            Populates the JSON values onto the target object.
            </summary>
            <param name="reader">The <see cref="T:System.IO.TextReader" /> that contains the JSON structure to read values from.</param>
            <param name="target">The target object to populate values onto.</param>
        </member>
        <member name="M:Elastic.Apm.Libraries.Newtonsoft.Json.JsonSerializer.Populate(Elastic.Apm.Libraries.Newtonsoft.Json.JsonReader,System.Object)">
            <summary>
            Populates the JSON values onto the target object.
            </summary>
            <param name="reader">The <see cref="T:Elastic.Apm.Libraries.Newtonsoft.Json.JsonReader" /> that contains the JSON structure to read values from.</param>
            <param name="target">The target object to populate values onto.</param>
        </member>
        <member name="M:Elastic.Apm.Libraries.Newtonsoft.Json.JsonSerializer.Deserialize(Elastic.Apm.Libraries.Newtonsoft.Json.JsonReader)">
            <summary>
            Deserializes the JSON structure contained by the specified <see cref="T:Elastic.Apm.Libraries.Newtonsoft.Json.JsonReader" />.
            </summary>
            <param name="reader">The <see cref="T:Elastic.Apm.Libraries.Newtonsoft.Json.JsonReader" /> that contains the JSON structure to deserialize.</param>
            <returns>The <see cref="T:System.Object" /> being deserialized.</returns>
        </member>
        <member name="M:Elastic.Apm.Libraries.Newtonsoft.Json.JsonSerializer.Deserialize(System.IO.TextReader,System.Type)">
            <summary>
            Deserializes the JSON structure contained by the specified <see cref="T:System.IO.TextReader" />
            into an instance of the specified type.
            </summary>
            <param name="reader">The <see cref="T:System.IO.TextReader" /> containing the object.</param>
            <param name="objectType">The <see cref="T:System.Type" /> of object being deserialized.</param>
            <returns>The instance of <paramref name="objectType" /> being deserialized.</returns>
        </member>
        <member name="M:Elastic.Apm.Libraries.Newtonsoft.Json.JsonSerializer.Deserialize``1(Elastic.Apm.Libraries.Newtonsoft.Json.JsonReader)">
            <summary>
            Deserializes the JSON structure contained by the specified <see cref="T:Elastic.Apm.Libraries.Newtonsoft.Json.JsonReader" />
            into an instance of the specified type.
            </summary>
            <param name="reader">The <see cref="T:Elastic.Apm.Libraries.Newtonsoft.Json.JsonReader" /> containing the object.</param>
            <typeparam name="T">The type of the object to deserialize.</typeparam>
            <returns>The instance of <typeparamref name="T" /> being deserialized.</returns>
        </member>
        <member name="M:Elastic.Apm.Libraries.Newtonsoft.Json.JsonSerializer.Deserialize(Elastic.Apm.Libraries.Newtonsoft.Json.JsonReader,System.Type)">
            <summary>
            Deserializes the JSON structure contained by the specified <see cref="T:Elastic.Apm.Libraries.Newtonsoft.Json.JsonReader" />
            into an instance of the specified type.
            </summary>
            <param name="reader">The <see cref="T:Elastic.Apm.Libraries.Newtonsoft.Json.JsonReader" /> containing the object.</param>
            <param name="objectType">The <see cref="T:System.Type" /> of object being deserialized.</param>
            <returns>The instance of <paramref name="objectType" /> being deserialized.</returns>
        </member>
        <member name="M:Elastic.Apm.Libraries.Newtonsoft.Json.JsonSerializer.Serialize(System.IO.TextWriter,System.Object)">
            <summary>
            Serializes the specified <see cref="T:System.Object" /> and writes the JSON structure
            using the specified <see cref="T:System.IO.TextWriter" />.
            </summary>
            <param name="textWriter">The <see cref="T:System.IO.TextWriter" /> used to write the JSON structure.</param>
            <param name="value">The <see cref="T:System.Object" /> to serialize.</param>
        </member>
        <member name="M:Elastic.Apm.Libraries.Newtonsoft.Json.JsonSerializer.Serialize(Elastic.Apm.Libraries.Newtonsoft.Json.JsonWriter,System.Object,System.Type)">
            <summary>
            Serializes the specified <see cref="T:System.Object" /> and writes the JSON structure
            using the specified <see cref="T:Elastic.Apm.Libraries.Newtonsoft.Json.JsonWriter" />.
            </summary>
            <param name="jsonWriter">The <see cref="T:Elastic.Apm.Libraries.Newtonsoft.Json.JsonWriter" /> used to write the JSON structure.</param>
            <param name="value">The <see cref="T:System.Object" /> to serialize.</param>
            <param name="objectType">
            The type of the value being serialized.
            This parameter is used when <see cref="P:Elastic.Apm.Libraries.Newtonsoft.Json.JsonSerializer.TypeNameHandling" /> is <see cref="F:Elastic.Apm.Libraries.Newtonsoft.Json.TypeNameHandling.Auto" />
            to write out the type name if the type of the value does not match.
            Specifying the type is optional.
            </param>
        </member>
        <member name="M:Elastic.Apm.Libraries.Newtonsoft.Json.JsonSerializer.Serialize(System.IO.TextWriter,System.Object,System.Type)">
            <summary>
            Serializes the specified <see cref="T:System.Object" /> and writes the JSON structure
            using the specified <see cref="T:System.IO.TextWriter" />.
            </summary>
            <param name="textWriter">The <see cref="T:System.IO.TextWriter" /> used to write the JSON structure.</param>
            <param name="value">The <see cref="T:System.Object" /> to serialize.</param>
            <param name="objectType">
            The type of the value being serialized.
            This parameter is used when <see cref="P:Elastic.Apm.Libraries.Newtonsoft.Json.JsonSerializer.TypeNameHandling" /> is Auto to write out the type name if the type of the value
            does not match.
            Specifying the type is optional.
            </param>
        </member>
        <member name="M:Elastic.Apm.Libraries.Newtonsoft.Json.JsonSerializer.Serialize(Elastic.Apm.Libraries.Newtonsoft.Json.JsonWriter,System.Object)">
            <summary>
            Serializes the specified <see cref="T:System.Object" /> and writes the JSON structure
            using the specified <see cref="T:Elastic.Apm.Libraries.Newtonsoft.Json.JsonWriter" />.
            </summary>
            <param name="jsonWriter">The <see cref="T:Elastic.Apm.Libraries.Newtonsoft.Json.JsonWriter" /> used to write the JSON structure.</param>
            <param name="value">The <see cref="T:System.Object" /> to serialize.</param>
        </member>
        <member name="T:Elastic.Apm.Libraries.Newtonsoft.Json.JsonSerializerSettings">
            <summary>
            Specifies the settings on a <see cref="T:Elastic.Apm.Libraries.Newtonsoft.Json.JsonSerializer" /> object.
            </summary>
        </member>
        <member name="M:Elastic.Apm.Libraries.Newtonsoft.Json.JsonSerializerSettings.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Elastic.Apm.Libraries.Newtonsoft.Json.JsonSerializerSettings" /> class.
            </summary>
        </member>
        <member name="P:Elastic.Apm.Libraries.Newtonsoft.Json.JsonSerializerSettings.Binder">
            <summary>
            Gets or sets the <see cref="P:Elastic.Apm.Libraries.Newtonsoft.Json.JsonSerializerSettings.SerializationBinder" /> used by the serializer when resolving type names.
            </summary>
            <value>The binder.</value>
        </member>
        <member name="P:Elastic.Apm.Libraries.Newtonsoft.Json.JsonSerializerSettings.CheckAdditionalContent">
            <summary>
            Gets a value indicating whether there will be a check for additional content after deserializing an object.
            The default value is <c>false</c>.
            </summary>
            <value>
            	<c>true</c> if there will be a check for additional content after deserializing an object; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Elastic.Apm.Libraries.Newtonsoft.Json.JsonSerializerSettings.ConstructorHandling">
            <summary>
            Gets or sets how constructors are used during deserialization.
            The default value is <see cref="F:Elastic.Apm.Libraries.Newtonsoft.Json.ConstructorHandling.Default" />.
            </summary>
            <value>The constructor handling.</value>
        </member>
        <member name="P:Elastic.Apm.Libraries.Newtonsoft.Json.JsonSerializerSettings.Context">
            <summary>
            Gets or sets the <see cref="T:System.Runtime.Serialization.StreamingContext" /> used by the serializer when invoking serialization callback methods.
            </summary>
            <value>The context.</value>
        </member>
        <member name="P:Elastic.Apm.Libraries.Newtonsoft.Json.JsonSerializerSettings.ContractResolver">
            <summary>
            Gets or sets the contract resolver used by the serializer when
            serializing .NET objects to JSON and vice versa.
            </summary>
            <value>The contract resolver.</value>
        </member>
        <member name="P:Elastic.Apm.Libraries.Newtonsoft.Json.JsonSerializerSettings.Converters">
            <summary>
            Gets or sets a <see cref="T:Elastic.Apm.Libraries.Newtonsoft.Json.JsonConverter" /> collection that will be used during serialization.
            </summary>
            <value>The converters.</value>
        </member>
        <member name="P:Elastic.Apm.Libraries.Newtonsoft.Json.JsonSerializerSettings.Culture">
            <summary>
            Gets or sets the culture used when reading JSON.
            The default value is <see cref="P:System.Globalization.CultureInfo.InvariantCulture" />.
            </summary>
        </member>
        <member name="P:Elastic.Apm.Libraries.Newtonsoft.Json.JsonSerializerSettings.DateFormatHandling">
            <summary>
            Gets or sets how dates are written to JSON text.
            The default value is <see cref="F:Elastic.Apm.Libraries.Newtonsoft.Json.DateFormatHandling.IsoDateFormat" />.
            </summary>
        </member>
        <member name="P:Elastic.Apm.Libraries.Newtonsoft.Json.JsonSerializerSettings.DateFormatString">
            <summary>
            Gets or sets how <see cref="T:System.DateTime" /> and <see cref="T:System.DateTimeOffset" /> values are formatted when writing JSON text,
            and the expected date format when reading JSON text.
            The default value is <c>"yyyy'-'MM'-'dd'T'HH':'mm':'ss.FFFFFFFK"</c>.
            </summary>
        </member>
        <member name="P:Elastic.Apm.Libraries.Newtonsoft.Json.JsonSerializerSettings.DateParseHandling">
            <summary>
            Gets or sets how date formatted strings, e.g. <c>"\/Date(1198908717056)\/"</c> and <c>"2012-03-21T05:40Z"</c>, are
            parsed when reading JSON.
            The default value is <see cref="F:Elastic.Apm.Libraries.Newtonsoft.Json.DateParseHandling.DateTime" />.
            </summary>
        </member>
        <member name="P:Elastic.Apm.Libraries.Newtonsoft.Json.JsonSerializerSettings.DateTimeZoneHandling">
            <summary>
            Gets or sets how <see cref="T:System.DateTime" /> time zones are handled during serialization and deserialization.
            The default value is <see cref="F:Elastic.Apm.Libraries.Newtonsoft.Json.DateTimeZoneHandling.RoundtripKind" />.
            </summary>
        </member>
        <member name="P:Elastic.Apm.Libraries.Newtonsoft.Json.JsonSerializerSettings.DefaultValueHandling">
            <summary>
            Gets or sets how default values are handled during serialization and deserialization.
            The default value is <see cref="F:Elastic.Apm.Libraries.Newtonsoft.Json.DefaultValueHandling.Include" />.
            </summary>
            <value>The default value handling.</value>
        </member>
        <member name="P:Elastic.Apm.Libraries.Newtonsoft.Json.JsonSerializerSettings.EqualityComparer">
            <summary>
            Gets or sets the equality comparer used by the serializer when comparing references.
            </summary>
            <value>The equality comparer.</value>
        </member>
        <member name="P:Elastic.Apm.Libraries.Newtonsoft.Json.JsonSerializerSettings.Error">
            <summary>
            Gets or sets the error handler called during serialization and deserialization.
            </summary>
            <value>The error handler called during serialization and deserialization.</value>
        </member>
        <member name="P:Elastic.Apm.Libraries.Newtonsoft.Json.JsonSerializerSettings.FloatFormatHandling">
            <summary>
            Gets or sets how special floating point numbers, e.g. <see cref="F:System.Double.NaN" />,
            <see cref="F:System.Double.PositiveInfinity" /> and <see cref="F:System.Double.NegativeInfinity" />,
            are written as JSON.
            The default value is <see cref="F:Elastic.Apm.Libraries.Newtonsoft.Json.FloatFormatHandling.String" />.
            </summary>
        </member>
        <member name="P:Elastic.Apm.Libraries.Newtonsoft.Json.JsonSerializerSettings.FloatParseHandling">
            <summary>
            Gets or sets how floating point numbers, e.g. 1.0 and 9.9, are parsed when reading JSON text.
            The default value is <see cref="F:Elastic.Apm.Libraries.Newtonsoft.Json.FloatParseHandling.Double" />.
            </summary>
        </member>
        <member name="P:Elastic.Apm.Libraries.Newtonsoft.Json.JsonSerializerSettings.Formatting">
            <summary>
            Indicates how JSON text output is formatted.
            The default value is <see cref="F:Elastic.Apm.Libraries.Newtonsoft.Json.Formatting.None" />.
            </summary>
        </member>
        <member name="P:Elastic.Apm.Libraries.Newtonsoft.Json.JsonSerializerSettings.MaxDepth">
            <summary>
            Gets or sets the maximum depth allowed when reading JSON. Reading past this depth will throw a
            <see cref="T:Elastic.Apm.Libraries.Newtonsoft.Json.JsonReaderException" />.
            A null value means there is no maximum.
            The default value is <c>128</c>.
            </summary>
        </member>
        <member name="P:Elastic.Apm.Libraries.Newtonsoft.Json.JsonSerializerSettings.MetadataPropertyHandling">
            <summary>
            Gets or sets how metadata properties are used during deserialization.
            The default value is <see cref="F:Elastic.Apm.Libraries.Newtonsoft.Json.MetadataPropertyHandling.Default" />.
            </summary>
            <value>The metadata properties handling.</value>
        </member>
        <member name="P:Elastic.Apm.Libraries.Newtonsoft.Json.JsonSerializerSettings.MissingMemberHandling">
            <summary>
            Gets or sets how missing members (e.g. JSON contains a property that isn't a member on the object) are handled during
            deserialization.
            The default value is <see cref="F:Elastic.Apm.Libraries.Newtonsoft.Json.MissingMemberHandling.Ignore" />.
            </summary>
            <value>Missing member handling.</value>
        </member>
        <member name="P:Elastic.Apm.Libraries.Newtonsoft.Json.JsonSerializerSettings.NullValueHandling">
            <summary>
            Gets or sets how null values are handled during serialization and deserialization.
            The default value is <see cref="F:Elastic.Apm.Libraries.Newtonsoft.Json.NullValueHandling.Include" />.
            </summary>
            <value>Null value handling.</value>
        </member>
        <member name="P:Elastic.Apm.Libraries.Newtonsoft.Json.JsonSerializerSettings.ObjectCreationHandling">
            <summary>
            Gets or sets how objects are created during deserialization.
            The default value is <see cref="F:Elastic.Apm.Libraries.Newtonsoft.Json.ObjectCreationHandling.Auto" />.
            </summary>
            <value>The object creation handling.</value>
        </member>
        <member name="P:Elastic.Apm.Libraries.Newtonsoft.Json.JsonSerializerSettings.PreserveReferencesHandling">
            <summary>
            Gets or sets how object references are preserved by the serializer.
            The default value is <see cref="F:Elastic.Apm.Libraries.Newtonsoft.Json.PreserveReferencesHandling.None" />.
            </summary>
            <value>The preserve references handling.</value>
        </member>
        <member name="P:Elastic.Apm.Libraries.Newtonsoft.Json.JsonSerializerSettings.ReferenceLoopHandling">
            <summary>
            Gets or sets how reference loops (e.g. a class referencing itself) are handled.
            The default value is <see cref="F:Elastic.Apm.Libraries.Newtonsoft.Json.ReferenceLoopHandling.Error" />.
            </summary>
            <value>Reference loop handling.</value>
        </member>
        <member name="P:Elastic.Apm.Libraries.Newtonsoft.Json.JsonSerializerSettings.ReferenceResolver">
            <summary>
            Gets or sets the <see cref="T:Elastic.Apm.Libraries.Newtonsoft.Json.Serialization.IReferenceResolver" /> used by the serializer when resolving references.
            </summary>
            <value>The reference resolver.</value>
        </member>
        <member name="P:Elastic.Apm.Libraries.Newtonsoft.Json.JsonSerializerSettings.ReferenceResolverProvider">
            <summary>
            Gets or sets a function that creates the <see cref="T:Elastic.Apm.Libraries.Newtonsoft.Json.Serialization.IReferenceResolver" /> used by the serializer when resolving
            references.
            </summary>
            <value>A function that creates the <see cref="T:Elastic.Apm.Libraries.Newtonsoft.Json.Serialization.IReferenceResolver" /> used by the serializer when resolving references.</value>
        </member>
        <member name="P:Elastic.Apm.Libraries.Newtonsoft.Json.JsonSerializerSettings.SerializationBinder">
            <summary>
            Gets or sets the <see cref="T:Elastic.Apm.Libraries.Newtonsoft.Json.Serialization.ISerializationBinder" /> used by the serializer when resolving type names.
            </summary>
            <value>The binder.</value>
        </member>
        <member name="P:Elastic.Apm.Libraries.Newtonsoft.Json.JsonSerializerSettings.StringEscapeHandling">
            <summary>
            Gets or sets how strings are escaped when writing JSON text.
            The default value is <see cref="F:Elastic.Apm.Libraries.Newtonsoft.Json.StringEscapeHandling.Default" />.
            </summary>
        </member>
        <member name="P:Elastic.Apm.Libraries.Newtonsoft.Json.JsonSerializerSettings.TraceWriter">
            <summary>
            Gets or sets the <see cref="T:Elastic.Apm.Libraries.Newtonsoft.Json.Serialization.ITraceWriter" /> used by the serializer when writing trace messages.
            </summary>
            <value>The trace writer.</value>
        </member>
        <member name="P:Elastic.Apm.Libraries.Newtonsoft.Json.JsonSerializerSettings.TypeNameAssemblyFormat">
            <summary>
            Gets or sets how a type name assembly is written and resolved by the serializer.
            The default value is <see cref="F:System.Runtime.Serialization.Formatters.FormatterAssemblyStyle.Simple" />.
            </summary>
            <value>The type name assembly format.</value>
        </member>
        <member name="P:Elastic.Apm.Libraries.Newtonsoft.Json.JsonSerializerSettings.TypeNameAssemblyFormatHandling">
            <summary>
            Gets or sets how a type name assembly is written and resolved by the serializer.
            The default value is <see cref="F:Elastic.Apm.Libraries.Newtonsoft.Json.TypeNameAssemblyFormatHandling.Simple" />.
            </summary>
            <value>The type name assembly format.</value>
        </member>
        <member name="P:Elastic.Apm.Libraries.Newtonsoft.Json.JsonSerializerSettings.TypeNameHandling">
            <summary>
            Gets or sets how type name writing and reading is handled by the serializer.
            The default value is <see cref="F:Elastic.Apm.Libraries.Newtonsoft.Json.TypeNameHandling.None" />.
            </summary>
            <remarks>
            <see cref="P:Elastic.Apm.Libraries.Newtonsoft.Json.JsonSerializerSettings.TypeNameHandling" /> should be used with caution when your application deserializes
            JSON from an external source.
            Incoming types should be validated with a custom <see cref="P:Elastic.Apm.Libraries.Newtonsoft.Json.JsonSerializerSettings.SerializationBinder" />
            when deserializing with a value other than <see cref="F:Elastic.Apm.Libraries.Newtonsoft.Json.TypeNameHandling.None" />.
            </remarks>
            <value>The type name handling.</value>
        </member>
        <member name="T:Elastic.Apm.Libraries.Newtonsoft.Json.JsonTextReader">
            <summary>
            Represents a reader that provides fast, non-cached, forward-only access to JSON text data.
            </summary>
        </member>
        <member name="M:Elastic.Apm.Libraries.Newtonsoft.Json.JsonTextReader.ReadAsync(System.Threading.CancellationToken)">
            <summary>
            Asynchronously reads the next JSON token from the source.
            </summary>
            <param name="cancellationToken">The token to monitor for cancellation requests. The default value is <see cref="P:System.Threading.CancellationToken.None"/>.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task`1"/> that represents the asynchronous read. The <see cref="P:System.Threading.Tasks.Task`1.Result"/>
            property returns <c>true</c> if the next token was read successfully; <c>false</c> if there are no more tokens to read.</returns>
            <remarks>Derived classes must override this method to get asynchronous behaviour. Otherwise it will
            execute synchronously, returning an already-completed task.</remarks>
        </member>
        <member name="M:Elastic.Apm.Libraries.Newtonsoft.Json.JsonTextReader.ReadAsBooleanAsync(System.Threading.CancellationToken)">
            <summary>
            Asynchronously reads the next JSON token from the source as a <see cref="T:System.Nullable`1"/> of <see cref="T:System.Boolean"/>.
            </summary>
            <param name="cancellationToken">The token to monitor for cancellation requests. The default value is <see cref="P:System.Threading.CancellationToken.None"/>.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task`1"/> that represents the asynchronous read. The <see cref="P:System.Threading.Tasks.Task`1.Result"/>
            property returns the <see cref="T:System.Nullable`1"/> of <see cref="T:System.Boolean"/>. This result will be <c>null</c> at the end of an array.</returns>
            <remarks>Derived classes must override this method to get asynchronous behaviour. Otherwise it will
            execute synchronously, returning an already-completed task.</remarks>
        </member>
        <member name="M:Elastic.Apm.Libraries.Newtonsoft.Json.JsonTextReader.ReadAsBytesAsync(System.Threading.CancellationToken)">
            <summary>
            Asynchronously reads the next JSON token from the source as a <see cref="T:System.Byte"/>[].
            </summary>
            <param name="cancellationToken">The token to monitor for cancellation requests. The default value is <see cref="P:System.Threading.CancellationToken.None"/>.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task`1"/> that represents the asynchronous read. The <see cref="P:System.Threading.Tasks.Task`1.Result"/>
            property returns the <see cref="T:System.Byte"/>[]. This result will be <c>null</c> at the end of an array.</returns>
            <remarks>Derived classes must override this method to get asynchronous behaviour. Otherwise it will
            execute synchronously, returning an already-completed task.</remarks>
        </member>
        <member name="M:Elastic.Apm.Libraries.Newtonsoft.Json.JsonTextReader.ReadAsDateTimeAsync(System.Threading.CancellationToken)">
            <summary>
            Asynchronously reads the next JSON token from the source as a <see cref="T:System.Nullable`1"/> of <see cref="T:System.DateTime"/>.
            </summary>
            <param name="cancellationToken">The token to monitor for cancellation requests. The default value is <see cref="P:System.Threading.CancellationToken.None"/>.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task`1"/> that represents the asynchronous read. The <see cref="P:System.Threading.Tasks.Task`1.Result"/>
            property returns the <see cref="T:System.Nullable`1"/> of <see cref="T:System.DateTime"/>. This result will be <c>null</c> at the end of an array.</returns>
            <remarks>Derived classes must override this method to get asynchronous behaviour. Otherwise it will
            execute synchronously, returning an already-completed task.</remarks>
        </member>
        <member name="M:Elastic.Apm.Libraries.Newtonsoft.Json.JsonTextReader.ReadAsDateTimeOffsetAsync(System.Threading.CancellationToken)">
            <summary>
            Asynchronously reads the next JSON token from the source as a <see cref="T:System.Nullable`1"/> of <see cref="T:System.DateTimeOffset"/>.
            </summary>
            <param name="cancellationToken">The token to monitor for cancellation requests. The default value is <see cref="P:System.Threading.CancellationToken.None"/>.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task`1"/> that represents the asynchronous read. The <see cref="P:System.Threading.Tasks.Task`1.Result"/>
            property returns the <see cref="T:System.Nullable`1"/> of <see cref="T:System.DateTimeOffset"/>. This result will be <c>null</c> at the end of an array.</returns>
            <remarks>Derived classes must override this method to get asynchronous behaviour. Otherwise it will
            execute synchronously, returning an already-completed task.</remarks>
        </member>
        <member name="M:Elastic.Apm.Libraries.Newtonsoft.Json.JsonTextReader.ReadAsDecimalAsync(System.Threading.CancellationToken)">
            <summary>
            Asynchronously reads the next JSON token from the source as a <see cref="T:System.Nullable`1"/> of <see cref="T:System.Decimal"/>.
            </summary>
            <param name="cancellationToken">The token to monitor for cancellation requests. The default value is <see cref="P:System.Threading.CancellationToken.None"/>.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task`1"/> that represents the asynchronous read. The <see cref="P:System.Threading.Tasks.Task`1.Result"/>
            property returns the <see cref="T:System.Nullable`1"/> of <see cref="T:System.Decimal"/>. This result will be <c>null</c> at the end of an array.</returns>
            <remarks>Derived classes must override this method to get asynchronous behaviour. Otherwise it will
            execute synchronously, returning an already-completed task.</remarks>
        </member>
        <member name="M:Elastic.Apm.Libraries.Newtonsoft.Json.JsonTextReader.ReadAsDoubleAsync(System.Threading.CancellationToken)">
            <summary>
            Asynchronously reads the next JSON token from the source as a <see cref="T:System.Nullable`1"/> of <see cref="T:System.Double"/>.
            </summary>
            <param name="cancellationToken">The token to monitor for cancellation requests. The default value is <see cref="P:System.Threading.CancellationToken.None"/>.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task`1"/> that represents the asynchronous read. The <see cref="P:System.Threading.Tasks.Task`1.Result"/>
            property returns the <see cref="T:System.Nullable`1"/> of <see cref="T:System.Double"/>. This result will be <c>null</c> at the end of an array.</returns>
            <remarks>Derived classes must override this method to get asynchronous behaviour. Otherwise it will
            execute synchronously, returning an already-completed task.</remarks>
        </member>
        <member name="M:Elastic.Apm.Libraries.Newtonsoft.Json.JsonTextReader.ReadAsInt32Async(System.Threading.CancellationToken)">
            <summary>
            Asynchronously reads the next JSON token from the source as a <see cref="T:System.Nullable`1"/> of <see cref="T:System.Int32"/>.
            </summary>
            <param name="cancellationToken">The token to monitor for cancellation requests. The default value is <see cref="P:System.Threading.CancellationToken.None"/>.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task`1"/> that represents the asynchronous read. The <see cref="P:System.Threading.Tasks.Task`1.Result"/>
            property returns the <see cref="T:System.Nullable`1"/> of <see cref="T:System.Int32"/>. This result will be <c>null</c> at the end of an array.</returns>
            <remarks>Derived classes must override this method to get asynchronous behaviour. Otherwise it will
            execute synchronously, returning an already-completed task.</remarks>
        </member>
        <member name="M:Elastic.Apm.Libraries.Newtonsoft.Json.JsonTextReader.ReadAsStringAsync(System.Threading.CancellationToken)">
            <summary>
            Asynchronously reads the next JSON token from the source as a <see cref="T:System.String"/>.
            </summary>
            <param name="cancellationToken">The token to monitor for cancellation requests. The default value is <see cref="P:System.Threading.CancellationToken.None"/>.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task`1"/> that represents the asynchronous read. The <see cref="P:System.Threading.Tasks.Task`1.Result"/>
            property returns the <see cref="T:System.String"/>. This result will be <c>null</c> at the end of an array.</returns>
            <remarks>Derived classes must override this method to get asynchronous behaviour. Otherwise it will
            execute synchronously, returning an already-completed task.</remarks>
        </member>
        <member name="M:Elastic.Apm.Libraries.Newtonsoft.Json.JsonTextReader.#ctor(System.IO.TextReader)">
            <summary>
            Initializes a new instance of the <see cref="T:Elastic.Apm.Libraries.Newtonsoft.Json.JsonTextReader" /> class with the specified <see cref="T:System.IO.TextReader" />.
            </summary>
            <param name="reader">The <see cref="T:System.IO.TextReader" /> containing the JSON data to read.</param>
        </member>
        <member name="P:Elastic.Apm.Libraries.Newtonsoft.Json.JsonTextReader.PropertyNameTable">
            <summary>
            Gets or sets the reader's property name table.
            </summary>
        </member>
        <member name="P:Elastic.Apm.Libraries.Newtonsoft.Json.JsonTextReader.ArrayPool">
            <summary>
            Gets or sets the reader's character buffer pool.
            </summary>
        </member>
        <member name="M:Elastic.Apm.Libraries.Newtonsoft.Json.JsonTextReader.Read">
            <summary>
            Reads the next JSON token from the underlying <see cref="T:System.IO.TextReader" />.
            </summary>
            <returns>
            <c>true</c> if the next token was read successfully; <c>false</c> if there are no more tokens to read.
            </returns>
        </member>
        <member name="M:Elastic.Apm.Libraries.Newtonsoft.Json.JsonTextReader.ReadAsInt32">
            <summary>
            Reads the next JSON token from the underlying <see cref="T:System.IO.TextReader" /> as a <see cref="T:System.Nullable`1" /> of
            <see cref="T:System.Int32" />.
            </summary>
            <returns>
            A <see cref="T:System.Nullable`1" /> of <see cref="T:System.Int32" />. This method will return <c>null</c> at the end of an
            array.
            </returns>
        </member>
        <member name="M:Elastic.Apm.Libraries.Newtonsoft.Json.JsonTextReader.ReadAsDateTime">
            <summary>
            Reads the next JSON token from the underlying <see cref="T:System.IO.TextReader" /> as a <see cref="T:System.Nullable`1" /> of
            <see cref="T:System.DateTime" />.
            </summary>
            <returns>
            A <see cref="T:System.Nullable`1" /> of <see cref="T:System.DateTime" />. This method will return <c>null</c> at the end of an
            array.
            </returns>
        </member>
        <member name="M:Elastic.Apm.Libraries.Newtonsoft.Json.JsonTextReader.ReadAsString">
            <summary>
            Reads the next JSON token from the underlying <see cref="T:System.IO.TextReader" /> as a <see cref="T:System.String" />.
            </summary>
            <returns>A <see cref="T:System.String" />. This method will return <c>null</c> at the end of an array.</returns>
        </member>
        <member name="M:Elastic.Apm.Libraries.Newtonsoft.Json.JsonTextReader.ReadAsBytes">
            <summary>
            Reads the next JSON token from the underlying <see cref="T:System.IO.TextReader" /> as a <see cref="T:System.Byte" />[].
            </summary>
            <returns>
            A <see cref="T:System.Byte" />[] or <c>null</c> if the next JSON token is null. This method will return <c>null</c> at
            the end of an array.
            </returns>
        </member>
        <member name="M:Elastic.Apm.Libraries.Newtonsoft.Json.JsonTextReader.ReadAsBoolean">
            <summary>
            Reads the next JSON token from the underlying <see cref="T:System.IO.TextReader" /> as a <see cref="T:System.Nullable`1" /> of
            <see cref="T:System.Boolean" />.
            </summary>
            <returns>
            A <see cref="T:System.Nullable`1" /> of <see cref="T:System.Boolean" />. This method will return <c>null</c> at the end of an
            array.
            </returns>
        </member>
        <member name="M:Elastic.Apm.Libraries.Newtonsoft.Json.JsonTextReader.ReadAsDateTimeOffset">
            <summary>
            Reads the next JSON token from the underlying <see cref="T:System.IO.TextReader"/> as a <see cref="T:System.Nullable`1"/> of <see cref="T:System.DateTimeOffset"/>.
            </summary>
            <returns>A <see cref="T:System.Nullable`1"/> of <see cref="T:System.DateTimeOffset"/>. This method will return <c>null</c> at the end of an array.</returns>
        </member>
        <member name="M:Elastic.Apm.Libraries.Newtonsoft.Json.JsonTextReader.ReadAsDecimal">
            <summary>
            Reads the next JSON token from the underlying <see cref="T:System.IO.TextReader" /> as a <see cref="T:System.Nullable`1" /> of
            <see cref="T:System.Decimal" />.
            </summary>
            <returns>
            A <see cref="T:System.Nullable`1" /> of <see cref="T:System.Decimal" />. This method will return <c>null</c> at the end of an
            array.
            </returns>
        </member>
        <member name="M:Elastic.Apm.Libraries.Newtonsoft.Json.JsonTextReader.ReadAsDouble">
            <summary>
            Reads the next JSON token from the underlying <see cref="T:System.IO.TextReader" /> as a <see cref="T:System.Nullable`1" /> of
            <see cref="T:System.Double" />.
            </summary>
            <returns>
            A <see cref="T:System.Nullable`1" /> of <see cref="T:System.Double" />. This method will return <c>null</c> at the end of an
            array.
            </returns>
        </member>
        <member name="M:Elastic.Apm.Libraries.Newtonsoft.Json.JsonTextReader.Close">
            <summary>
            Changes the reader's state to <see cref="F:Elastic.Apm.Libraries.Newtonsoft.Json.JsonReader.State.Closed" />.
            If <see cref="P:Elastic.Apm.Libraries.Newtonsoft.Json.JsonReader.CloseInput" /> is set to <c>true</c>, the underlying <see cref="T:System.IO.TextReader" /> is also closed.
            </summary>
        </member>
        <member name="M:Elastic.Apm.Libraries.Newtonsoft.Json.JsonTextReader.HasLineInfo">
            <summary>
            Gets a value indicating whether the class can return line information.
            </summary>
            <returns>
            	<c>true</c> if <see cref="P:Elastic.Apm.Libraries.Newtonsoft.Json.JsonTextReader.LineNumber" /> and <see cref="P:Elastic.Apm.Libraries.Newtonsoft.Json.JsonTextReader.LinePosition" /> can be
            provided; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="P:Elastic.Apm.Libraries.Newtonsoft.Json.JsonTextReader.LineNumber">
            <summary>
            Gets the current line number.
            </summary>
            <value>
            The current line number or 0 if no line information is available (for example,
            <see cref="M:Elastic.Apm.Libraries.Newtonsoft.Json.JsonTextReader.HasLineInfo" /> returns <c>false</c>).
            </value>
        </member>
        <member name="P:Elastic.Apm.Libraries.Newtonsoft.Json.JsonTextReader.LinePosition">
            <summary>
            Gets the current line position.
            </summary>
            <value>
            The current line position or 0 if no line information is available (for example,
            <see cref="M:Elastic.Apm.Libraries.Newtonsoft.Json.JsonTextReader.HasLineInfo" /> returns <c>false</c>).
            </value>
        </member>
        <member name="T:Elastic.Apm.Libraries.Newtonsoft.Json.JsonTextWriter">
            <summary>
            Represents a writer that provides a fast, non-cached, forward-only way of generating JSON data.
            </summary>
        </member>
        <member name="M:Elastic.Apm.Libraries.Newtonsoft.Json.JsonTextWriter.FlushAsync(System.Threading.CancellationToken)">
            <summary>
            Asynchronously flushes whatever is in the buffer to the destination and also flushes the destination.
            </summary>
            <param name="cancellationToken">The token to monitor for cancellation requests. The default value is <see cref="P:System.Threading.CancellationToken.None"/>.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> that represents the asynchronous operation.</returns>
            <remarks>Derived classes must override this method to get asynchronous behaviour. Otherwise it will
            execute synchronously, returning an already-completed task.</remarks>
        </member>
        <member name="M:Elastic.Apm.Libraries.Newtonsoft.Json.JsonTextWriter.WriteValueDelimiterAsync(System.Threading.CancellationToken)">
            <summary>
            Asynchronously writes the JSON value delimiter.
            </summary>
            <param name="cancellationToken">The token to monitor for cancellation requests. The default value is <see cref="P:System.Threading.CancellationToken.None"/>.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> that represents the asynchronous operation.</returns>
            <remarks>Derived classes must override this method to get asynchronous behaviour. Otherwise it will
            execute synchronously, returning an already-completed task.</remarks>
        </member>
        <member name="M:Elastic.Apm.Libraries.Newtonsoft.Json.JsonTextWriter.WriteEndAsync(Elastic.Apm.Libraries.Newtonsoft.Json.JsonToken,System.Threading.CancellationToken)">
            <summary>
            Asynchronously writes the specified end token.
            </summary>
            <param name="token">The end token to write.</param>
            <param name="cancellationToken">The token to monitor for cancellation requests. The default value is <see cref="P:System.Threading.CancellationToken.None"/>.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> that represents the asynchronous operation.</returns>
            <remarks>Derived classes must override this method to get asynchronous behaviour. Otherwise it will
            execute synchronously, returning an already-completed task.</remarks>
        </member>
        <member name="M:Elastic.Apm.Libraries.Newtonsoft.Json.JsonTextWriter.CloseAsync(System.Threading.CancellationToken)">
            <summary>
            Asynchronously closes this writer.
            If <see cref="P:Elastic.Apm.Libraries.Newtonsoft.Json.JsonWriter.CloseOutput"/> is set to <c>true</c>, the destination is also closed.
            </summary>
            <param name="cancellationToken">The token to monitor for cancellation requests. The default value is <see cref="P:System.Threading.CancellationToken.None"/>.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> that represents the asynchronous operation.</returns>
            <remarks>Derived classes must override this method to get asynchronous behaviour. Otherwise it will
            execute synchronously, returning an already-completed task.</remarks>
        </member>
        <member name="M:Elastic.Apm.Libraries.Newtonsoft.Json.JsonTextWriter.WriteEndAsync(System.Threading.CancellationToken)">
            <summary>
            Asynchronously writes the end of the current JSON object or array.
            </summary>
            <param name="cancellationToken">The token to monitor for cancellation requests. The default value is <see cref="P:System.Threading.CancellationToken.None"/>.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> that represents the asynchronous operation.</returns>
            <remarks>Derived classes must override this method to get asynchronous behaviour. Otherwise it will
            execute synchronously, returning an already-completed task.</remarks>
        </member>
        <member name="M:Elastic.Apm.Libraries.Newtonsoft.Json.JsonTextWriter.WriteIndentAsync(System.Threading.CancellationToken)">
            <summary>
            Asynchronously writes indent characters.
            </summary>
            <param name="cancellationToken">The token to monitor for cancellation requests. The default value is <see cref="P:System.Threading.CancellationToken.None"/>.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> that represents the asynchronous operation.</returns>
            <remarks>Derived classes must override this method to get asynchronous behaviour. Otherwise it will
            execute synchronously, returning an already-completed task.</remarks>
        </member>
        <member name="M:Elastic.Apm.Libraries.Newtonsoft.Json.JsonTextWriter.WriteIndentSpaceAsync(System.Threading.CancellationToken)">
            <summary>
            Asynchronously writes an indent space.
            </summary>
            <param name="cancellationToken">The token to monitor for cancellation requests. The default value is <see cref="P:System.Threading.CancellationToken.None"/>.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> that represents the asynchronous operation.</returns>
            <remarks>Derived classes must override this method to get asynchronous behaviour. Otherwise it will
            execute synchronously, returning an already-completed task.</remarks>
        </member>
        <member name="M:Elastic.Apm.Libraries.Newtonsoft.Json.JsonTextWriter.WriteRawAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Asynchronously writes raw JSON without changing the writer's state.
            </summary>
            <param name="json">The raw JSON to write.</param>
            <param name="cancellationToken">The token to monitor for cancellation requests. The default value is <see cref="P:System.Threading.CancellationToken.None"/>.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> that represents the asynchronous operation.</returns>
            <remarks>Derived classes must override this method to get asynchronous behaviour. Otherwise it will
            execute synchronously, returning an already-completed task.</remarks>
        </member>
        <member name="M:Elastic.Apm.Libraries.Newtonsoft.Json.JsonTextWriter.WriteNullAsync(System.Threading.CancellationToken)">
            <summary>
            Asynchronously writes a null value.
            </summary>
            <param name="cancellationToken">The token to monitor for cancellation requests. The default value is <see cref="P:System.Threading.CancellationToken.None"/>.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> that represents the asynchronous operation.</returns>
            <remarks>Derived classes must override this method to get asynchronous behaviour. Otherwise it will
            execute synchronously, returning an already-completed task.</remarks>
        </member>
        <member name="M:Elastic.Apm.Libraries.Newtonsoft.Json.JsonTextWriter.WritePropertyNameAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Asynchronously writes the property name of a name/value pair of a JSON object.
            </summary>
            <param name="name">The name of the property.</param>
            <param name="cancellationToken">The token to monitor for cancellation requests. The default value is <see cref="P:System.Threading.CancellationToken.None"/>.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> that represents the asynchronous operation.</returns>
            <remarks>Derived classes must override this method to get asynchronous behaviour. Otherwise it will
            execute synchronously, returning an already-completed task.</remarks>
        </member>
        <member name="M:Elastic.Apm.Libraries.Newtonsoft.Json.JsonTextWriter.WritePropertyNameAsync(System.String,System.Boolean,System.Threading.CancellationToken)">
            <summary>
            Asynchronously writes the property name of a name/value pair of a JSON object.
            </summary>
            <param name="name">The name of the property.</param>
            <param name="escape">A flag to indicate whether the text should be escaped when it is written as a JSON property name.</param>
            <param name="cancellationToken">The token to monitor for cancellation requests. The default value is <see cref="P:System.Threading.CancellationToken.None"/>.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> that represents the asynchronous operation.</returns>
            <remarks>Derived classes must override this method to get asynchronous behaviour. Otherwise it will
            execute synchronously, returning an already-completed task.</remarks>
        </member>
        <member name="M:Elastic.Apm.Libraries.Newtonsoft.Json.JsonTextWriter.WriteStartArrayAsync(System.Threading.CancellationToken)">
            <summary>
            Asynchronously writes the beginning of a JSON array.
            </summary>
            <param name="cancellationToken">The token to monitor for cancellation requests. The default value is <see cref="P:System.Threading.CancellationToken.None"/>.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> that represents the asynchronous operation.</returns>
            <remarks>Derived classes must override this method to get asynchronous behaviour. Otherwise it will
            execute synchronously, returning an already-completed task.</remarks>
        </member>
        <member name="M:Elastic.Apm.Libraries.Newtonsoft.Json.JsonTextWriter.WriteStartObjectAsync(System.Threading.CancellationToken)">
            <summary>
            Asynchronously writes the beginning of a JSON object.
            </summary>
            <param name="cancellationToken">The token to monitor for cancellation requests. The default value is <see cref="P:System.Threading.CancellationToken.None"/>.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> that represents the asynchronous operation.</returns>
            <remarks>Derived classes must override this method to get asynchronous behaviour. Otherwise it will
            execute synchronously, returning an already-completed task.</remarks>
        </member>
        <member name="M:Elastic.Apm.Libraries.Newtonsoft.Json.JsonTextWriter.WriteStartConstructorAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Asynchronously writes the start of a constructor with the given name.
            </summary>
            <param name="name">The name of the constructor.</param>
            <param name="cancellationToken">The token to monitor for cancellation requests. The default value is <see cref="P:System.Threading.CancellationToken.None"/>.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> that represents the asynchronous operation.</returns>
            <remarks>Derived classes must override this method to get asynchronous behaviour. Otherwise it will
            execute synchronously, returning an already-completed task.</remarks>
        </member>
        <member name="M:Elastic.Apm.Libraries.Newtonsoft.Json.JsonTextWriter.WriteUndefinedAsync(System.Threading.CancellationToken)">
            <summary>
            Asynchronously writes an undefined value.
            </summary>
            <param name="cancellationToken">The token to monitor for cancellation requests. The default value is <see cref="P:System.Threading.CancellationToken.None"/>.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> that represents the asynchronous operation.</returns>
            <remarks>Derived classes must override this method to get asynchronous behaviour. Otherwise it will
            execute synchronously, returning an already-completed task.</remarks>
        </member>
        <member name="M:Elastic.Apm.Libraries.Newtonsoft.Json.JsonTextWriter.WriteWhitespaceAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Asynchronously writes the given white space.
            </summary>
            <param name="ws">The string of white space characters.</param>
            <param name="cancellationToken">The token to monitor for cancellation requests. The default value is <see cref="P:System.Threading.CancellationToken.None"/>.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> that represents the asynchronous operation.</returns>
            <remarks>Derived classes must override this method to get asynchronous behaviour. Otherwise it will
            execute synchronously, returning an already-completed task.</remarks>
        </member>
        <member name="M:Elastic.Apm.Libraries.Newtonsoft.Json.JsonTextWriter.WriteValueAsync(System.Boolean,System.Threading.CancellationToken)">
            <summary>
            Asynchronously writes a <see cref="T:System.Nullable`1"/> of <see cref="T:System.Boolean"/> value.
            </summary>
            <param name="value">The <see cref="T:System.Nullable`1"/> of <see cref="T:System.Boolean"/> value to write.</param>
            <param name="cancellationToken">The token to monitor for cancellation requests. The default value is <see cref="P:System.Threading.CancellationToken.None"/>.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> that represents the asynchronous operation.</returns>
            <remarks>Derived classes must override this method to get asynchronous behaviour. Otherwise it will
            execute synchronously, returning an already-completed task.</remarks>
        </member>
        <member name="M:Elastic.Apm.Libraries.Newtonsoft.Json.JsonTextWriter.WriteValueAsync(System.Nullable{System.Boolean},System.Threading.CancellationToken)">
            <summary>
            Asynchronously writes a <see cref="T:System.Boolean"/> value.
            </summary>
            <param name="value">The <see cref="T:System.Boolean"/> value to write.</param>
            <param name="cancellationToken">The token to monitor for cancellation requests. The default value is <see cref="P:System.Threading.CancellationToken.None"/>.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> that represents the asynchronous operation.</returns>
            <remarks>Derived classes must override this method to get asynchronous behaviour. Otherwise it will
            execute synchronously, returning an already-completed task.</remarks>
        </member>
        <member name="M:Elastic.Apm.Libraries.Newtonsoft.Json.JsonTextWriter.WriteValueAsync(System.Byte,System.Threading.CancellationToken)">
            <summary>
            Asynchronously writes a <see cref="T:System.Byte"/> value.
            </summary>
            <param name="value">The <see cref="T:System.Byte"/> value to write.</param>
            <param name="cancellationToken">The token to monitor for cancellation requests. The default value is <see cref="P:System.Threading.CancellationToken.None"/>.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> that represents the asynchronous operation.</returns>
            <remarks>Derived classes must override this method to get asynchronous behaviour. Otherwise it will
            execute synchronously, returning an already-completed task.</remarks>
        </member>
        <member name="M:Elastic.Apm.Libraries.Newtonsoft.Json.JsonTextWriter.WriteValueAsync(System.Nullable{System.Byte},System.Threading.CancellationToken)">
            <summary>
            Asynchronously writes a <see cref="T:System.Nullable`1"/> of <see cref="T:System.Byte"/> value.
            </summary>
            <param name="value">The <see cref="T:System.Nullable`1"/> of <see cref="T:System.Byte"/> value to write.</param>
            <param name="cancellationToken">The token to monitor for cancellation requests. The default value is <see cref="P:System.Threading.CancellationToken.None"/>.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> that represents the asynchronous operation.</returns>
            <remarks>Derived classes must override this method to get asynchronous behaviour. Otherwise it will
            execute synchronously, returning an already-completed task.</remarks>
        </member>
        <member name="M:Elastic.Apm.Libraries.Newtonsoft.Json.JsonTextWriter.WriteValueAsync(System.Byte[],System.Threading.CancellationToken)">
            <summary>
            Asynchronously writes a <see cref="T:System.Byte"/>[] value.
            </summary>
            <param name="value">The <see cref="T:System.Byte"/>[] value to write.</param>
            <param name="cancellationToken">The token to monitor for cancellation requests. The default value is <see cref="P:System.Threading.CancellationToken.None"/>.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> that represents the asynchronous operation.</returns>
            <remarks>Derived classes must override this method to get asynchronous behaviour. Otherwise it will
            execute synchronously, returning an already-completed task.</remarks>
        </member>
        <member name="M:Elastic.Apm.Libraries.Newtonsoft.Json.JsonTextWriter.WriteValueAsync(System.Char,System.Threading.CancellationToken)">
            <summary>
            Asynchronously writes a <see cref="T:System.Char"/> value.
            </summary>
            <param name="value">The <see cref="T:System.Char"/> value to write.</param>
            <param name="cancellationToken">The token to monitor for cancellation requests. The default value is <see cref="P:System.Threading.CancellationToken.None"/>.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> that represents the asynchronous operation.</returns>
            <remarks>Derived classes must override this method to get asynchronous behaviour. Otherwise it will
            execute synchronously, returning an already-completed task.</remarks>
        </member>
        <member name="M:Elastic.Apm.Libraries.Newtonsoft.Json.JsonTextWriter.WriteValueAsync(System.Nullable{System.Char},System.Threading.CancellationToken)">
            <summary>
            Asynchronously writes a <see cref="T:System.Nullable`1"/> of <see cref="T:System.Char"/> value.
            </summary>
            <param name="value">The <see cref="T:System.Nullable`1"/> of <see cref="T:System.Char"/> value to write.</param>
            <param name="cancellationToken">The token to monitor for cancellation requests. The default value is <see cref="P:System.Threading.CancellationToken.None"/>.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> that represents the asynchronous operation.</returns>
            <remarks>Derived classes must override this method to get asynchronous behaviour. Otherwise it will
            execute synchronously, returning an already-completed task.</remarks>
        </member>
        <member name="M:Elastic.Apm.Libraries.Newtonsoft.Json.JsonTextWriter.WriteValueAsync(System.DateTime,System.Threading.CancellationToken)">
            <summary>
            Asynchronously writes a <see cref="T:System.DateTime"/> value.
            </summary>
            <param name="value">The <see cref="T:System.DateTime"/> value to write.</param>
            <param name="cancellationToken">The token to monitor for cancellation requests. The default value is <see cref="P:System.Threading.CancellationToken.None"/>.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> that represents the asynchronous operation.</returns>
            <remarks>Derived classes must override this method to get asynchronous behaviour. Otherwise it will
            execute synchronously, returning an already-completed task.</remarks>
        </member>
        <member name="M:Elastic.Apm.Libraries.Newtonsoft.Json.JsonTextWriter.WriteValueAsync(System.Nullable{System.DateTime},System.Threading.CancellationToken)">
            <summary>
            Asynchronously writes a <see cref="T:System.Nullable`1"/> of <see cref="T:System.DateTime"/> value.
            </summary>
            <param name="value">The <see cref="T:System.Nullable`1"/> of <see cref="T:System.DateTime"/> value to write.</param>
            <param name="cancellationToken">The token to monitor for cancellation requests. The default value is <see cref="P:System.Threading.CancellationToken.None"/>.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> that represents the asynchronous operation.</returns>
            <remarks>Derived classes must override this method to get asynchronous behaviour. Otherwise it will
            execute synchronously, returning an already-completed task.</remarks>
        </member>
        <member name="M:Elastic.Apm.Libraries.Newtonsoft.Json.JsonTextWriter.WriteValueAsync(System.DateTimeOffset,System.Threading.CancellationToken)">
            <summary>
            Asynchronously writes a <see cref="T:System.DateTimeOffset"/> value.
            </summary>
            <param name="value">The <see cref="T:System.DateTimeOffset"/> value to write.</param>
            <param name="cancellationToken">The token to monitor for cancellation requests. The default value is <see cref="P:System.Threading.CancellationToken.None"/>.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> that represents the asynchronous operation.</returns>
            <remarks>Derived classes must override this method to get asynchronous behaviour. Otherwise it will
            execute synchronously, returning an already-completed task.</remarks>
        </member>
        <member name="M:Elastic.Apm.Libraries.Newtonsoft.Json.JsonTextWriter.WriteValueAsync(System.Nullable{System.DateTimeOffset},System.Threading.CancellationToken)">
            <summary>
            Asynchronously writes a <see cref="T:System.Nullable`1"/> of <see cref="T:System.DateTimeOffset"/> value.
            </summary>
            <param name="value">The <see cref="T:System.Nullable`1"/> of <see cref="T:System.DateTimeOffset"/> value to write.</param>
            <param name="cancellationToken">The token to monitor for cancellation requests. The default value is <see cref="P:System.Threading.CancellationToken.None"/>.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> that represents the asynchronous operation.</returns>
            <remarks>Derived classes must override this method to get asynchronous behaviour. Otherwise it will
            execute synchronously, returning an already-completed task.</remarks>
        </member>
        <member name="M:Elastic.Apm.Libraries.Newtonsoft.Json.JsonTextWriter.WriteValueAsync(System.Decimal,System.Threading.CancellationToken)">
            <summary>
            Asynchronously writes a <see cref="T:System.Decimal"/> value.
            </summary>
            <param name="value">The <see cref="T:System.Decimal"/> value to write.</param>
            <param name="cancellationToken">The token to monitor for cancellation requests. The default value is <see cref="P:System.Threading.CancellationToken.None"/>.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> that represents the asynchronous operation.</returns>
            <remarks>Derived classes must override this method to get asynchronous behaviour. Otherwise it will
            execute synchronously, returning an already-completed task.</remarks>
        </member>
        <member name="M:Elastic.Apm.Libraries.Newtonsoft.Json.JsonTextWriter.WriteValueAsync(System.Nullable{System.Decimal},System.Threading.CancellationToken)">
            <summary>
            Asynchronously writes a <see cref="T:System.Nullable`1"/> of <see cref="T:System.Decimal"/> value.
            </summary>
            <param name="value">The <see cref="T:System.Nullable`1"/> of <see cref="T:System.Decimal"/> value to write.</param>
            <param name="cancellationToken">The token to monitor for cancellation requests. The default value is <see cref="P:System.Threading.CancellationToken.None"/>.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> that represents the asynchronous operation.</returns>
            <remarks>Derived classes must override this method to get asynchronous behaviour. Otherwise it will
            execute synchronously, returning an already-completed task.</remarks>
        </member>
        <member name="M:Elastic.Apm.Libraries.Newtonsoft.Json.JsonTextWriter.WriteValueAsync(System.Double,System.Threading.CancellationToken)">
            <summary>
            Asynchronously writes a <see cref="T:System.Double"/> value.
            </summary>
            <param name="value">The <see cref="T:System.Double"/> value to write.</param>
            <param name="cancellationToken">The token to monitor for cancellation requests. The default value is <see cref="P:System.Threading.CancellationToken.None"/>.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> that represents the asynchronous operation.</returns>
            <remarks>Derived classes must override this method to get asynchronous behaviour. Otherwise it will
            execute synchronously, returning an already-completed task.</remarks>
        </member>
        <member name="M:Elastic.Apm.Libraries.Newtonsoft.Json.JsonTextWriter.WriteValueAsync(System.Nullable{System.Double},System.Threading.CancellationToken)">
            <summary>
            Asynchronously writes a <see cref="T:System.Nullable`1"/> of <see cref="T:System.Double"/> value.
            </summary>
            <param name="value">The <see cref="T:System.Nullable`1"/> of <see cref="T:System.Double"/> value to write.</param>
            <param name="cancellationToken">The token to monitor for cancellation requests. The default value is <see cref="P:System.Threading.CancellationToken.None"/>.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> that represents the asynchronous operation.</returns>
            <remarks>Derived classes must override this method to get asynchronous behaviour. Otherwise it will
            execute synchronously, returning an already-completed task.</remarks>
        </member>
        <member name="M:Elastic.Apm.Libraries.Newtonsoft.Json.JsonTextWriter.WriteValueAsync(System.Single,System.Threading.CancellationToken)">
            <summary>
            Asynchronously writes a <see cref="T:System.Single"/> value.
            </summary>
            <param name="value">The <see cref="T:System.Single"/> value to write.</param>
            <param name="cancellationToken">The token to monitor for cancellation requests. The default value is <see cref="P:System.Threading.CancellationToken.None"/>.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> that represents the asynchronous operation.</returns>
            <remarks>Derived classes must override this method to get asynchronous behaviour. Otherwise it will
            execute synchronously, returning an already-completed task.</remarks>
        </member>
        <member name="M:Elastic.Apm.Libraries.Newtonsoft.Json.JsonTextWriter.WriteValueAsync(System.Nullable{System.Single},System.Threading.CancellationToken)">
            <summary>
            Asynchronously writes a <see cref="T:System.Nullable`1"/> of <see cref="T:System.Single"/> value.
            </summary>
            <param name="value">The <see cref="T:System.Nullable`1"/> of <see cref="T:System.Single"/> value to write.</param>
            <param name="cancellationToken">The token to monitor for cancellation requests. The default value is <see cref="P:System.Threading.CancellationToken.None"/>.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> that represents the asynchronous operation.</returns>
            <remarks>Derived classes must override this method to get asynchronous behaviour. Otherwise it will
            execute synchronously, returning an already-completed task.</remarks>
        </member>
        <member name="M:Elastic.Apm.Libraries.Newtonsoft.Json.JsonTextWriter.WriteValueAsync(System.Guid,System.Threading.CancellationToken)">
            <summary>
            Asynchronously writes a <see cref="T:System.Guid"/> value.
            </summary>
            <param name="value">The <see cref="T:System.Guid"/> value to write.</param>
            <param name="cancellationToken">The token to monitor for cancellation requests. The default value is <see cref="P:System.Threading.CancellationToken.None"/>.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> that represents the asynchronous operation.</returns>
            <remarks>Derived classes must override this method to get asynchronous behaviour. Otherwise it will
            execute synchronously, returning an already-completed task.</remarks>
        </member>
        <member name="M:Elastic.Apm.Libraries.Newtonsoft.Json.JsonTextWriter.WriteValueAsync(System.Nullable{System.Guid},System.Threading.CancellationToken)">
            <summary>
            Asynchronously writes a <see cref="T:System.Nullable`1"/> of <see cref="T:System.Guid"/> value.
            </summary>
            <param name="value">The <see cref="T:System.Nullable`1"/> of <see cref="T:System.Guid"/> value to write.</param>
            <param name="cancellationToken">The token to monitor for cancellation requests. The default value is <see cref="P:System.Threading.CancellationToken.None"/>.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> that represents the asynchronous operation.</returns>
            <remarks>Derived classes must override this method to get asynchronous behaviour. Otherwise it will
            execute synchronously, returning an already-completed task.</remarks>
        </member>
        <member name="M:Elastic.Apm.Libraries.Newtonsoft.Json.JsonTextWriter.WriteValueAsync(System.Int32,System.Threading.CancellationToken)">
            <summary>
            Asynchronously writes a <see cref="T:System.Int32"/> value.
            </summary>
            <param name="value">The <see cref="T:System.Int32"/> value to write.</param>
            <param name="cancellationToken">The token to monitor for cancellation requests. The default value is <see cref="P:System.Threading.CancellationToken.None"/>.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> that represents the asynchronous operation.</returns>
            <remarks>Derived classes must override this method to get asynchronous behaviour. Otherwise it will
            execute synchronously, returning an already-completed task.</remarks>
        </member>
        <member name="M:Elastic.Apm.Libraries.Newtonsoft.Json.JsonTextWriter.WriteValueAsync(System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <summary>
            Asynchronously writes a <see cref="T:System.Nullable`1"/> of <see cref="T:System.Int32"/> value.
            </summary>
            <param name="value">The <see cref="T:System.Nullable`1"/> of <see cref="T:System.Int32"/> value to write.</param>
            <param name="cancellationToken">The token to monitor for cancellation requests. The default value is <see cref="P:System.Threading.CancellationToken.None"/>.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> that represents the asynchronous operation.</returns>
            <remarks>Derived classes must override this method to get asynchronous behaviour. Otherwise it will
            execute synchronously, returning an already-completed task.</remarks>
        </member>
        <member name="M:Elastic.Apm.Libraries.Newtonsoft.Json.JsonTextWriter.WriteValueAsync(System.Int64,System.Threading.CancellationToken)">
            <summary>
            Asynchronously writes a <see cref="T:System.Int64"/> value.
            </summary>
            <param name="value">The <see cref="T:System.Int64"/> value to write.</param>
            <param name="cancellationToken">The token to monitor for cancellation requests. The default value is <see cref="P:System.Threading.CancellationToken.None"/>.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> that represents the asynchronous operation.</returns>
            <remarks>Derived classes must override this method to get asynchronous behaviour. Otherwise it will
            execute synchronously, returning an already-completed task.</remarks>
        </member>
        <member name="M:Elastic.Apm.Libraries.Newtonsoft.Json.JsonTextWriter.WriteValueAsync(System.Nullable{System.Int64},System.Threading.CancellationToken)">
            <summary>
            Asynchronously writes a <see cref="T:System.Nullable`1"/> of <see cref="T:System.Int64"/> value.
            </summary>
            <param name="value">The <see cref="T:System.Nullable`1"/> of <see cref="T:System.Int64"/> value to write.</param>
            <param name="cancellationToken">The token to monitor for cancellation requests. The default value is <see cref="P:System.Threading.CancellationToken.None"/>.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> that represents the asynchronous operation.</returns>
            <remarks>Derived classes must override this method to get asynchronous behaviour. Otherwise it will
            execute synchronously, returning an already-completed task.</remarks>
        </member>
        <member name="M:Elastic.Apm.Libraries.Newtonsoft.Json.JsonTextWriter.WriteValueAsync(System.Object,System.Threading.CancellationToken)">
            <summary>
            Asynchronously writes a <see cref="T:System.Object"/> value.
            </summary>
            <param name="value">The <see cref="T:System.Object"/> value to write.</param>
            <param name="cancellationToken">The token to monitor for cancellation requests. The default value is <see cref="P:System.Threading.CancellationToken.None"/>.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> that represents the asynchronous operation.</returns>
            <remarks>Derived classes must override this method to get asynchronous behaviour. Otherwise it will
            execute synchronously, returning an already-completed task.</remarks>
        </member>
        <member name="M:Elastic.Apm.Libraries.Newtonsoft.Json.JsonTextWriter.WriteValueAsync(System.SByte,System.Threading.CancellationToken)">
            <summary>
            Asynchronously writes a <see cref="T:System.SByte"/> value.
            </summary>
            <param name="value">The <see cref="T:System.SByte"/> value to write.</param>
            <param name="cancellationToken">The token to monitor for cancellation requests. The default value is <see cref="P:System.Threading.CancellationToken.None"/>.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> that represents the asynchronous operation.</returns>
            <remarks>Derived classes must override this method to get asynchronous behaviour. Otherwise it will
            execute synchronously, returning an already-completed task.</remarks>
        </member>
        <member name="M:Elastic.Apm.Libraries.Newtonsoft.Json.JsonTextWriter.WriteValueAsync(System.Nullable{System.SByte},System.Threading.CancellationToken)">
            <summary>
            Asynchronously writes a <see cref="T:System.Nullable`1"/> of <see cref="T:System.SByte"/> value.
            </summary>
            <param name="value">The <see cref="T:System.Nullable`1"/> of <see cref="T:System.SByte"/> value to write.</param>
            <param name="cancellationToken">The token to monitor for cancellation requests. The default value is <see cref="P:System.Threading.CancellationToken.None"/>.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> that represents the asynchronous operation.</returns>
            <remarks>Derived classes must override this method to get asynchronous behaviour. Otherwise it will
            execute synchronously, returning an already-completed task.</remarks>
        </member>
        <member name="M:Elastic.Apm.Libraries.Newtonsoft.Json.JsonTextWriter.WriteValueAsync(System.Int16,System.Threading.CancellationToken)">
            <summary>
            Asynchronously writes a <see cref="T:System.Int16"/> value.
            </summary>
            <param name="value">The <see cref="T:System.Int16"/> value to write.</param>
            <param name="cancellationToken">The token to monitor for cancellation requests. The default value is <see cref="P:System.Threading.CancellationToken.None"/>.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> that represents the asynchronous operation.</returns>
            <remarks>Derived classes must override this method to get asynchronous behaviour. Otherwise it will
            execute synchronously, returning an already-completed task.</remarks>
        </member>
        <member name="M:Elastic.Apm.Libraries.Newtonsoft.Json.JsonTextWriter.WriteValueAsync(System.Nullable{System.Int16},System.Threading.CancellationToken)">
            <summary>
            Asynchronously writes a <see cref="T:System.Nullable`1"/> of <see cref="T:System.Int16"/> value.
            </summary>
            <param name="value">The <see cref="T:System.Nullable`1"/> of <see cref="T:System.Int16"/> value to write.</param>
            <param name="cancellationToken">The token to monitor for cancellation requests. The default value is <see cref="P:System.Threading.CancellationToken.None"/>.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> that represents the asynchronous operation.</returns>
            <remarks>Derived classes must override this method to get asynchronous behaviour. Otherwise it will
            execute synchronously, returning an already-completed task.</remarks>
        </member>
        <member name="M:Elastic.Apm.Libraries.Newtonsoft.Json.JsonTextWriter.WriteValueAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Asynchronously writes a <see cref="T:System.String"/> value.
            </summary>
            <param name="value">The <see cref="T:System.String"/> value to write.</param>
            <param name="cancellationToken">The token to monitor for cancellation requests. The default value is <see cref="P:System.Threading.CancellationToken.None"/>.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> that represents the asynchronous operation.</returns>
            <remarks>Derived classes must override this method to get asynchronous behaviour. Otherwise it will
            execute synchronously, returning an already-completed task.</remarks>
        </member>
        <member name="M:Elastic.Apm.Libraries.Newtonsoft.Json.JsonTextWriter.WriteValueAsync(System.TimeSpan,System.Threading.CancellationToken)">
            <summary>
            Asynchronously writes a <see cref="T:System.TimeSpan"/> value.
            </summary>
            <param name="value">The <see cref="T:System.TimeSpan"/> value to write.</param>
            <param name="cancellationToken">The token to monitor for cancellation requests. The default value is <see cref="P:System.Threading.CancellationToken.None"/>.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> that represents the asynchronous operation.</returns>
            <remarks>Derived classes must override this method to get asynchronous behaviour. Otherwise it will
            execute synchronously, returning an already-completed task.</remarks>
        </member>
        <member name="M:Elastic.Apm.Libraries.Newtonsoft.Json.JsonTextWriter.WriteValueAsync(System.Nullable{System.TimeSpan},System.Threading.CancellationToken)">
            <summary>
            Asynchronously writes a <see cref="T:System.Nullable`1"/> of <see cref="T:System.TimeSpan"/> value.
            </summary>
            <param name="value">The <see cref="T:System.Nullable`1"/> of <see cref="T:System.TimeSpan"/> value to write.</param>
            <param name="cancellationToken">The token to monitor for cancellation requests. The default value is <see cref="P:System.Threading.CancellationToken.None"/>.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> that represents the asynchronous operation.</returns>
            <remarks>Derived classes must override this method to get asynchronous behaviour. Otherwise it will
            execute synchronously, returning an already-completed task.</remarks>
        </member>
        <member name="M:Elastic.Apm.Libraries.Newtonsoft.Json.JsonTextWriter.WriteValueAsync(System.UInt32,System.Threading.CancellationToken)">
            <summary>
            Asynchronously writes a <see cref="T:System.UInt32"/> value.
            </summary>
            <param name="value">The <see cref="T:System.UInt32"/> value to write.</param>
            <param name="cancellationToken">The token to monitor for cancellation requests. The default value is <see cref="P:System.Threading.CancellationToken.None"/>.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> that represents the asynchronous operation.</returns>
            <remarks>Derived classes must override this method to get asynchronous behaviour. Otherwise it will
            execute synchronously, returning an already-completed task.</remarks>
        </member>
        <member name="M:Elastic.Apm.Libraries.Newtonsoft.Json.JsonTextWriter.WriteValueAsync(System.Nullable{System.UInt32},System.Threading.CancellationToken)">
            <summary>
            Asynchronously writes a <see cref="T:System.Nullable`1"/> of <see cref="T:System.UInt32"/> value.
            </summary>
            <param name="value">The <see cref="T:System.Nullable`1"/> of <see cref="T:System.UInt32"/> value to write.</param>
            <param name="cancellationToken">The token to monitor for cancellation requests. The default value is <see cref="P:System.Threading.CancellationToken.None"/>.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> that represents the asynchronous operation.</returns>
            <remarks>Derived classes must override this method to get asynchronous behaviour. Otherwise it will
            execute synchronously, returning an already-completed task.</remarks>
        </member>
        <member name="M:Elastic.Apm.Libraries.Newtonsoft.Json.JsonTextWriter.WriteValueAsync(System.UInt64,System.Threading.CancellationToken)">
            <summary>
            Asynchronously writes a <see cref="T:System.UInt64"/> value.
            </summary>
            <param name="value">The <see cref="T:System.UInt64"/> value to write.</param>
            <param name="cancellationToken">The token to monitor for cancellation requests. The default value is <see cref="P:System.Threading.CancellationToken.None"/>.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> that represents the asynchronous operation.</returns>
            <remarks>Derived classes must override this method to get asynchronous behaviour. Otherwise it will
            execute synchronously, returning an already-completed task.</remarks>
        </member>
        <member name="M:Elastic.Apm.Libraries.Newtonsoft.Json.JsonTextWriter.WriteValueAsync(System.Nullable{System.UInt64},System.Threading.CancellationToken)">
            <summary>
            Asynchronously writes a <see cref="T:System.Nullable`1"/> of <see cref="T:System.UInt64"/> value.
            </summary>
            <param name="value">The <see cref="T:System.Nullable`1"/> of <see cref="T:System.UInt64"/> value to write.</param>
            <param name="cancellationToken">The token to monitor for cancellation requests. The default value is <see cref="P:System.Threading.CancellationToken.None"/>.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> that represents the asynchronous operation.</returns>
            <remarks>Derived classes must override this method to get asynchronous behaviour. Otherwise it will
            execute synchronously, returning an already-completed task.</remarks>
        </member>
        <member name="M:Elastic.Apm.Libraries.Newtonsoft.Json.JsonTextWriter.WriteValueAsync(System.Uri,System.Threading.CancellationToken)">
            <summary>
            Asynchronously writes a <see cref="T:System.Uri"/> value.
            </summary>
            <param name="value">The <see cref="T:System.Uri"/> value to write.</param>
            <param name="cancellationToken">The token to monitor for cancellation requests. The default value is <see cref="P:System.Threading.CancellationToken.None"/>.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> that represents the asynchronous operation.</returns>
            <remarks>Derived classes must override this method to get asynchronous behaviour. Otherwise it will
            execute synchronously, returning an already-completed task.</remarks>
        </member>
        <member name="M:Elastic.Apm.Libraries.Newtonsoft.Json.JsonTextWriter.WriteValueAsync(System.UInt16,System.Threading.CancellationToken)">
            <summary>
            Asynchronously writes a <see cref="T:System.UInt16"/> value.
            </summary>
            <param name="value">The <see cref="T:System.UInt16"/> value to write.</param>
            <param name="cancellationToken">The token to monitor for cancellation requests. The default value is <see cref="P:System.Threading.CancellationToken.None"/>.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> that represents the asynchronous operation.</returns>
            <remarks>Derived classes must override this method to get asynchronous behaviour. Otherwise it will
            execute synchronously, returning an already-completed task.</remarks>
        </member>
        <member name="M:Elastic.Apm.Libraries.Newtonsoft.Json.JsonTextWriter.WriteValueAsync(System.Nullable{System.UInt16},System.Threading.CancellationToken)">
            <summary>
            Asynchronously writes a <see cref="T:System.Nullable`1"/> of <see cref="T:System.UInt16"/> value.
            </summary>
            <param name="value">The <see cref="T:System.Nullable`1"/> of <see cref="T:System.UInt16"/> value to write.</param>
            <param name="cancellationToken">The token to monitor for cancellation requests. The default value is <see cref="P:System.Threading.CancellationToken.None"/>.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> that represents the asynchronous operation.</returns>
            <remarks>Derived classes must override this method to get asynchronous behaviour. Otherwise it will
            execute synchronously, returning an already-completed task.</remarks>
        </member>
        <member name="M:Elastic.Apm.Libraries.Newtonsoft.Json.JsonTextWriter.WriteCommentAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Asynchronously writes a comment <c>/*...*/</c> containing the specified text.
            </summary>
            <param name="text">Text to place inside the comment.</param>
            <param name="cancellationToken">The token to monitor for cancellation requests. The default value is <see cref="P:System.Threading.CancellationToken.None"/>.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> that represents the asynchronous operation.</returns>
            <remarks>Derived classes must override this method to get asynchronous behaviour. Otherwise it will
            execute synchronously, returning an already-completed task.</remarks>
        </member>
        <member name="M:Elastic.Apm.Libraries.Newtonsoft.Json.JsonTextWriter.WriteEndArrayAsync(System.Threading.CancellationToken)">
            <summary>
            Asynchronously writes the end of an array.
            </summary>
            <param name="cancellationToken">The token to monitor for cancellation requests. The default value is <see cref="P:System.Threading.CancellationToken.None"/>.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> that represents the asynchronous operation.</returns>
            <remarks>Derived classes must override this method to get asynchronous behaviour. Otherwise it will
            execute synchronously, returning an already-completed task.</remarks>
        </member>
        <member name="M:Elastic.Apm.Libraries.Newtonsoft.Json.JsonTextWriter.WriteEndConstructorAsync(System.Threading.CancellationToken)">
            <summary>
            Asynchronously writes the end of a constructor.
            </summary>
            <param name="cancellationToken">The token to monitor for cancellation requests. The default value is <see cref="P:System.Threading.CancellationToken.None"/>.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> that represents the asynchronous operation.</returns>
            <remarks>Derived classes must override this method to get asynchronous behaviour. Otherwise it will
            execute synchronously, returning an already-completed task.</remarks>
        </member>
        <member name="M:Elastic.Apm.Libraries.Newtonsoft.Json.JsonTextWriter.WriteEndObjectAsync(System.Threading.CancellationToken)">
            <summary>
            Asynchronously writes the end of a JSON object.
            </summary>
            <param name="cancellationToken">The token to monitor for cancellation requests. The default value is <see cref="P:System.Threading.CancellationToken.None"/>.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> that represents the asynchronous operation.</returns>
            <remarks>Derived classes must override this method to get asynchronous behaviour. Otherwise it will
            execute synchronously, returning an already-completed task.</remarks>
        </member>
        <member name="M:Elastic.Apm.Libraries.Newtonsoft.Json.JsonTextWriter.WriteRawValueAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Asynchronously writes raw JSON where a value is expected and updates the writer's state.
            </summary>
            <param name="json">The raw JSON to write.</param>
            <param name="cancellationToken">The token to monitor for cancellation requests. The default value is <see cref="P:System.Threading.CancellationToken.None"/>.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> that represents the asynchronous operation.</returns>
            <remarks>Derived classes must override this method to get asynchronous behaviour. Otherwise it will
            execute synchronously, returning an already-completed task.</remarks>
        </member>
        <member name="P:Elastic.Apm.Libraries.Newtonsoft.Json.JsonTextWriter.ArrayPool">
            <summary>
            Gets or sets the writer's character array pool.
            </summary>
        </member>
        <member name="P:Elastic.Apm.Libraries.Newtonsoft.Json.JsonTextWriter.Indentation">
            <summary>
            Gets or sets how many <see cref="P:Elastic.Apm.Libraries.Newtonsoft.Json.JsonTextWriter.IndentChar" />s to write for each level in the hierarchy when
            <see cref="P:Elastic.Apm.Libraries.Newtonsoft.Json.JsonWriter.Formatting" /> is set to <see cref="F:Elastic.Apm.Libraries.Newtonsoft.Json.Formatting.Indented" />.
            </summary>
        </member>
        <member name="P:Elastic.Apm.Libraries.Newtonsoft.Json.JsonTextWriter.QuoteChar">
            <summary>
            Gets or sets which character to use to quote attribute values.
            </summary>
        </member>
        <member name="P:Elastic.Apm.Libraries.Newtonsoft.Json.JsonTextWriter.IndentChar">
            <summary>
            Gets or sets which character to use for indenting when <see cref="P:Elastic.Apm.Libraries.Newtonsoft.Json.JsonWriter.Formatting" /> is set to
            <see cref="F:Elastic.Apm.Libraries.Newtonsoft.Json.Formatting.Indented" />.
            </summary>
        </member>
        <member name="P:Elastic.Apm.Libraries.Newtonsoft.Json.JsonTextWriter.QuoteName">
            <summary>
            Gets or sets a value indicating whether object names will be surrounded with quotes.
            </summary>
        </member>
        <member name="M:Elastic.Apm.Libraries.Newtonsoft.Json.JsonTextWriter.#ctor(System.IO.TextWriter)">
            <summary>
            Initializes a new instance of the <see cref="T:Elastic.Apm.Libraries.Newtonsoft.Json.JsonTextWriter" /> class using the specified <see cref="T:System.IO.TextWriter" />.
            </summary>
            <param name="textWriter">The <see cref="T:System.IO.TextWriter" /> to write to.</param>
        </member>
        <member name="M:Elastic.Apm.Libraries.Newtonsoft.Json.JsonTextWriter.Flush">
            <summary>
            Flushes whatever is in the buffer to the underlying <see cref="T:System.IO.TextWriter" /> and also flushes the underlying
            <see cref="T:System.IO.TextWriter" />.
            </summary>
        </member>
        <member name="M:Elastic.Apm.Libraries.Newtonsoft.Json.JsonTextWriter.Close">
            <summary>
            Closes this writer.
            If <see cref="P:Elastic.Apm.Libraries.Newtonsoft.Json.JsonWriter.CloseOutput" /> is set to <c>true</c>, the underlying <see cref="T:System.IO.TextWriter" /> is also
            closed.
            If <see cref="P:Elastic.Apm.Libraries.Newtonsoft.Json.JsonWriter.AutoCompleteOnClose" /> is set to <c>true</c>, the JSON is auto-completed.
            </summary>
        </member>
        <member name="M:Elastic.Apm.Libraries.Newtonsoft.Json.JsonTextWriter.WriteStartObject">
            <summary>
            Writes the beginning of a JSON object.
            </summary>
        </member>
        <member name="M:Elastic.Apm.Libraries.Newtonsoft.Json.JsonTextWriter.WriteStartArray">
            <summary>
            Writes the beginning of a JSON array.
            </summary>
        </member>
        <member name="M:Elastic.Apm.Libraries.Newtonsoft.Json.JsonTextWriter.WriteStartConstructor(System.String)">
            <summary>
            Writes the start of a constructor with the given name.
            </summary>
            <param name="name">The name of the constructor.</param>
        </member>
        <member name="M:Elastic.Apm.Libraries.Newtonsoft.Json.JsonTextWriter.WriteEnd(Elastic.Apm.Libraries.Newtonsoft.Json.JsonToken)">
            <summary>
            Writes the specified end token.
            </summary>
            <param name="token">The end token to write.</param>
        </member>
        <member name="M:Elastic.Apm.Libraries.Newtonsoft.Json.JsonTextWriter.WritePropertyName(System.String)">
            <summary>
            Writes the property name of a name/value pair on a JSON object.
            </summary>
            <param name="name">The name of the property.</param>
        </member>
        <member name="M:Elastic.Apm.Libraries.Newtonsoft.Json.JsonTextWriter.WritePropertyName(System.String,System.Boolean)">
            <summary>
            Writes the property name of a name/value pair on a JSON object.
            </summary>
            <param name="name">The name of the property.</param>
            <param name="escape">A flag to indicate whether the text should be escaped when it is written as a JSON property name.</param>
        </member>
        <member name="M:Elastic.Apm.Libraries.Newtonsoft.Json.JsonTextWriter.WriteIndent">
            <summary>
            Writes indent characters.
            </summary>
        </member>
        <member name="M:Elastic.Apm.Libraries.Newtonsoft.Json.JsonTextWriter.WriteValueDelimiter">
            <summary>
            Writes the JSON value delimiter.
            </summary>
        </member>
        <member name="M:Elastic.Apm.Libraries.Newtonsoft.Json.JsonTextWriter.WriteIndentSpace">
            <summary>
            Writes an indent space.
            </summary>
        </member>
        <member name="M:Elastic.Apm.Libraries.Newtonsoft.Json.JsonTextWriter.WriteValue(System.Object)">
            <summary>
            Writes a <see cref="T:System.Object" /> value.
            An error will raised if the value cannot be written as a single JSON token.
            </summary>
            <param name="value">The <see cref="T:System.Object" /> value to write.</param>
        </member>
        <member name="M:Elastic.Apm.Libraries.Newtonsoft.Json.JsonTextWriter.WriteNull">
            <summary>
            Writes a null value.
            </summary>
        </member>
        <member name="M:Elastic.Apm.Libraries.Newtonsoft.Json.JsonTextWriter.WriteUndefined">
            <summary>
            Writes an undefined value.
            </summary>
        </member>
        <member name="M:Elastic.Apm.Libraries.Newtonsoft.Json.JsonTextWriter.WriteRaw(System.String)">
            <summary>
            Writes raw JSON.
            </summary>
            <param name="json">The raw JSON to write.</param>
        </member>
        <member name="M:Elastic.Apm.Libraries.Newtonsoft.Json.JsonTextWriter.WriteValue(System.String)">
            <summary>
            Writes a <see cref="T:System.String" /> value.
            </summary>
            <param name="value">The <see cref="T:System.String" /> value to write.</param>
        </member>
        <member name="M:Elastic.Apm.Libraries.Newtonsoft.Json.JsonTextWriter.WriteValue(System.Int32)">
            <summary>
            Writes a <see cref="T:System.Int32" /> value.
            </summary>
            <param name="value">The <see cref="T:System.Int32" /> value to write.</param>
        </member>
        <member name="M:Elastic.Apm.Libraries.Newtonsoft.Json.JsonTextWriter.WriteValue(System.UInt32)">
            <summary>
            Writes a <see cref="T:System.UInt32" /> value.
            </summary>
            <param name="value">The <see cref="T:System.UInt32" /> value to write.</param>
        </member>
        <member name="M:Elastic.Apm.Libraries.Newtonsoft.Json.JsonTextWriter.WriteValue(System.Int64)">
            <summary>
            Writes a <see cref="T:System.Int64" /> value.
            </summary>
            <param name="value">The <see cref="T:System.Int64" /> value to write.</param>
        </member>
        <member name="M:Elastic.Apm.Libraries.Newtonsoft.Json.JsonTextWriter.WriteValue(System.UInt64)">
            <summary>
            Writes a <see cref="T:System.UInt64" /> value.
            </summary>
            <param name="value">The <see cref="T:System.UInt64" /> value to write.</param>
        </member>
        <member name="M:Elastic.Apm.Libraries.Newtonsoft.Json.JsonTextWriter.WriteValue(System.Single)">
            <summary>
            Writes a <see cref="T:System.Single" /> value.
            </summary>
            <param name="value">The <see cref="T:System.Single" /> value to write.</param>
        </member>
        <member name="M:Elastic.Apm.Libraries.Newtonsoft.Json.JsonTextWriter.WriteValue(System.Nullable{System.Single})">
            <summary>
            Writes a <see cref="T:System.Nullable`1" /> of <see cref="T:System.Single" /> value.
            </summary>
            <param name="value">The <see cref="T:System.Nullable`1" /> of <see cref="T:System.Single" /> value to write.</param>
        </member>
        <member name="M:Elastic.Apm.Libraries.Newtonsoft.Json.JsonTextWriter.WriteValue(System.Double)">
            <summary>
            Writes a <see cref="T:System.Double" /> value.
            </summary>
            <param name="value">The <see cref="T:System.Double" /> value to write.</param>
        </member>
        <member name="M:Elastic.Apm.Libraries.Newtonsoft.Json.JsonTextWriter.WriteValue(System.Nullable{System.Double})">
            <summary>
            Writes a <see cref="T:System.Nullable`1" /> of <see cref="T:System.Double" /> value.
            </summary>
            <param name="value">The <see cref="T:System.Nullable`1" /> of <see cref="T:System.Double" /> value to write.</param>
        </member>
        <member name="M:Elastic.Apm.Libraries.Newtonsoft.Json.JsonTextWriter.WriteValue(System.Boolean)">
            <summary>
            Writes a <see cref="T:System.Boolean" /> value.
            </summary>
            <param name="value">The <see cref="T:System.Boolean" /> value to write.</param>
        </member>
        <member name="M:Elastic.Apm.Libraries.Newtonsoft.Json.JsonTextWriter.WriteValue(System.Int16)">
            <summary>
            Writes a <see cref="T:System.Int16" /> value.
            </summary>
            <param name="value">The <see cref="T:System.Int16" /> value to write.</param>
        </member>
        <member name="M:Elastic.Apm.Libraries.Newtonsoft.Json.JsonTextWriter.WriteValue(System.UInt16)">
            <summary>
            Writes a <see cref="T:System.UInt16" /> value.
            </summary>
            <param name="value">The <see cref="T:System.UInt16" /> value to write.</param>
        </member>
        <member name="M:Elastic.Apm.Libraries.Newtonsoft.Json.JsonTextWriter.WriteValue(System.Char)">
            <summary>
            Writes a <see cref="T:System.Char" /> value.
            </summary>
            <param name="value">The <see cref="T:System.Char" /> value to write.</param>
        </member>
        <member name="M:Elastic.Apm.Libraries.Newtonsoft.Json.JsonTextWriter.WriteValue(System.Byte)">
            <summary>
            Writes a <see cref="T:System.Byte" /> value.
            </summary>
            <param name="value">The <see cref="T:System.Byte" /> value to write.</param>
        </member>
        <member name="M:Elastic.Apm.Libraries.Newtonsoft.Json.JsonTextWriter.WriteValue(System.SByte)">
            <summary>
            Writes a <see cref="T:System.SByte" /> value.
            </summary>
            <param name="value">The <see cref="T:System.SByte" /> value to write.</param>
        </member>
        <member name="M:Elastic.Apm.Libraries.Newtonsoft.Json.JsonTextWriter.WriteValue(System.Decimal)">
            <summary>
            Writes a <see cref="T:System.Decimal" /> value.
            </summary>
            <param name="value">The <see cref="T:System.Decimal" /> value to write.</param>
        </member>
        <member name="M:Elastic.Apm.Libraries.Newtonsoft.Json.JsonTextWriter.WriteValue(System.DateTime)">
            <summary>
            Writes a <see cref="T:System.DateTime" /> value.
            </summary>
            <param name="value">The <see cref="T:System.DateTime" /> value to write.</param>
        </member>
        <member name="M:Elastic.Apm.Libraries.Newtonsoft.Json.JsonTextWriter.WriteValue(System.Byte[])">
            <summary>
            Writes a <see cref="T:System.Byte" />[] value.
            </summary>
            <param name="value">The <see cref="T:System.Byte" />[] value to write.</param>
        </member>
        <member name="M:Elastic.Apm.Libraries.Newtonsoft.Json.JsonTextWriter.WriteValue(System.DateTimeOffset)">
            <summary>
            Writes a <see cref="T:System.DateTimeOffset"/> value.
            </summary>
            <param name="value">The <see cref="T:System.DateTimeOffset"/> value to write.</param>
        </member>
        <member name="M:Elastic.Apm.Libraries.Newtonsoft.Json.JsonTextWriter.WriteValue(System.Guid)">
            <summary>
            Writes a <see cref="T:System.Guid" /> value.
            </summary>
            <param name="value">The <see cref="T:System.Guid" /> value to write.</param>
        </member>
        <member name="M:Elastic.Apm.Libraries.Newtonsoft.Json.JsonTextWriter.WriteValue(System.TimeSpan)">
            <summary>
            Writes a <see cref="T:System.TimeSpan" /> value.
            </summary>
            <param name="value">The <see cref="T:System.TimeSpan" /> value to write.</param>
        </member>
        <member name="M:Elastic.Apm.Libraries.Newtonsoft.Json.JsonTextWriter.WriteValue(System.Uri)">
            <summary>
            Writes a <see cref="T:System.Uri" /> value.
            </summary>
            <param name="value">The <see cref="T:System.Uri" /> value to write.</param>
        </member>
        <member name="M:Elastic.Apm.Libraries.Newtonsoft.Json.JsonTextWriter.WriteComment(System.String)">
            <summary>
            Writes a comment <c>/*...*/</c> containing the specified text.
            </summary>
            <param name="text">Text to place inside the comment.</param>
        </member>
        <member name="M:Elastic.Apm.Libraries.Newtonsoft.Json.JsonTextWriter.WriteWhitespace(System.String)">
            <summary>
            Writes the given white space.
            </summary>
            <param name="ws">The string of white space characters.</param>
        </member>
        <member name="T:Elastic.Apm.Libraries.Newtonsoft.Json.JsonToken">
            <summary>
            Specifies the type of JSON token.
            </summary>
        </member>
        <member name="F:Elastic.Apm.Libraries.Newtonsoft.Json.JsonToken.None">
            <summary>
            This is returned by the <see cref="T:Elastic.Apm.Libraries.Newtonsoft.Json.JsonReader" /> if a read method has not been called.
            </summary>
        </member>
        <member name="F:Elastic.Apm.Libraries.Newtonsoft.Json.JsonToken.StartObject">
            <summary>
            An object start token.
            </summary>
        </member>
        <member name="F:Elastic.Apm.Libraries.Newtonsoft.Json.JsonToken.StartArray">
            <summary>
            An array start token.
            </summary>
        </member>
        <member name="F:Elastic.Apm.Libraries.Newtonsoft.Json.JsonToken.StartConstructor">
            <summary>
            A constructor start token.
            </summary>
        </member>
        <member name="F:Elastic.Apm.Libraries.Newtonsoft.Json.JsonToken.PropertyName">
            <summary>
            An object property name.
            </summary>
        </member>
        <member name="F:Elastic.Apm.Libraries.Newtonsoft.Json.JsonToken.Comment">
            <summary>
            A comment.
            </summary>
        </member>
        <member name="F:Elastic.Apm.Libraries.Newtonsoft.Json.JsonToken.Raw">
            <summary>
            Raw JSON.
            </summary>
        </member>
        <member name="F:Elastic.Apm.Libraries.Newtonsoft.Json.JsonToken.Integer">
            <summary>
            An integer.
            </summary>
        </member>
        <member name="F:Elastic.Apm.Libraries.Newtonsoft.Json.JsonToken.Float">
            <summary>
            A float.
            </summary>
        </member>
        <member name="F:Elastic.Apm.Libraries.Newtonsoft.Json.JsonToken.String">
            <summary>
            A string.
            </summary>
        </member>
        <member name="F:Elastic.Apm.Libraries.Newtonsoft.Json.JsonToken.Boolean">
            <summary>
            A boolean.
            </summary>
        </member>
        <member name="F:Elastic.Apm.Libraries.Newtonsoft.Json.JsonToken.Null">
            <summary>
            A null token.
            </summary>
        </member>
        <member name="F:Elastic.Apm.Libraries.Newtonsoft.Json.JsonToken.Undefined">
            <summary>
            An undefined token.
            </summary>
        </member>
        <member name="F:Elastic.Apm.Libraries.Newtonsoft.Json.JsonToken.EndObject">
            <summary>
            An object end token.
            </summary>
        </member>
        <member name="F:Elastic.Apm.Libraries.Newtonsoft.Json.JsonToken.EndArray">
            <summary>
            An array end token.
            </summary>
        </member>
        <member name="F:Elastic.Apm.Libraries.Newtonsoft.Json.JsonToken.EndConstructor">
            <summary>
            A constructor end token.
            </summary>
        </member>
        <member name="F:Elastic.Apm.Libraries.Newtonsoft.Json.JsonToken.Date">
            <summary>
            A Date.
            </summary>
        </member>
        <member name="F:Elastic.Apm.Libraries.Newtonsoft.Json.JsonToken.Bytes">
            <summary>
            Byte data.
            </summary>
        </member>
        <member name="T:Elastic.Apm.Libraries.Newtonsoft.Json.JsonValidatingReader">
            <summary>
            <para>
            Represents a reader that provides <see cref="T:Elastic.Apm.Libraries.Newtonsoft.Json.Schema.JsonSchema" /> validation.
            </para>
            <note type="caution">
            JSON Schema validation has been moved to its own package. See
            <see href="https://www.newtonsoft.com/jsonschema">https://www.newtonsoft.com/jsonschema</see> for more details.
            </note>
            </summary>
        </member>
        <member name="E:Elastic.Apm.Libraries.Newtonsoft.Json.JsonValidatingReader.ValidationEventHandler">
            <summary>
            Sets an event handler for receiving schema validation errors.
            </summary>
        </member>
        <member name="P:Elastic.Apm.Libraries.Newtonsoft.Json.JsonValidatingReader.Value">
            <summary>
            Gets the text value of the current JSON token.
            </summary>
            <value></value>
        </member>
        <member name="P:Elastic.Apm.Libraries.Newtonsoft.Json.JsonValidatingReader.Depth">
            <summary>
            Gets the depth of the current token in the JSON document.
            </summary>
            <value>The depth of the current token in the JSON document.</value>
        </member>
        <member name="P:Elastic.Apm.Libraries.Newtonsoft.Json.JsonValidatingReader.Path">
            <summary>
            Gets the path of the current JSON token.
            </summary>
        </member>
        <member name="P:Elastic.Apm.Libraries.Newtonsoft.Json.JsonValidatingReader.QuoteChar">
            <summary>
            Gets the quotation mark character used to enclose the value of a string.
            </summary>
            <value></value>
        </member>
        <member name="P:Elastic.Apm.Libraries.Newtonsoft.Json.JsonValidatingReader.TokenType">
            <summary>
            Gets the type of the current JSON token.
            </summary>
            <value></value>
        </member>
        <member name="P:Elastic.Apm.Libraries.Newtonsoft.Json.JsonValidatingReader.ValueType">
            <summary>
            Gets the .NET type for the current JSON token.
            </summary>
            <value></value>
        </member>
        <member name="M:Elastic.Apm.Libraries.Newtonsoft.Json.JsonValidatingReader.#ctor(Elastic.Apm.Libraries.Newtonsoft.Json.JsonReader)">
            <summary>
            Initializes a new instance of the <see cref="T:Elastic.Apm.Libraries.Newtonsoft.Json.JsonValidatingReader" /> class that
            validates the content returned from the given <see cref="T:Elastic.Apm.Libraries.Newtonsoft.Json.JsonReader" />.
            </summary>
            <param name="reader">The <see cref="T:Elastic.Apm.Libraries.Newtonsoft.Json.JsonReader" /> to read from while validating.</param>
        </member>
        <member name="P:Elastic.Apm.Libraries.Newtonsoft.Json.JsonValidatingReader.Schema">
            <summary>
            Gets or sets the schema.
            </summary>
            <value>The schema.</value>
        </member>
        <member name="P:Elastic.Apm.Libraries.Newtonsoft.Json.JsonValidatingReader.Reader">
            <summary>
            Gets the <see cref="T:Elastic.Apm.Libraries.Newtonsoft.Json.JsonReader" /> used to construct this <see cref="T:Elastic.Apm.Libraries.Newtonsoft.Json.JsonValidatingReader" />.
            </summary>
            <value>The <see cref="T:Elastic.Apm.Libraries.Newtonsoft.Json.JsonReader" /> specified in the constructor.</value>
        </member>
        <member name="M:Elastic.Apm.Libraries.Newtonsoft.Json.JsonValidatingReader.Close">
            <summary>
            Changes the reader's state to <see cref="F:Elastic.Apm.Libraries.Newtonsoft.Json.JsonReader.State.Closed" />.
            If <see cref="P:Elastic.Apm.Libraries.Newtonsoft.Json.JsonReader.CloseInput" /> is set to <c>true</c>, the underlying <see cref="T:Elastic.Apm.Libraries.Newtonsoft.Json.JsonReader" /> is also closed.
            </summary>
        </member>
        <member name="M:Elastic.Apm.Libraries.Newtonsoft.Json.JsonValidatingReader.ReadAsInt32">
            <summary>
            Reads the next JSON token from the underlying <see cref="T:Elastic.Apm.Libraries.Newtonsoft.Json.JsonReader" /> as a <see cref="T:System.Nullable`1" /> of
            <see cref="T:System.Int32" />.
            </summary>
            <returns>A <see cref="T:System.Nullable`1" /> of <see cref="T:System.Int32" />.</returns>
        </member>
        <member name="M:Elastic.Apm.Libraries.Newtonsoft.Json.JsonValidatingReader.ReadAsBytes">
            <summary>
            Reads the next JSON token from the underlying <see cref="T:Elastic.Apm.Libraries.Newtonsoft.Json.JsonReader" /> as a <see cref="T:System.Byte" />[].
            </summary>
            <returns>
            A <see cref="T:System.Byte" />[] or <c>null</c> if the next JSON token is null.
            </returns>
        </member>
        <member name="M:Elastic.Apm.Libraries.Newtonsoft.Json.JsonValidatingReader.ReadAsDecimal">
            <summary>
            Reads the next JSON token from the underlying <see cref="T:Elastic.Apm.Libraries.Newtonsoft.Json.JsonReader" /> as a <see cref="T:System.Nullable`1" /> of
            <see cref="T:System.Decimal" />.
            </summary>
            <returns>A <see cref="T:System.Nullable`1" /> of <see cref="T:System.Decimal" />.</returns>
        </member>
        <member name="M:Elastic.Apm.Libraries.Newtonsoft.Json.JsonValidatingReader.ReadAsDouble">
            <summary>
            Reads the next JSON token from the underlying <see cref="T:Elastic.Apm.Libraries.Newtonsoft.Json.JsonReader" /> as a <see cref="T:System.Nullable`1" /> of
            <see cref="T:System.Double" />.
            </summary>
            <returns>A <see cref="T:System.Nullable`1" /> of <see cref="T:System.Double" />.</returns>
        </member>
        <member name="M:Elastic.Apm.Libraries.Newtonsoft.Json.JsonValidatingReader.ReadAsBoolean">
            <summary>
            Reads the next JSON token from the underlying <see cref="T:Elastic.Apm.Libraries.Newtonsoft.Json.JsonReader" /> as a <see cref="T:System.Nullable`1" /> of
            <see cref="T:System.Boolean" />.
            </summary>
            <returns>A <see cref="T:System.Nullable`1" /> of <see cref="T:System.Boolean" />.</returns>
        </member>
        <member name="M:Elastic.Apm.Libraries.Newtonsoft.Json.JsonValidatingReader.ReadAsString">
            <summary>
            Reads the next JSON token from the underlying <see cref="T:Elastic.Apm.Libraries.Newtonsoft.Json.JsonReader" /> as a <see cref="T:System.String" />.
            </summary>
            <returns>A <see cref="T:System.String" />. This method will return <c>null</c> at the end of an array.</returns>
        </member>
        <member name="M:Elastic.Apm.Libraries.Newtonsoft.Json.JsonValidatingReader.ReadAsDateTime">
            <summary>
            Reads the next JSON token from the underlying <see cref="T:Elastic.Apm.Libraries.Newtonsoft.Json.JsonReader" /> as a <see cref="T:System.Nullable`1" /> of
            <see cref="T:System.DateTime" />.
            </summary>
            <returns>
            A <see cref="T:System.Nullable`1" /> of <see cref="T:System.DateTime" />. This method will return <c>null</c> at the end of an
            array.
            </returns>
        </member>
        <member name="M:Elastic.Apm.Libraries.Newtonsoft.Json.JsonValidatingReader.ReadAsDateTimeOffset">
            <summary>
            Reads the next JSON token from the underlying <see cref="T:Elastic.Apm.Libraries.Newtonsoft.Json.JsonReader"/> as a <see cref="T:System.Nullable`1"/> of <see cref="T:System.DateTimeOffset"/>.
            </summary>
            <returns>A <see cref="T:System.Nullable`1"/> of <see cref="T:System.DateTimeOffset"/>.</returns>
        </member>
        <member name="M:Elastic.Apm.Libraries.Newtonsoft.Json.JsonValidatingReader.Read">
            <summary>
            Reads the next JSON token from the underlying <see cref="T:Elastic.Apm.Libraries.Newtonsoft.Json.JsonReader" />.
            </summary>
            <returns>
            <c>true</c> if the next token was read successfully; <c>false</c> if there are no more tokens to read.
            </returns>
        </member>
        <member name="T:Elastic.Apm.Libraries.Newtonsoft.Json.JsonWriter">
            <summary>
            Represents a writer that provides a fast, non-cached, forward-only way of generating JSON data.
            </summary>
        </member>
        <member name="M:Elastic.Apm.Libraries.Newtonsoft.Json.JsonWriter.CloseAsync(System.Threading.CancellationToken)">
            <summary>
            Asynchronously closes this writer.
            If <see cref="P:Elastic.Apm.Libraries.Newtonsoft.Json.JsonWriter.CloseOutput"/> is set to <c>true</c>, the destination is also closed.
            </summary>
            <param name="cancellationToken">The token to monitor for cancellation requests. The default value is <see cref="P:System.Threading.CancellationToken.None"/>.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> that represents the asynchronous operation.</returns>
            <remarks>The default behaviour is to execute synchronously, returning an already-completed task. Derived
            classes can override this behaviour for true asynchronicity.</remarks>
        </member>
        <member name="M:Elastic.Apm.Libraries.Newtonsoft.Json.JsonWriter.FlushAsync(System.Threading.CancellationToken)">
            <summary>
            Asynchronously flushes whatever is in the buffer to the destination and also flushes the destination.
            </summary>
            <param name="cancellationToken">The token to monitor for cancellation requests. The default value is <see cref="P:System.Threading.CancellationToken.None"/>.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> that represents the asynchronous operation.</returns>
            <remarks>The default behaviour is to execute synchronously, returning an already-completed task. Derived
            classes can override this behaviour for true asynchronicity.</remarks>
        </member>
        <member name="M:Elastic.Apm.Libraries.Newtonsoft.Json.JsonWriter.WriteEndAsync(Elastic.Apm.Libraries.Newtonsoft.Json.JsonToken,System.Threading.CancellationToken)">
            <summary>
            Asynchronously writes the specified end token.
            </summary>
            <param name="token">The end token to write.</param>
            <param name="cancellationToken">The token to monitor for cancellation requests. The default value is <see cref="P:System.Threading.CancellationToken.None"/>.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> that represents the asynchronous operation.</returns>
            <remarks>The default behaviour is to execute synchronously, returning an already-completed task. Derived
            classes can override this behaviour for true asynchronicity.</remarks>
        </member>
        <member name="M:Elastic.Apm.Libraries.Newtonsoft.Json.JsonWriter.WriteIndentAsync(System.Threading.CancellationToken)">
            <summary>
            Asynchronously writes indent characters.
            </summary>
            <param name="cancellationToken">The token to monitor for cancellation requests. The default value is <see cref="P:System.Threading.CancellationToken.None"/>.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> that represents the asynchronous operation.</returns>
            <remarks>The default behaviour is to execute synchronously, returning an already-completed task. Derived
            classes can override this behaviour for true asynchronicity.</remarks>
        </member>
        <member name="M:Elastic.Apm.Libraries.Newtonsoft.Json.JsonWriter.WriteValueDelimiterAsync(System.Threading.CancellationToken)">
            <summary>
            Asynchronously writes the JSON value delimiter.
            </summary>
            <param name="cancellationToken">The token to monitor for cancellation requests. The default value is <see cref="P:System.Threading.CancellationToken.None"/>.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> that represents the asynchronous operation.</returns>
            <remarks>The default behaviour is to execute synchronously, returning an already-completed task. Derived
            classes can override this behaviour for true asynchronicity.</remarks>
        </member>
        <member name="M:Elastic.Apm.Libraries.Newtonsoft.Json.JsonWriter.WriteIndentSpaceAsync(System.Threading.CancellationToken)">
            <summary>
            Asynchronously writes an indent space.
            </summary>
            <param name="cancellationToken">The token to monitor for cancellation requests. The default value is <see cref="P:System.Threading.CancellationToken.None"/>.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> that represents the asynchronous operation.</returns>
            <remarks>The default behaviour is to execute synchronously, returning an already-completed task. Derived
            classes can override this behaviour for true asynchronicity.</remarks>
        </member>
        <member name="M:Elastic.Apm.Libraries.Newtonsoft.Json.JsonWriter.WriteRawAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Asynchronously writes raw JSON without changing the writer's state.
            </summary>
            <param name="json">The raw JSON to write.</param>
            <param name="cancellationToken">The token to monitor for cancellation requests. The default value is <see cref="P:System.Threading.CancellationToken.None"/>.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> that represents the asynchronous operation.</returns>
            <remarks>The default behaviour is to execute synchronously, returning an already-completed task. Derived
            classes can override this behaviour for true asynchronicity.</remarks>
        </member>
        <member name="M:Elastic.Apm.Libraries.Newtonsoft.Json.JsonWriter.WriteEndAsync(System.Threading.CancellationToken)">
            <summary>
            Asynchronously writes the end of the current JSON object or array.
            </summary>
            <param name="cancellationToken">The token to monitor for cancellation requests. The default value is <see cref="P:System.Threading.CancellationToken.None"/>.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> that represents the asynchronous operation.</returns>
            <remarks>The default behaviour is to execute synchronously, returning an already-completed task. Derived
            classes can override this behaviour for true asynchronicity.</remarks>
        </member>
        <member name="M:Elastic.Apm.Libraries.Newtonsoft.Json.JsonWriter.WriteEndArrayAsync(System.Threading.CancellationToken)">
            <summary>
            Asynchronously writes the end of an array.
            </summary>
            <param name="cancellationToken">The token to monitor for cancellation requests. The default value is <see cref="P:System.Threading.CancellationToken.None"/>.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> that represents the asynchronous operation.</returns>
            <remarks>The default behaviour is to execute synchronously, returning an already-completed task. Derived
            classes can override this behaviour for true asynchronicity.</remarks>
        </member>
        <member name="M:Elastic.Apm.Libraries.Newtonsoft.Json.JsonWriter.WriteEndConstructorAsync(System.Threading.CancellationToken)">
            <summary>
            Asynchronously writes the end of a constructor.
            </summary>
            <param name="cancellationToken">The token to monitor for cancellation requests. The default value is <see cref="P:System.Threading.CancellationToken.None"/>.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> that represents the asynchronous operation.</returns>
            <remarks>The default behaviour is to execute synchronously, returning an already-completed task. Derived
            classes can override this behaviour for true asynchronicity.</remarks>
        </member>
        <member name="M:Elastic.Apm.Libraries.Newtonsoft.Json.JsonWriter.WriteEndObjectAsync(System.Threading.CancellationToken)">
            <summary>
            Asynchronously writes the end of a JSON object.
            </summary>
            <param name="cancellationToken">The token to monitor for cancellation requests. The default value is <see cref="P:System.Threading.CancellationToken.None"/>.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> that represents the asynchronous operation.</returns>
            <remarks>The default behaviour is to execute synchronously, returning an already-completed task. Derived
            classes can override this behaviour for true asynchronicity.</remarks>
        </member>
        <member name="M:Elastic.Apm.Libraries.Newtonsoft.Json.JsonWriter.WriteNullAsync(System.Threading.CancellationToken)">
            <summary>
            Asynchronously writes a null value.
            </summary>
            <param name="cancellationToken">The token to monitor for cancellation requests. The default value is <see cref="P:System.Threading.CancellationToken.None"/>.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> that represents the asynchronous operation.</returns>
            <remarks>The default behaviour is to execute synchronously, returning an already-completed task. Derived
            classes can override this behaviour for true asynchronicity.</remarks>
        </member>
        <member name="M:Elastic.Apm.Libraries.Newtonsoft.Json.JsonWriter.WritePropertyNameAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Asynchronously writes the property name of a name/value pair of a JSON object.
            </summary>
            <param name="name">The name of the property.</param>
            <param name="cancellationToken">The token to monitor for cancellation requests. The default value is <see cref="P:System.Threading.CancellationToken.None"/>.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> that represents the asynchronous operation.</returns>
            <remarks>The default behaviour is to execute synchronously, returning an already-completed task. Derived
            classes can override this behaviour for true asynchronicity.</remarks>
        </member>
        <member name="M:Elastic.Apm.Libraries.Newtonsoft.Json.JsonWriter.WritePropertyNameAsync(System.String,System.Boolean,System.Threading.CancellationToken)">
            <summary>
            Asynchronously writes the property name of a name/value pair of a JSON object.
            </summary>
            <param name="name">The name of the property.</param>
            <param name="escape">A flag to indicate whether the text should be escaped when it is written as a JSON property name.</param>
            <param name="cancellationToken">The token to monitor for cancellation requests. The default value is <see cref="P:System.Threading.CancellationToken.None"/>.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> that represents the asynchronous operation.</returns>
            <remarks>The default behaviour is to execute synchronously, returning an already-completed task. Derived
            classes can override this behaviour for true asynchronicity.</remarks>
        </member>
        <member name="M:Elastic.Apm.Libraries.Newtonsoft.Json.JsonWriter.WriteStartArrayAsync(System.Threading.CancellationToken)">
            <summary>
            Asynchronously writes the beginning of a JSON array.
            </summary>
            <param name="cancellationToken">The token to monitor for cancellation requests. The default value is <see cref="P:System.Threading.CancellationToken.None"/>.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> that represents the asynchronous operation.</returns>
            <remarks>The default behaviour is to execute synchronously, returning an already-completed task. Derived
            classes can override this behaviour for true asynchronicity.</remarks>
        </member>
        <member name="M:Elastic.Apm.Libraries.Newtonsoft.Json.JsonWriter.WriteCommentAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Asynchronously writes a comment <c>/*...*/</c> containing the specified text.
            </summary>
            <param name="text">Text to place inside the comment.</param>
            <param name="cancellationToken">The token to monitor for cancellation requests. The default value is <see cref="P:System.Threading.CancellationToken.None"/>.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> that represents the asynchronous operation.</returns>
            <remarks>The default behaviour is to execute synchronously, returning an already-completed task. Derived
            classes can override this behaviour for true asynchronicity.</remarks>
        </member>
        <member name="M:Elastic.Apm.Libraries.Newtonsoft.Json.JsonWriter.WriteRawValueAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Asynchronously writes raw JSON where a value is expected and updates the writer's state.
            </summary>
            <param name="json">The raw JSON to write.</param>
            <param name="cancellationToken">The token to monitor for cancellation requests. The default value is <see cref="P:System.Threading.CancellationToken.None"/>.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> that represents the asynchronous operation.</returns>
            <remarks>The default behaviour is to execute synchronously, returning an already-completed task. Derived
            classes can override this behaviour for true asynchronicity.</remarks>
        </member>
        <member name="M:Elastic.Apm.Libraries.Newtonsoft.Json.JsonWriter.WriteStartConstructorAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Asynchronously writes the start of a constructor with the given name.
            </summary>
            <param name="name">The name of the constructor.</param>
            <param name="cancellationToken">The token to monitor for cancellation requests. The default value is <see cref="P:System.Threading.CancellationToken.None"/>.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> that represents the asynchronous operation.</returns>
            <remarks>The default behaviour is to execute synchronously, returning an already-completed task. Derived
            classes can override this behaviour for true asynchronicity.</remarks>
        </member>
        <member name="M:Elastic.Apm.Libraries.Newtonsoft.Json.JsonWriter.WriteStartObjectAsync(System.Threading.CancellationToken)">
            <summary>
            Asynchronously writes the beginning of a JSON object.
            </summary>
            <param name="cancellationToken">The token to monitor for cancellation requests. The default value is <see cref="P:System.Threading.CancellationToken.None"/>.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> that represents the asynchronous operation.</returns>
            <remarks>The default behaviour is to execute synchronously, returning an already-completed task. Derived
            classes can override this behaviour for true asynchronicity.</remarks>
        </member>
        <member name="M:Elastic.Apm.Libraries.Newtonsoft.Json.JsonWriter.WriteTokenAsync(Elastic.Apm.Libraries.Newtonsoft.Json.JsonReader,System.Threading.CancellationToken)">
            <summary>
            Asynchronously writes the current <see cref="T:Elastic.Apm.Libraries.Newtonsoft.Json.JsonReader"/> token.
            </summary>
            <param name="reader">The <see cref="T:Elastic.Apm.Libraries.Newtonsoft.Json.JsonReader"/> to read the token from.</param>
            <param name="cancellationToken">The token to monitor for cancellation requests. The default value is <see cref="P:System.Threading.CancellationToken.None"/>.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> that represents the asynchronous operation.</returns>
            <remarks>The default behaviour is to execute synchronously, returning an already-completed task. Derived
            classes can override this behaviour for true asynchronicity.</remarks>
        </member>
        <member name="M:Elastic.Apm.Libraries.Newtonsoft.Json.JsonWriter.WriteTokenAsync(Elastic.Apm.Libraries.Newtonsoft.Json.JsonReader,System.Boolean,System.Threading.CancellationToken)">
            <summary>
            Asynchronously writes the current <see cref="T:Elastic.Apm.Libraries.Newtonsoft.Json.JsonReader"/> token.
            </summary>
            <param name="reader">The <see cref="T:Elastic.Apm.Libraries.Newtonsoft.Json.JsonReader"/> to read the token from.</param>
            <param name="writeChildren">A flag indicating whether the current token's children should be written.</param>
            <param name="cancellationToken">The token to monitor for cancellation requests. The default value is <see cref="P:System.Threading.CancellationToken.None"/>.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> that represents the asynchronous operation.</returns>
            <remarks>The default behaviour is to execute synchronously, returning an already-completed task. Derived
            classes can override this behaviour for true asynchronicity.</remarks>
        </member>
        <member name="M:Elastic.Apm.Libraries.Newtonsoft.Json.JsonWriter.WriteTokenAsync(Elastic.Apm.Libraries.Newtonsoft.Json.JsonToken,System.Threading.CancellationToken)">
            <summary>
            Asynchronously writes the <see cref="T:Elastic.Apm.Libraries.Newtonsoft.Json.JsonToken"/> token and its value.
            </summary>
            <param name="token">The <see cref="T:Elastic.Apm.Libraries.Newtonsoft.Json.JsonToken"/> to write.</param>
            <param name="cancellationToken">The token to monitor for cancellation requests. The default value is <see cref="P:System.Threading.CancellationToken.None"/>.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> that represents the asynchronous operation.</returns>
            <remarks>The default behaviour is to execute synchronously, returning an already-completed task. Derived
            classes can override this behaviour for true asynchronicity.</remarks>
        </member>
        <member name="M:Elastic.Apm.Libraries.Newtonsoft.Json.JsonWriter.WriteTokenAsync(Elastic.Apm.Libraries.Newtonsoft.Json.JsonToken,System.Object,System.Threading.CancellationToken)">
            <summary>
            Asynchronously writes the <see cref="T:Elastic.Apm.Libraries.Newtonsoft.Json.JsonToken"/> token and its value.
            </summary>
            <param name="token">The <see cref="T:Elastic.Apm.Libraries.Newtonsoft.Json.JsonToken"/> to write.</param>
            <param name="value">
            The value to write.
            A value is only required for tokens that have an associated value, e.g. the <see cref="T:System.String"/> property name for <see cref="F:Elastic.Apm.Libraries.Newtonsoft.Json.JsonToken.PropertyName"/>.
            <c>null</c> can be passed to the method for tokens that don't have a value, e.g. <see cref="F:Elastic.Apm.Libraries.Newtonsoft.Json.JsonToken.StartObject"/>.
            </param>
            <param name="cancellationToken">The token to monitor for cancellation requests. The default value is <see cref="P:System.Threading.CancellationToken.None"/>.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> that represents the asynchronous operation.</returns>
            <remarks>The default behaviour is to execute synchronously, returning an already-completed task. Derived
            classes can override this behaviour for true asynchronicity.</remarks>
        </member>
        <member name="M:Elastic.Apm.Libraries.Newtonsoft.Json.JsonWriter.WriteValueAsync(System.Boolean,System.Threading.CancellationToken)">
            <summary>
            Asynchronously writes a <see cref="T:System.Nullable`1"/> of <see cref="T:System.Boolean"/> value.
            </summary>
            <param name="value">The <see cref="T:System.Nullable`1"/> of <see cref="T:System.Boolean"/> value to write.</param>
            <param name="cancellationToken">The token to monitor for cancellation requests. The default value is <see cref="P:System.Threading.CancellationToken.None"/>.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> that represents the asynchronous operation.</returns>
            <remarks>The default behaviour is to execute synchronously, returning an already-completed task. Derived
            classes can override this behaviour for true asynchronicity.</remarks>
        </member>
        <member name="M:Elastic.Apm.Libraries.Newtonsoft.Json.JsonWriter.WriteValueAsync(System.Nullable{System.Boolean},System.Threading.CancellationToken)">
            <summary>
            Asynchronously writes a <see cref="T:System.Boolean"/> value.
            </summary>
            <param name="value">The <see cref="T:System.Boolean"/> value to write.</param>
            <param name="cancellationToken">The token to monitor for cancellation requests. The default value is <see cref="P:System.Threading.CancellationToken.None"/>.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> that represents the asynchronous operation.</returns>
            <remarks>The default behaviour is to execute synchronously, returning an already-completed task. Derived
            classes can override this behaviour for true asynchronicity.</remarks>
        </member>
        <member name="M:Elastic.Apm.Libraries.Newtonsoft.Json.JsonWriter.WriteValueAsync(System.Byte,System.Threading.CancellationToken)">
            <summary>
            Asynchronously writes a <see cref="T:System.Byte"/> value.
            </summary>
            <param name="value">The <see cref="T:System.Byte"/> value to write.</param>
            <param name="cancellationToken">The token to monitor for cancellation requests. The default value is <see cref="P:System.Threading.CancellationToken.None"/>.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> that represents the asynchronous operation.</returns>
            <remarks>The default behaviour is to execute synchronously, returning an already-completed task. Derived
            classes can override this behaviour for true asynchronicity.</remarks>
        </member>
        <member name="M:Elastic.Apm.Libraries.Newtonsoft.Json.JsonWriter.WriteValueAsync(System.Nullable{System.Byte},System.Threading.CancellationToken)">
            <summary>
            Asynchronously writes a <see cref="T:System.Nullable`1"/> of <see cref="T:System.Byte"/> value.
            </summary>
            <param name="value">The <see cref="T:System.Nullable`1"/> of <see cref="T:System.Byte"/> value to write.</param>
            <param name="cancellationToken">The token to monitor for cancellation requests. The default value is <see cref="P:System.Threading.CancellationToken.None"/>.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> that represents the asynchronous operation.</returns>
            <remarks>The default behaviour is to execute synchronously, returning an already-completed task. Derived
            classes can override this behaviour for true asynchronicity.</remarks>
        </member>
        <member name="M:Elastic.Apm.Libraries.Newtonsoft.Json.JsonWriter.WriteValueAsync(System.Byte[],System.Threading.CancellationToken)">
            <summary>
            Asynchronously writes a <see cref="T:System.Byte"/>[] value.
            </summary>
            <param name="value">The <see cref="T:System.Byte"/>[] value to write.</param>
            <param name="cancellationToken">The token to monitor for cancellation requests. The default value is <see cref="P:System.Threading.CancellationToken.None"/>.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> that represents the asynchronous operation.</returns>
            <remarks>The default behaviour is to execute synchronously, returning an already-completed task. Derived
            classes can override this behaviour for true asynchronicity.</remarks>
        </member>
        <member name="M:Elastic.Apm.Libraries.Newtonsoft.Json.JsonWriter.WriteValueAsync(System.Char,System.Threading.CancellationToken)">
            <summary>
            Asynchronously writes a <see cref="T:System.Char"/> value.
            </summary>
            <param name="value">The <see cref="T:System.Char"/> value to write.</param>
            <param name="cancellationToken">The token to monitor for cancellation requests. The default value is <see cref="P:System.Threading.CancellationToken.None"/>.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> that represents the asynchronous operation.</returns>
            <remarks>The default behaviour is to execute synchronously, returning an already-completed task. Derived
            classes can override this behaviour for true asynchronicity.</remarks>
        </member>
        <member name="M:Elastic.Apm.Libraries.Newtonsoft.Json.JsonWriter.WriteValueAsync(System.Nullable{System.Char},System.Threading.CancellationToken)">
            <summary>
            Asynchronously writes a <see cref="T:System.Nullable`1"/> of <see cref="T:System.Char"/> value.
            </summary>
            <param name="value">The <see cref="T:System.Nullable`1"/> of <see cref="T:System.Char"/> value to write.</param>
            <param name="cancellationToken">The token to monitor for cancellation requests. The default value is <see cref="P:System.Threading.CancellationToken.None"/>.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> that represents the asynchronous operation.</returns>
            <remarks>The default behaviour is to execute synchronously, returning an already-completed task. Derived
            classes can override this behaviour for true asynchronicity.</remarks>
        </member>
        <member name="M:Elastic.Apm.Libraries.Newtonsoft.Json.JsonWriter.WriteValueAsync(System.DateTime,System.Threading.CancellationToken)">
            <summary>
            Asynchronously writes a <see cref="T:System.DateTime"/> value.
            </summary>
            <param name="value">The <see cref="T:System.DateTime"/> value to write.</param>
            <param name="cancellationToken">The token to monitor for cancellation requests. The default value is <see cref="P:System.Threading.CancellationToken.None"/>.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> that represents the asynchronous operation.</returns>
            <remarks>The default behaviour is to execute synchronously, returning an already-completed task. Derived
            classes can override this behaviour for true asynchronicity.</remarks>
        </member>
        <member name="M:Elastic.Apm.Libraries.Newtonsoft.Json.JsonWriter.WriteValueAsync(System.Nullable{System.DateTime},System.Threading.CancellationToken)">
            <summary>
            Asynchronously writes a <see cref="T:System.Nullable`1"/> of <see cref="T:System.DateTime"/> value.
            </summary>
            <param name="value">The <see cref="T:System.Nullable`1"/> of <see cref="T:System.DateTime"/> value to write.</param>
            <param name="cancellationToken">The token to monitor for cancellation requests. The default value is <see cref="P:System.Threading.CancellationToken.None"/>.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> that represents the asynchronous operation.</returns>
            <remarks>The default behaviour is to execute synchronously, returning an already-completed task. Derived
            classes can override this behaviour for true asynchronicity.</remarks>
        </member>
        <member name="M:Elastic.Apm.Libraries.Newtonsoft.Json.JsonWriter.WriteValueAsync(System.DateTimeOffset,System.Threading.CancellationToken)">
            <summary>
            Asynchronously writes a <see cref="T:System.DateTimeOffset"/> value.
            </summary>
            <param name="value">The <see cref="T:System.DateTimeOffset"/> value to write.</param>
            <param name="cancellationToken">The token to monitor for cancellation requests. The default value is <see cref="P:System.Threading.CancellationToken.None"/>.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> that represents the asynchronous operation.</returns>
            <remarks>The default behaviour is to execute synchronously, returning an already-completed task. Derived
            classes can override this behaviour for true asynchronicity.</remarks>
        </member>
        <member name="M:Elastic.Apm.Libraries.Newtonsoft.Json.JsonWriter.WriteValueAsync(System.Nullable{System.DateTimeOffset},System.Threading.CancellationToken)">
            <summary>
            Asynchronously writes a <see cref="T:System.Nullable`1"/> of <see cref="T:System.DateTimeOffset"/> value.
            </summary>
            <param name="value">The <see cref="T:System.Nullable`1"/> of <see cref="T:System.DateTimeOffset"/> value to write.</param>
            <param name="cancellationToken">The token to monitor for cancellation requests. The default value is <see cref="P:System.Threading.CancellationToken.None"/>.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> that represents the asynchronous operation.</returns>
            <remarks>The default behaviour is to execute synchronously, returning an already-completed task. Derived
            classes can override this behaviour for true asynchronicity.</remarks>
        </member>
        <member name="M:Elastic.Apm.Libraries.Newtonsoft.Json.JsonWriter.WriteValueAsync(System.Decimal,System.Threading.CancellationToken)">
            <summary>
            Asynchronously writes a <see cref="T:System.Decimal"/> value.
            </summary>
            <param name="value">The <see cref="T:System.Decimal"/> value to write.</param>
            <param name="cancellationToken">The token to monitor for cancellation requests. The default value is <see cref="P:System.Threading.CancellationToken.None"/>.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> that represents the asynchronous operation.</returns>
            <remarks>The default behaviour is to execute synchronously, returning an already-completed task. Derived
            classes can override this behaviour for true asynchronicity.</remarks>
        </member>
        <member name="M:Elastic.Apm.Libraries.Newtonsoft.Json.JsonWriter.WriteValueAsync(System.Nullable{System.Decimal},System.Threading.CancellationToken)">
            <summary>
            Asynchronously writes a <see cref="T:System.Nullable`1"/> of <see cref="T:System.Decimal"/> value.
            </summary>
            <param name="value">The <see cref="T:System.Nullable`1"/> of <see cref="T:System.Decimal"/> value to write.</param>
            <param name="cancellationToken">The token to monitor for cancellation requests. The default value is <see cref="P:System.Threading.CancellationToken.None"/>.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> that represents the asynchronous operation.</returns>
            <remarks>The default behaviour is to execute synchronously, returning an already-completed task. Derived
            classes can override this behaviour for true asynchronicity.</remarks>
        </member>
        <member name="M:Elastic.Apm.Libraries.Newtonsoft.Json.JsonWriter.WriteValueAsync(System.Double,System.Threading.CancellationToken)">
            <summary>
            Asynchronously writes a <see cref="T:System.Double"/> value.
            </summary>
            <param name="value">The <see cref="T:System.Double"/> value to write.</param>
            <param name="cancellationToken">The token to monitor for cancellation requests. The default value is <see cref="P:System.Threading.CancellationToken.None"/>.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> that represents the asynchronous operation.</returns>
            <remarks>The default behaviour is to execute synchronously, returning an already-completed task. Derived
            classes can override this behaviour for true asynchronicity.</remarks>
        </member>
        <member name="M:Elastic.Apm.Libraries.Newtonsoft.Json.JsonWriter.WriteValueAsync(System.Nullable{System.Double},System.Threading.CancellationToken)">
            <summary>
            Asynchronously writes a <see cref="T:System.Nullable`1"/> of <see cref="T:System.Double"/> value.
            </summary>
            <param name="value">The <see cref="T:System.Nullable`1"/> of <see cref="T:System.Double"/> value to write.</param>
            <param name="cancellationToken">The token to monitor for cancellation requests. The default value is <see cref="P:System.Threading.CancellationToken.None"/>.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> that represents the asynchronous operation.</returns>
            <remarks>The default behaviour is to execute synchronously, returning an already-completed task. Derived
            classes can override this behaviour for true asynchronicity.</remarks>
        </member>
        <member name="M:Elastic.Apm.Libraries.Newtonsoft.Json.JsonWriter.WriteValueAsync(System.Single,System.Threading.CancellationToken)">
            <summary>
            Asynchronously writes a <see cref="T:System.Single"/> value.
            </summary>
            <param name="value">The <see cref="T:System.Single"/> value to write.</param>
            <param name="cancellationToken">The token to monitor for cancellation requests. The default value is <see cref="P:System.Threading.CancellationToken.None"/>.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> that represents the asynchronous operation.</returns>
            <remarks>The default behaviour is to execute synchronously, returning an already-completed task. Derived
            classes can override this behaviour for true asynchronicity.</remarks>
        </member>
        <member name="M:Elastic.Apm.Libraries.Newtonsoft.Json.JsonWriter.WriteValueAsync(System.Nullable{System.Single},System.Threading.CancellationToken)">
            <summary>
            Asynchronously writes a <see cref="T:System.Nullable`1"/> of <see cref="T:System.Single"/> value.
            </summary>
            <param name="value">The <see cref="T:System.Nullable`1"/> of <see cref="T:System.Single"/> value to write.</param>
            <param name="cancellationToken">The token to monitor for cancellation requests. The default value is <see cref="P:System.Threading.CancellationToken.None"/>.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> that represents the asynchronous operation.</returns>
            <remarks>The default behaviour is to execute synchronously, returning an already-completed task. Derived
            classes can override this behaviour for true asynchronicity.</remarks>
        </member>
        <member name="M:Elastic.Apm.Libraries.Newtonsoft.Json.JsonWriter.WriteValueAsync(System.Guid,System.Threading.CancellationToken)">
            <summary>
            Asynchronously writes a <see cref="T:System.Guid"/> value.
            </summary>
            <param name="value">The <see cref="T:System.Guid"/> value to write.</param>
            <param name="cancellationToken">The token to monitor for cancellation requests. The default value is <see cref="P:System.Threading.CancellationToken.None"/>.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> that represents the asynchronous operation.</returns>
            <remarks>The default behaviour is to execute synchronously, returning an already-completed task. Derived
            classes can override this behaviour for true asynchronicity.</remarks>
        </member>
        <member name="M:Elastic.Apm.Libraries.Newtonsoft.Json.JsonWriter.WriteValueAsync(System.Nullable{System.Guid},System.Threading.CancellationToken)">
            <summary>
            Asynchronously writes a <see cref="T:System.Nullable`1"/> of <see cref="T:System.Guid"/> value.
            </summary>
            <param name="value">The <see cref="T:System.Nullable`1"/> of <see cref="T:System.Guid"/> value to write.</param>
            <param name="cancellationToken">The token to monitor for cancellation requests. The default value is <see cref="P:System.Threading.CancellationToken.None"/>.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> that represents the asynchronous operation.</returns>
            <remarks>The default behaviour is to execute synchronously, returning an already-completed task. Derived
            classes can override this behaviour for true asynchronicity.</remarks>
        </member>
        <member name="M:Elastic.Apm.Libraries.Newtonsoft.Json.JsonWriter.WriteValueAsync(System.Int32,System.Threading.CancellationToken)">
            <summary>
            Asynchronously writes a <see cref="T:System.Int32"/> value.
            </summary>
            <param name="value">The <see cref="T:System.Int32"/> value to write.</param>
            <param name="cancellationToken">The token to monitor for cancellation requests. The default value is <see cref="P:System.Threading.CancellationToken.None"/>.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> that represents the asynchronous operation.</returns>
            <remarks>The default behaviour is to execute synchronously, returning an already-completed task. Derived
            classes can override this behaviour for true asynchronicity.</remarks>
        </member>
        <member name="M:Elastic.Apm.Libraries.Newtonsoft.Json.JsonWriter.WriteValueAsync(System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <summary>
            Asynchronously writes a <see cref="T:System.Nullable`1"/> of <see cref="T:System.Int32"/> value.
            </summary>
            <param name="value">The <see cref="T:System.Nullable`1"/> of <see cref="T:System.Int32"/> value to write.</param>
            <param name="cancellationToken">The token to monitor for cancellation requests. The default value is <see cref="P:System.Threading.CancellationToken.None"/>.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> that represents the asynchronous operation.</returns>
            <remarks>The default behaviour is to execute synchronously, returning an already-completed task. Derived
            classes can override this behaviour for true asynchronicity.</remarks>
        </member>
        <member name="M:Elastic.Apm.Libraries.Newtonsoft.Json.JsonWriter.WriteValueAsync(System.Int64,System.Threading.CancellationToken)">
            <summary>
            Asynchronously writes a <see cref="T:System.Int64"/> value.
            </summary>
            <param name="value">The <see cref="T:System.Int64"/> value to write.</param>
            <param name="cancellationToken">The token to monitor for cancellation requests. The default value is <see cref="P:System.Threading.CancellationToken.None"/>.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> that represents the asynchronous operation.</returns>
            <remarks>The default behaviour is to execute synchronously, returning an already-completed task. Derived
            classes can override this behaviour for true asynchronicity.</remarks>
        </member>
        <member name="M:Elastic.Apm.Libraries.Newtonsoft.Json.JsonWriter.WriteValueAsync(System.Nullable{System.Int64},System.Threading.CancellationToken)">
            <summary>
            Asynchronously writes a <see cref="T:System.Nullable`1"/> of <see cref="T:System.Int64"/> value.
            </summary>
            <param name="value">The <see cref="T:System.Nullable`1"/> of <see cref="T:System.Int64"/> value to write.</param>
            <param name="cancellationToken">The token to monitor for cancellation requests. The default value is <see cref="P:System.Threading.CancellationToken.None"/>.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> that represents the asynchronous operation.</returns>
            <remarks>The default behaviour is to execute synchronously, returning an already-completed task. Derived
            classes can override this behaviour for true asynchronicity.</remarks>
        </member>
        <member name="M:Elastic.Apm.Libraries.Newtonsoft.Json.JsonWriter.WriteValueAsync(System.Object,System.Threading.CancellationToken)">
            <summary>
            Asynchronously writes a <see cref="T:System.Object"/> value.
            </summary>
            <param name="value">The <see cref="T:System.Object"/> value to write.</param>
            <param name="cancellationToken">The token to monitor for cancellation requests. The default value is <see cref="P:System.Threading.CancellationToken.None"/>.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> that represents the asynchronous operation.</returns>
            <remarks>The default behaviour is to execute synchronously, returning an already-completed task. Derived
            classes can override this behaviour for true asynchronicity.</remarks>
        </member>
        <member name="M:Elastic.Apm.Libraries.Newtonsoft.Json.JsonWriter.WriteValueAsync(System.SByte,System.Threading.CancellationToken)">
            <summary>
            Asynchronously writes a <see cref="T:System.SByte"/> value.
            </summary>
            <param name="value">The <see cref="T:System.SByte"/> value to write.</param>
            <param name="cancellationToken">The token to monitor for cancellation requests. The default value is <see cref="P:System.Threading.CancellationToken.None"/>.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> that represents the asynchronous operation.</returns>
            <remarks>The default behaviour is to execute synchronously, returning an already-completed task. Derived
            classes can override this behaviour for true asynchronicity.</remarks>
        </member>
        <member name="M:Elastic.Apm.Libraries.Newtonsoft.Json.JsonWriter.WriteValueAsync(System.Nullable{System.SByte},System.Threading.CancellationToken)">
            <summary>
            Asynchronously writes a <see cref="T:System.Nullable`1"/> of <see cref="T:System.SByte"/> value.
            </summary>
            <param name="value">The <see cref="T:System.Nullable`1"/> of <see cref="T:System.SByte"/> value to write.</param>
            <param name="cancellationToken">The token to monitor for cancellation requests. The default value is <see cref="P:System.Threading.CancellationToken.None"/>.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> that represents the asynchronous operation.</returns>
            <remarks>The default behaviour is to execute synchronously, returning an already-completed task. Derived
            classes can override this behaviour for true asynchronicity.</remarks>
        </member>
        <member name="M:Elastic.Apm.Libraries.Newtonsoft.Json.JsonWriter.WriteValueAsync(System.Int16,System.Threading.CancellationToken)">
            <summary>
            Asynchronously writes a <see cref="T:System.Int16"/> value.
            </summary>
            <param name="value">The <see cref="T:System.Int16"/> value to write.</param>
            <param name="cancellationToken">The token to monitor for cancellation requests. The default value is <see cref="P:System.Threading.CancellationToken.None"/>.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> that represents the asynchronous operation.</returns>
            <remarks>The default behaviour is to execute synchronously, returning an already-completed task. Derived
            classes can override this behaviour for true asynchronicity.</remarks>
        </member>
        <member name="M:Elastic.Apm.Libraries.Newtonsoft.Json.JsonWriter.WriteValueAsync(System.Nullable{System.Int16},System.Threading.CancellationToken)">
            <summary>
            Asynchronously writes a <see cref="T:System.Nullable`1"/> of <see cref="T:System.Int16"/> value.
            </summary>
            <param name="value">The <see cref="T:System.Nullable`1"/> of <see cref="T:System.Int16"/> value to write.</param>
            <param name="cancellationToken">The token to monitor for cancellation requests. The default value is <see cref="P:System.Threading.CancellationToken.None"/>.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> that represents the asynchronous operation.</returns>
            <remarks>The default behaviour is to execute synchronously, returning an already-completed task. Derived
            classes can override this behaviour for true asynchronicity.</remarks>
        </member>
        <member name="M:Elastic.Apm.Libraries.Newtonsoft.Json.JsonWriter.WriteValueAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Asynchronously writes a <see cref="T:System.String"/> value.
            </summary>
            <param name="value">The <see cref="T:System.String"/> value to write.</param>
            <param name="cancellationToken">The token to monitor for cancellation requests. The default value is <see cref="P:System.Threading.CancellationToken.None"/>.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> that represents the asynchronous operation.</returns>
            <remarks>The default behaviour is to execute synchronously, returning an already-completed task. Derived
            classes can override this behaviour for true asynchronicity.</remarks>
        </member>
        <member name="M:Elastic.Apm.Libraries.Newtonsoft.Json.JsonWriter.WriteValueAsync(System.TimeSpan,System.Threading.CancellationToken)">
            <summary>
            Asynchronously writes a <see cref="T:System.TimeSpan"/> value.
            </summary>
            <param name="value">The <see cref="T:System.TimeSpan"/> value to write.</param>
            <param name="cancellationToken">The token to monitor for cancellation requests. The default value is <see cref="P:System.Threading.CancellationToken.None"/>.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> that represents the asynchronous operation.</returns>
            <remarks>The default behaviour is to execute synchronously, returning an already-completed task. Derived
            classes can override this behaviour for true asynchronicity.</remarks>
        </member>
        <member name="M:Elastic.Apm.Libraries.Newtonsoft.Json.JsonWriter.WriteValueAsync(System.Nullable{System.TimeSpan},System.Threading.CancellationToken)">
            <summary>
            Asynchronously writes a <see cref="T:System.Nullable`1"/> of <see cref="T:System.TimeSpan"/> value.
            </summary>
            <param name="value">The <see cref="T:System.Nullable`1"/> of <see cref="T:System.TimeSpan"/> value to write.</param>
            <param name="cancellationToken">The token to monitor for cancellation requests. The default value is <see cref="P:System.Threading.CancellationToken.None"/>.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> that represents the asynchronous operation.</returns>
            <remarks>The default behaviour is to execute synchronously, returning an already-completed task. Derived
            classes can override this behaviour for true asynchronicity.</remarks>
        </member>
        <member name="M:Elastic.Apm.Libraries.Newtonsoft.Json.JsonWriter.WriteValueAsync(System.UInt32,System.Threading.CancellationToken)">
            <summary>
            Asynchronously writes a <see cref="T:System.UInt32"/> value.
            </summary>
            <param name="value">The <see cref="T:System.UInt32"/> value to write.</param>
            <param name="cancellationToken">The token to monitor for cancellation requests. The default value is <see cref="P:System.Threading.CancellationToken.None"/>.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> that represents the asynchronous operation.</returns>
            <remarks>The default behaviour is to execute synchronously, returning an already-completed task. Derived
            classes can override this behaviour for true asynchronicity.</remarks>
        </member>
        <member name="M:Elastic.Apm.Libraries.Newtonsoft.Json.JsonWriter.WriteValueAsync(System.Nullable{System.UInt32},System.Threading.CancellationToken)">
            <summary>
            Asynchronously writes a <see cref="T:System.Nullable`1"/> of <see cref="T:System.UInt32"/> value.
            </summary>
            <param name="value">The <see cref="T:System.Nullable`1"/> of <see cref="T:System.UInt32"/> value to write.</param>
            <param name="cancellationToken">The token to monitor for cancellation requests. The default value is <see cref="P:System.Threading.CancellationToken.None"/>.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> that represents the asynchronous operation.</returns>
            <remarks>The default behaviour is to execute synchronously, returning an already-completed task. Derived
            classes can override this behaviour for true asynchronicity.</remarks>
        </member>
        <member name="M:Elastic.Apm.Libraries.Newtonsoft.Json.JsonWriter.WriteValueAsync(System.UInt64,System.Threading.CancellationToken)">
            <summary>
            Asynchronously writes a <see cref="T:System.UInt64"/> value.
            </summary>
            <param name="value">The <see cref="T:System.UInt64"/> value to write.</param>
            <param name="cancellationToken">The token to monitor for cancellation requests. The default value is <see cref="P:System.Threading.CancellationToken.None"/>.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> that represents the asynchronous operation.</returns>
            <remarks>The default behaviour is to execute synchronously, returning an already-completed task. Derived
            classes can override this behaviour for true asynchronicity.</remarks>
        </member>
        <member name="M:Elastic.Apm.Libraries.Newtonsoft.Json.JsonWriter.WriteValueAsync(System.Nullable{System.UInt64},System.Threading.CancellationToken)">
            <summary>
            Asynchronously writes a <see cref="T:System.Nullable`1"/> of <see cref="T:System.UInt64"/> value.
            </summary>
            <param name="value">The <see cref="T:System.Nullable`1"/> of <see cref="T:System.UInt64"/> value to write.</param>
            <param name="cancellationToken">The token to monitor for cancellation requests. The default value is <see cref="P:System.Threading.CancellationToken.None"/>.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> that represents the asynchronous operation.</returns>
            <remarks>The default behaviour is to execute synchronously, returning an already-completed task. Derived
            classes can override this behaviour for true asynchronicity.</remarks>
        </member>
        <member name="M:Elastic.Apm.Libraries.Newtonsoft.Json.JsonWriter.WriteValueAsync(System.Uri,System.Threading.CancellationToken)">
            <summary>
            Asynchronously writes a <see cref="T:System.Uri"/> value.
            </summary>
            <param name="value">The <see cref="T:System.Uri"/> value to write.</param>
            <param name="cancellationToken">The token to monitor for cancellation requests. The default value is <see cref="P:System.Threading.CancellationToken.None"/>.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> that represents the asynchronous operation.</returns>
            <remarks>The default behaviour is to execute synchronously, returning an already-completed task. Derived
            classes can override this behaviour for true asynchronicity.</remarks>
        </member>
        <member name="M:Elastic.Apm.Libraries.Newtonsoft.Json.JsonWriter.WriteValueAsync(System.UInt16,System.Threading.CancellationToken)">
            <summary>
            Asynchronously writes a <see cref="T:System.UInt16"/> value.
            </summary>
            <param name="value">The <see cref="T:System.UInt16"/> value to write.</param>
            <param name="cancellationToken">The token to monitor for cancellation requests. The default value is <see cref="P:System.Threading.CancellationToken.None"/>.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> that represents the asynchronous operation.</returns>
            <remarks>The default behaviour is to execute synchronously, returning an already-completed task. Derived
            classes can override this behaviour for true asynchronicity.</remarks>
        </member>
        <member name="M:Elastic.Apm.Libraries.Newtonsoft.Json.JsonWriter.WriteValueAsync(System.Nullable{System.UInt16},System.Threading.CancellationToken)">
            <summary>
            Asynchronously writes a <see cref="T:System.Nullable`1"/> of <see cref="T:System.UInt16"/> value.
            </summary>
            <param name="value">The <see cref="T:System.Nullable`1"/> of <see cref="T:System.UInt16"/> value to write.</param>
            <param name="cancellationToken">The token to monitor for cancellation requests. The default value is <see cref="P:System.Threading.CancellationToken.None"/>.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> that represents the asynchronous operation.</returns>
            <remarks>The default behaviour is to execute synchronously, returning an already-completed task. Derived
            classes can override this behaviour for true asynchronicity.</remarks>
        </member>
        <member name="M:Elastic.Apm.Libraries.Newtonsoft.Json.JsonWriter.WriteUndefinedAsync(System.Threading.CancellationToken)">
            <summary>
            Asynchronously writes an undefined value.
            </summary>
            <param name="cancellationToken">The token to monitor for cancellation requests. The default value is <see cref="P:System.Threading.CancellationToken.None"/>.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> that represents the asynchronous operation.</returns>
            <remarks>The default behaviour is to execute synchronously, returning an already-completed task. Derived
            classes can override this behaviour for true asynchronicity.</remarks>
        </member>
        <member name="M:Elastic.Apm.Libraries.Newtonsoft.Json.JsonWriter.WriteWhitespaceAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Asynchronously writes the given white space.
            </summary>
            <param name="ws">The string of white space characters.</param>
            <param name="cancellationToken">The token to monitor for cancellation requests. The default value is <see cref="P:System.Threading.CancellationToken.None"/>.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> that represents the asynchronous operation.</returns>
            <remarks>The default behaviour is to execute synchronously, returning an already-completed task. Derived
            classes can override this behaviour for true asynchronicity.</remarks>
        </member>
        <member name="M:Elastic.Apm.Libraries.Newtonsoft.Json.JsonWriter.SetWriteStateAsync(Elastic.Apm.Libraries.Newtonsoft.Json.JsonToken,System.Object,System.Threading.CancellationToken)">
            <summary>
            Asynchronously ets the state of the <see cref="T:Elastic.Apm.Libraries.Newtonsoft.Json.JsonWriter"/>.
            </summary>
            <param name="token">The <see cref="T:Elastic.Apm.Libraries.Newtonsoft.Json.JsonToken"/> being written.</param>
            <param name="value">The value being written.</param>
            <param name="cancellationToken">The token to monitor for cancellation requests. The default value is <see cref="P:System.Threading.CancellationToken.None"/>.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> that represents the asynchronous operation.</returns>
            <remarks>The default behaviour is to execute synchronously, returning an already-completed task. Derived
            classes can override this behaviour for true asynchronicity.</remarks>
        </member>
        <member name="P:Elastic.Apm.Libraries.Newtonsoft.Json.JsonWriter.CloseOutput">
            <summary>
            Gets or sets a value indicating whether the destination should be closed when this writer is closed.
            </summary>
            <value>
            <c>true</c> to close the destination when this writer is closed; otherwise <c>false</c>. The default is <c>true</c>.
            </value>
        </member>
        <member name="P:Elastic.Apm.Libraries.Newtonsoft.Json.JsonWriter.AutoCompleteOnClose">
            <summary>
            Gets or sets a value indicating whether the JSON should be auto-completed when this writer is closed.
            </summary>
            <value>
            <c>true</c> to auto-complete the JSON when this writer is closed; otherwise <c>false</c>. The default is <c>true</c>.
            </value>
        </member>
        <member name="P:Elastic.Apm.Libraries.Newtonsoft.Json.JsonWriter.Top">
            <summary>
            Gets the top.
            </summary>
            <value>The top.</value>
        </member>
        <member name="P:Elastic.Apm.Libraries.Newtonsoft.Json.JsonWriter.WriteState">
            <summary>
            Gets the state of the writer.
            </summary>
        </member>
        <member name="P:Elastic.Apm.Libraries.Newtonsoft.Json.JsonWriter.Path">
            <summary>
            Gets the path of the writer.
            </summary>
        </member>
        <member name="P:Elastic.Apm.Libraries.Newtonsoft.Json.JsonWriter.Formatting">
            <summary>
            Gets or sets a value indicating how JSON text output should be formatted.
            </summary>
        </member>
        <member name="P:Elastic.Apm.Libraries.Newtonsoft.Json.JsonWriter.DateFormatHandling">
            <summary>
            Gets or sets how dates are written to JSON text.
            </summary>
        </member>
        <member name="P:Elastic.Apm.Libraries.Newtonsoft.Json.JsonWriter.DateTimeZoneHandling">
            <summary>
            Gets or sets how <see cref="T:System.DateTime" /> time zones are handled when writing JSON text.
            </summary>
        </member>
        <member name="P:Elastic.Apm.Libraries.Newtonsoft.Json.JsonWriter.StringEscapeHandling">
            <summary>
            Gets or sets how strings are escaped when writing JSON text.
            </summary>
        </member>
        <member name="P:Elastic.Apm.Libraries.Newtonsoft.Json.JsonWriter.FloatFormatHandling">
            <summary>
            Gets or sets how special floating point numbers, e.g. <see cref="F:System.Double.NaN" />,
            <see cref="F:System.Double.PositiveInfinity" /> and <see cref="F:System.Double.NegativeInfinity" />,
            are written to JSON text.
            </summary>
        </member>
        <member name="P:Elastic.Apm.Libraries.Newtonsoft.Json.JsonWriter.DateFormatString">
            <summary>
            Gets or sets how <see cref="T:System.DateTime" /> and <see cref="T:System.DateTimeOffset" /> values are formatted when writing JSON text.
            </summary>
        </member>
        <member name="P:Elastic.Apm.Libraries.Newtonsoft.Json.JsonWriter.Culture">
            <summary>
            Gets or sets the culture used when writing JSON. Defaults to <see cref="P:System.Globalization.CultureInfo.InvariantCulture" />.
            </summary>
        </member>
        <member name="M:Elastic.Apm.Libraries.Newtonsoft.Json.JsonWriter.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Elastic.Apm.Libraries.Newtonsoft.Json.JsonWriter" /> class.
            </summary>
        </member>
        <member name="M:Elastic.Apm.Libraries.Newtonsoft.Json.JsonWriter.Flush">
            <summary>
            Flushes whatever is in the buffer to the destination and also flushes the destination.
            </summary>
        </member>
        <member name="M:Elastic.Apm.Libraries.Newtonsoft.Json.JsonWriter.Close">
            <summary>
            Closes this writer.
            If <see cref="P:Elastic.Apm.Libraries.Newtonsoft.Json.JsonWriter.CloseOutput" /> is set to <c>true</c>, the destination is also closed.
            If <see cref="P:Elastic.Apm.Libraries.Newtonsoft.Json.JsonWriter.AutoCompleteOnClose" /> is set to <c>true</c>, the JSON is auto-completed.
            </summary>
        </member>
        <member name="M:Elastic.Apm.Libraries.Newtonsoft.Json.JsonWriter.WriteStartObject">
            <summary>
            Writes the beginning of a JSON object.
            </summary>
        </member>
        <member name="M:Elastic.Apm.Libraries.Newtonsoft.Json.JsonWriter.WriteEndObject">
            <summary>
            Writes the end of a JSON object.
            </summary>
        </member>
        <member name="M:Elastic.Apm.Libraries.Newtonsoft.Json.JsonWriter.WriteStartArray">
            <summary>
            Writes the beginning of a JSON array.
            </summary>
        </member>
        <member name="M:Elastic.Apm.Libraries.Newtonsoft.Json.JsonWriter.WriteEndArray">
            <summary>
            Writes the end of an array.
            </summary>
        </member>
        <member name="M:Elastic.Apm.Libraries.Newtonsoft.Json.JsonWriter.WriteStartConstructor(System.String)">
            <summary>
            Writes the start of a constructor with the given name.
            </summary>
            <param name="name">The name of the constructor.</param>
        </member>
        <member name="M:Elastic.Apm.Libraries.Newtonsoft.Json.JsonWriter.WriteEndConstructor">
            <summary>
            Writes the end constructor.
            </summary>
        </member>
        <member name="M:Elastic.Apm.Libraries.Newtonsoft.Json.JsonWriter.WritePropertyName(System.String)">
            <summary>
            Writes the property name of a name/value pair of a JSON object.
            </summary>
            <param name="name">The name of the property.</param>
        </member>
        <member name="M:Elastic.Apm.Libraries.Newtonsoft.Json.JsonWriter.WritePropertyName(System.String,System.Boolean)">
            <summary>
            Writes the property name of a name/value pair of a JSON object.
            </summary>
            <param name="name">The name of the property.</param>
            <param name="escape">A flag to indicate whether the text should be escaped when it is written as a JSON property name.</param>
        </member>
        <member name="M:Elastic.Apm.Libraries.Newtonsoft.Json.JsonWriter.WriteEnd">
            <summary>
            Writes the end of the current JSON object or array.
            </summary>
        </member>
        <member name="M:Elastic.Apm.Libraries.Newtonsoft.Json.JsonWriter.WriteToken(Elastic.Apm.Libraries.Newtonsoft.Json.JsonReader)">
            <summary>
            Writes the current <see cref="T:Elastic.Apm.Libraries.Newtonsoft.Json.JsonReader" /> token and its children.
            </summary>
            <param name="reader">The <see cref="T:Elastic.Apm.Libraries.Newtonsoft.Json.JsonReader" /> to read the token from.</param>
        </member>
        <member name="M:Elastic.Apm.Libraries.Newtonsoft.Json.JsonWriter.WriteToken(Elastic.Apm.Libraries.Newtonsoft.Json.JsonReader,System.Boolean)">
            <summary>
            Writes the current <see cref="T:Elastic.Apm.Libraries.Newtonsoft.Json.JsonReader" /> token.
            </summary>
            <param name="reader">The <see cref="T:Elastic.Apm.Libraries.Newtonsoft.Json.JsonReader" /> to read the token from.</param>
            <param name="writeChildren">A flag indicating whether the current token's children should be written.</param>
        </member>
        <member name="M:Elastic.Apm.Libraries.Newtonsoft.Json.JsonWriter.WriteToken(Elastic.Apm.Libraries.Newtonsoft.Json.JsonToken,System.Object)">
            <summary>
            Writes the <see cref="T:Elastic.Apm.Libraries.Newtonsoft.Json.JsonToken" /> token and its value.
            </summary>
            <param name="token">The <see cref="T:Elastic.Apm.Libraries.Newtonsoft.Json.JsonToken" /> to write.</param>
            <param name="value">
            The value to write.
            A value is only required for tokens that have an associated value, e.g. the <see cref="T:System.String" /> property name for
            <see cref="F:Elastic.Apm.Libraries.Newtonsoft.Json.JsonToken.PropertyName" />.
            <c>null</c> can be passed to the method for tokens that don't have a value, e.g. <see cref="F:Elastic.Apm.Libraries.Newtonsoft.Json.JsonToken.StartObject" />.
            </param>
        </member>
        <member name="M:Elastic.Apm.Libraries.Newtonsoft.Json.JsonWriter.WriteToken(Elastic.Apm.Libraries.Newtonsoft.Json.JsonToken)">
            <summary>
            Writes the <see cref="T:Elastic.Apm.Libraries.Newtonsoft.Json.JsonToken" /> token.
            </summary>
            <param name="token">The <see cref="T:Elastic.Apm.Libraries.Newtonsoft.Json.JsonToken" /> to write.</param>
        </member>
        <member name="M:Elastic.Apm.Libraries.Newtonsoft.Json.JsonWriter.WriteEnd(Elastic.Apm.Libraries.Newtonsoft.Json.JsonToken)">
            <summary>
            Writes the specified end token.
            </summary>
            <param name="token">The end token to write.</param>
        </member>
        <member name="M:Elastic.Apm.Libraries.Newtonsoft.Json.JsonWriter.WriteIndent">
            <summary>
            Writes indent characters.
            </summary>
        </member>
        <member name="M:Elastic.Apm.Libraries.Newtonsoft.Json.JsonWriter.WriteValueDelimiter">
            <summary>
            Writes the JSON value delimiter.
            </summary>
        </member>
        <member name="M:Elastic.Apm.Libraries.Newtonsoft.Json.JsonWriter.WriteIndentSpace">
            <summary>
            Writes an indent space.
            </summary>
        </member>
        <member name="M:Elastic.Apm.Libraries.Newtonsoft.Json.JsonWriter.WriteNull">
            <summary>
            Writes a null value.
            </summary>
        </member>
        <member name="M:Elastic.Apm.Libraries.Newtonsoft.Json.JsonWriter.WriteUndefined">
            <summary>
            Writes an undefined value.
            </summary>
        </member>
        <member name="M:Elastic.Apm.Libraries.Newtonsoft.Json.JsonWriter.WriteRaw(System.String)">
            <summary>
            Writes raw JSON without changing the writer's state.
            </summary>
            <param name="json">The raw JSON to write.</param>
        </member>
        <member name="M:Elastic.Apm.Libraries.Newtonsoft.Json.JsonWriter.WriteRawValue(System.String)">
            <summary>
            Writes raw JSON where a value is expected and updates the writer's state.
            </summary>
            <param name="json">The raw JSON to write.</param>
        </member>
        <member name="M:Elastic.Apm.Libraries.Newtonsoft.Json.JsonWriter.WriteValue(System.String)">
            <summary>
            Writes a <see cref="T:System.String" /> value.
            </summary>
            <param name="value">The <see cref="T:System.String" /> value to write.</param>
        </member>
        <member name="M:Elastic.Apm.Libraries.Newtonsoft.Json.JsonWriter.WriteValue(System.Int32)">
            <summary>
            Writes a <see cref="T:System.Int32" /> value.
            </summary>
            <param name="value">The <see cref="T:System.Int32" /> value to write.</param>
        </member>
        <member name="M:Elastic.Apm.Libraries.Newtonsoft.Json.JsonWriter.WriteValue(System.UInt32)">
            <summary>
            Writes a <see cref="T:System.UInt32" /> value.
            </summary>
            <param name="value">The <see cref="T:System.UInt32" /> value to write.</param>
        </member>
        <member name="M:Elastic.Apm.Libraries.Newtonsoft.Json.JsonWriter.WriteValue(System.Int64)">
            <summary>
            Writes a <see cref="T:System.Int64" /> value.
            </summary>
            <param name="value">The <see cref="T:System.Int64" /> value to write.</param>
        </member>
        <member name="M:Elastic.Apm.Libraries.Newtonsoft.Json.JsonWriter.WriteValue(System.UInt64)">
            <summary>
            Writes a <see cref="T:System.UInt64" /> value.
            </summary>
            <param name="value">The <see cref="T:System.UInt64" /> value to write.</param>
        </member>
        <member name="M:Elastic.Apm.Libraries.Newtonsoft.Json.JsonWriter.WriteValue(System.Single)">
            <summary>
            Writes a <see cref="T:System.Single" /> value.
            </summary>
            <param name="value">The <see cref="T:System.Single" /> value to write.</param>
        </member>
        <member name="M:Elastic.Apm.Libraries.Newtonsoft.Json.JsonWriter.WriteValue(System.Double)">
            <summary>
            Writes a <see cref="T:System.Double" /> value.
            </summary>
            <param name="value">The <see cref="T:System.Double" /> value to write.</param>
        </member>
        <member name="M:Elastic.Apm.Libraries.Newtonsoft.Json.JsonWriter.WriteValue(System.Boolean)">
            <summary>
            Writes a <see cref="T:System.Boolean" /> value.
            </summary>
            <param name="value">The <see cref="T:System.Boolean" /> value to write.</param>
        </member>
        <member name="M:Elastic.Apm.Libraries.Newtonsoft.Json.JsonWriter.WriteValue(System.Int16)">
            <summary>
            Writes a <see cref="T:System.Int16" /> value.
            </summary>
            <param name="value">The <see cref="T:System.Int16" /> value to write.</param>
        </member>
        <member name="M:Elastic.Apm.Libraries.Newtonsoft.Json.JsonWriter.WriteValue(System.UInt16)">
            <summary>
            Writes a <see cref="T:System.UInt16" /> value.
            </summary>
            <param name="value">The <see cref="T:System.UInt16" /> value to write.</param>
        </member>
        <member name="M:Elastic.Apm.Libraries.Newtonsoft.Json.JsonWriter.WriteValue(System.Char)">
            <summary>
            Writes a <see cref="T:System.Char" /> value.
            </summary>
            <param name="value">The <see cref="T:System.Char" /> value to write.</param>
        </member>
        <member name="M:Elastic.Apm.Libraries.Newtonsoft.Json.JsonWriter.WriteValue(System.Byte)">
            <summary>
            Writes a <see cref="T:System.Byte" /> value.
            </summary>
            <param name="value">The <see cref="T:System.Byte" /> value to write.</param>
        </member>
        <member name="M:Elastic.Apm.Libraries.Newtonsoft.Json.JsonWriter.WriteValue(System.SByte)">
            <summary>
            Writes a <see cref="T:System.SByte" /> value.
            </summary>
            <param name="value">The <see cref="T:System.SByte" /> value to write.</param>
        </member>
        <member name="M:Elastic.Apm.Libraries.Newtonsoft.Json.JsonWriter.WriteValue(System.Decimal)">
            <summary>
            Writes a <see cref="T:System.Decimal" /> value.
            </summary>
            <param name="value">The <see cref="T:System.Decimal" /> value to write.</param>
        </member>
        <member name="M:Elastic.Apm.Libraries.Newtonsoft.Json.JsonWriter.WriteValue(System.DateTime)">
            <summary>
            Writes a <see cref="T:System.DateTime" /> value.
            </summary>
            <param name="value">The <see cref="T:System.DateTime" /> value to write.</param>
        </member>
        <member name="M:Elastic.Apm.Libraries.Newtonsoft.Json.JsonWriter.WriteValue(System.DateTimeOffset)">
            <summary>
            Writes a <see cref="T:System.DateTimeOffset"/> value.
            </summary>
            <param name="value">The <see cref="T:System.DateTimeOffset"/> value to write.</param>
        </member>
        <member name="M:Elastic.Apm.Libraries.Newtonsoft.Json.JsonWriter.WriteValue(System.Guid)">
            <summary>
            Writes a <see cref="T:System.Guid" /> value.
            </summary>
            <param name="value">The <see cref="T:System.Guid" /> value to write.</param>
        </member>
        <member name="M:Elastic.Apm.Libraries.Newtonsoft.Json.JsonWriter.WriteValue(System.TimeSpan)">
            <summary>
            Writes a <see cref="T:System.TimeSpan" /> value.
            </summary>
            <param name="value">The <see cref="T:System.TimeSpan" /> value to write.</param>
        </member>
        <member name="M:Elastic.Apm.Libraries.Newtonsoft.Json.JsonWriter.WriteValue(System.Nullable{System.Int32})">
            <summary>
            Writes a <see cref="T:System.Nullable`1" /> of <see cref="T:System.Int32" /> value.
            </summary>
            <param name="value">The <see cref="T:System.Nullable`1" /> of <see cref="T:System.Int32" /> value to write.</param>
        </member>
        <member name="M:Elastic.Apm.Libraries.Newtonsoft.Json.JsonWriter.WriteValue(System.Nullable{System.UInt32})">
            <summary>
            Writes a <see cref="T:System.Nullable`1" /> of <see cref="T:System.UInt32" /> value.
            </summary>
            <param name="value">The <see cref="T:System.Nullable`1" /> of <see cref="T:System.UInt32" /> value to write.</param>
        </member>
        <member name="M:Elastic.Apm.Libraries.Newtonsoft.Json.JsonWriter.WriteValue(System.Nullable{System.Int64})">
            <summary>
            Writes a <see cref="T:System.Nullable`1" /> of <see cref="T:System.Int64" /> value.
            </summary>
            <param name="value">The <see cref="T:System.Nullable`1" /> of <see cref="T:System.Int64" /> value to write.</param>
        </member>
        <member name="M:Elastic.Apm.Libraries.Newtonsoft.Json.JsonWriter.WriteValue(System.Nullable{System.UInt64})">
            <summary>
            Writes a <see cref="T:System.Nullable`1" /> of <see cref="T:System.UInt64" /> value.
            </summary>
            <param name="value">The <see cref="T:System.Nullable`1" /> of <see cref="T:System.UInt64" /> value to write.</param>
        </member>
        <member name="M:Elastic.Apm.Libraries.Newtonsoft.Json.JsonWriter.WriteValue(System.Nullable{System.Single})">
            <summary>
            Writes a <see cref="T:System.Nullable`1" /> of <see cref="T:System.Single" /> value.
            </summary>
            <param name="value">The <see cref="T:System.Nullable`1" /> of <see cref="T:System.Single" /> value to write.</param>
        </member>
        <member name="M:Elastic.Apm.Libraries.Newtonsoft.Json.JsonWriter.WriteValue(System.Nullable{System.Double})">
            <summary>
            Writes a <see cref="T:System.Nullable`1" /> of <see cref="T:System.Double" /> value.
            </summary>
            <param name="value">The <see cref="T:System.Nullable`1" /> of <see cref="T:System.Double" /> value to write.</param>
        </member>
        <member name="M:Elastic.Apm.Libraries.Newtonsoft.Json.JsonWriter.WriteValue(System.Nullable{System.Boolean})">
            <summary>
            Writes a <see cref="T:System.Nullable`1" /> of <see cref="T:System.Boolean" /> value.
            </summary>
            <param name="value">The <see cref="T:System.Nullable`1" /> of <see cref="T:System.Boolean" /> value to write.</param>
        </member>
        <member name="M:Elastic.Apm.Libraries.Newtonsoft.Json.JsonWriter.WriteValue(System.Nullable{System.Int16})">
            <summary>
            Writes a <see cref="T:System.Nullable`1" /> of <see cref="T:System.Int16" /> value.
            </summary>
            <param name="value">The <see cref="T:System.Nullable`1" /> of <see cref="T:System.Int16" /> value to write.</param>
        </member>
        <member name="M:Elastic.Apm.Libraries.Newtonsoft.Json.JsonWriter.WriteValue(System.Nullable{System.UInt16})">
            <summary>
            Writes a <see cref="T:System.Nullable`1" /> of <see cref="T:System.UInt16" /> value.
            </summary>
            <param name="value">The <see cref="T:System.Nullable`1" /> of <see cref="T:System.UInt16" /> value to write.</param>
        </member>
        <member name="M:Elastic.Apm.Libraries.Newtonsoft.Json.JsonWriter.WriteValue(System.Nullable{System.Char})">
            <summary>
            Writes a <see cref="T:System.Nullable`1" /> of <see cref="T:System.Char" /> value.
            </summary>
            <param name="value">The <see cref="T:System.Nullable`1" /> of <see cref="T:System.Char" /> value to write.</param>
        </member>
        <member name="M:Elastic.Apm.Libraries.Newtonsoft.Json.JsonWriter.WriteValue(System.Nullable{System.Byte})">
            <summary>
            Writes a <see cref="T:System.Nullable`1" /> of <see cref="T:System.Byte" /> value.
            </summary>
            <param name="value">The <see cref="T:System.Nullable`1" /> of <see cref="T:System.Byte" /> value to write.</param>
        </member>
        <member name="M:Elastic.Apm.Libraries.Newtonsoft.Json.JsonWriter.WriteValue(System.Nullable{System.SByte})">
            <summary>
            Writes a <see cref="T:System.Nullable`1" /> of <see cref="T:System.SByte" /> value.
            </summary>
            <param name="value">The <see cref="T:System.Nullable`1" /> of <see cref="T:System.SByte" /> value to write.</param>
        </member>
        <member name="M:Elastic.Apm.Libraries.Newtonsoft.Json.JsonWriter.WriteValue(System.Nullable{System.Decimal})">
            <summary>
            Writes a <see cref="T:System.Nullable`1" /> of <see cref="T:System.Decimal" /> value.
            </summary>
            <param name="value">The <see cref="T:System.Nullable`1" /> of <see cref="T:System.Decimal" /> value to write.</param>
        </member>
        <member name="M:Elastic.Apm.Libraries.Newtonsoft.Json.JsonWriter.WriteValue(System.Nullable{System.DateTime})">
            <summary>
            Writes a <see cref="T:System.Nullable`1" /> of <see cref="T:System.DateTime" /> value.
            </summary>
            <param name="value">The <see cref="T:System.Nullable`1" /> of <see cref="T:System.DateTime" /> value to write.</param>
        </member>
        <member name="M:Elastic.Apm.Libraries.Newtonsoft.Json.JsonWriter.WriteValue(System.Nullable{System.DateTimeOffset})">
            <summary>
            Writes a <see cref="T:System.Nullable`1"/> of <see cref="T:System.DateTimeOffset"/> value.
            </summary>
            <param name="value">The <see cref="T:System.Nullable`1"/> of <see cref="T:System.DateTimeOffset"/> value to write.</param>
        </member>
        <member name="M:Elastic.Apm.Libraries.Newtonsoft.Json.JsonWriter.WriteValue(System.Nullable{System.Guid})">
            <summary>
            Writes a <see cref="T:System.Nullable`1" /> of <see cref="T:System.Guid" /> value.
            </summary>
            <param name="value">The <see cref="T:System.Nullable`1" /> of <see cref="T:System.Guid" /> value to write.</param>
        </member>
        <member name="M:Elastic.Apm.Libraries.Newtonsoft.Json.JsonWriter.WriteValue(System.Nullable{System.TimeSpan})">
            <summary>
            Writes a <see cref="T:System.Nullable`1" /> of <see cref="T:System.TimeSpan" /> value.
            </summary>
            <param name="value">The <see cref="T:System.Nullable`1" /> of <see cref="T:System.TimeSpan" /> value to write.</param>
        </member>
        <member name="M:Elastic.Apm.Libraries.Newtonsoft.Json.JsonWriter.WriteValue(System.Byte[])">
            <summary>
            Writes a <see cref="T:System.Byte" />[] value.
            </summary>
            <param name="value">The <see cref="T:System.Byte" />[] value to write.</param>
        </member>
        <member name="M:Elastic.Apm.Libraries.Newtonsoft.Json.JsonWriter.WriteValue(System.Uri)">
            <summary>
            Writes a <see cref="T:System.Uri" /> value.
            </summary>
            <param name="value">The <see cref="T:System.Uri" /> value to write.</param>
        </member>
        <member name="M:Elastic.Apm.Libraries.Newtonsoft.Json.JsonWriter.WriteValue(System.Object)">
            <summary>
            Writes a <see cref="T:System.Object" /> value.
            An error will raised if the value cannot be written as a single JSON token.
            </summary>
            <param name="value">The <see cref="T:System.Object" /> value to write.</param>
        </member>
        <member name="M:Elastic.Apm.Libraries.Newtonsoft.Json.JsonWriter.WriteComment(System.String)">
            <summary>
            Writes a comment <c>/*...*/</c> containing the specified text.
            </summary>
            <param name="text">Text to place inside the comment.</param>
        </member>
        <member name="M:Elastic.Apm.Libraries.Newtonsoft.Json.JsonWriter.WriteWhitespace(System.String)">
            <summary>
            Writes the given white space.
            </summary>
            <param name="ws">The string of white space characters.</param>
        </member>
        <member name="M:Elastic.Apm.Libraries.Newtonsoft.Json.JsonWriter.Dispose(System.Boolean)">
            <summary>
            Releases unmanaged and - optionally - managed resources.
            </summary>
            <param name="disposing">
            <c>true</c> to release both managed and unmanaged resources; <c>false</c> to release only
            unmanaged resources.
            </param>
        </member>
        <member name="M:Elastic.Apm.Libraries.Newtonsoft.Json.JsonWriter.SetWriteState(Elastic.Apm.Libraries.Newtonsoft.Json.JsonToken,System.Object)">
            <summary>
            Sets the state of the <see cref="T:Elastic.Apm.Libraries.Newtonsoft.Json.JsonWriter" />.
            </summary>
            <param name="token">The <see cref="T:Elastic.Apm.Libraries.Newtonsoft.Json.JsonToken" /> being written.</param>
            <param name="value">The value being written.</param>
        </member>
        <member name="T:Elastic.Apm.Libraries.Newtonsoft.Json.JsonWriterException">
            <summary>
            The exception thrown when an error occurs while writing JSON text.
            </summary>
        </member>
        <member name="P:Elastic.Apm.Libraries.Newtonsoft.Json.JsonWriterException.Path">
            <summary>
            Gets the path to the JSON where the error occurred.
            </summary>
            <value>The path to the JSON where the error occurred.</value>
        </member>
        <member name="M:Elastic.Apm.Libraries.Newtonsoft.Json.JsonWriterException.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Elastic.Apm.Libraries.Newtonsoft.Json.JsonWriterException" /> class.
            </summary>
        </member>
        <member name="M:Elastic.Apm.Libraries.Newtonsoft.Json.JsonWriterException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Elastic.Apm.Libraries.Newtonsoft.Json.JsonWriterException" /> class
            with a specified error message.
            </summary>
            <param name="message">The error message that explains the reason for the exception.</param>
        </member>
        <member name="M:Elastic.Apm.Libraries.Newtonsoft.Json.JsonWriterException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:Elastic.Apm.Libraries.Newtonsoft.Json.JsonWriterException" /> class
            with a specified error message and a reference to the inner exception that is the cause of this exception.
            </summary>
            <param name="message">The error message that explains the reason for the exception.</param>
            <param name="innerException">
            The exception that is the cause of the current exception, or <c>null</c> if no inner
            exception is specified.
            </param>
        </member>
        <member name="M:Elastic.Apm.Libraries.Newtonsoft.Json.JsonWriterException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the <see cref="T:Elastic.Apm.Libraries.Newtonsoft.Json.JsonWriterException"/> class.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo"/> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext"/> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info"/> parameter is <c>null</c>.</exception>
            <exception cref="T:System.Runtime.Serialization.SerializationException">The class name is <c>null</c> or <see cref="P:System.Exception.HResult"/> is zero (0).</exception>
        </member>
        <member name="M:Elastic.Apm.Libraries.Newtonsoft.Json.JsonWriterException.#ctor(System.String,System.String,System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:Elastic.Apm.Libraries.Newtonsoft.Json.JsonWriterException" /> class
            with a specified error message, JSON path and a reference to the inner exception that is the cause of this exception.
            </summary>
            <param name="message">The error message that explains the reason for the exception.</param>
            <param name="path">The path to the JSON where the error occurred.</param>
            <param name="innerException">
            The exception that is the cause of the current exception, or <c>null</c> if no inner
            exception is specified.
            </param>
        </member>
        <member name="T:Elastic.Apm.Libraries.Newtonsoft.Json.Linq.CommentHandling">
            <summary>
            Specifies how JSON comments are handled when loading JSON.
            </summary>
        </member>
        <member name="F:Elastic.Apm.Libraries.Newtonsoft.Json.Linq.CommentHandling.Ignore">
            <summary>
            Ignore comments.
            </summary>
        </member>
        <member name="F:Elastic.Apm.Libraries.Newtonsoft.Json.Linq.CommentHandling.Load">
            <summary>
            Load comments as a <see cref="T:Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JValue" /> with type <see cref="F:Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JTokenType.Comment" />.
            </summary>
        </member>
        <member name="T:Elastic.Apm.Libraries.Newtonsoft.Json.Linq.DuplicatePropertyNameHandling">
            <summary>
            Specifies how duplicate property names are handled when loading JSON.
            </summary>
        </member>
        <member name="F:Elastic.Apm.Libraries.Newtonsoft.Json.Linq.DuplicatePropertyNameHandling.Replace">
            <summary>
            Replace the existing value when there is a duplicate property. The value of the last property in the JSON object will
            be used.
            </summary>
        </member>
        <member name="F:Elastic.Apm.Libraries.Newtonsoft.Json.Linq.DuplicatePropertyNameHandling.Ignore">
            <summary>
            Ignore the new value when there is a duplicate property. The value of the first property in the JSON object will be
            used.
            </summary>
        </member>
        <member name="F:Elastic.Apm.Libraries.Newtonsoft.Json.Linq.DuplicatePropertyNameHandling.Error">
            <summary>
            Throw a <see cref="T:Elastic.Apm.Libraries.Newtonsoft.Json.JsonReaderException" /> when a duplicate property is encountered.
            </summary>
        </member>
        <member name="T:Elastic.Apm.Libraries.Newtonsoft.Json.Linq.Extensions">
            <summary>
            Contains the LINQ to JSON extension methods.
            </summary>
        </member>
        <member name="M:Elastic.Apm.Libraries.Newtonsoft.Json.Linq.Extensions.Ancestors``1(System.Collections.Generic.IEnumerable{``0})">
            <summary>
            Returns a collection of tokens that contains the ancestors of every token in the source collection.
            </summary>
            <typeparam name="T">The type of the objects in source, constrained to <see cref="T:Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JToken" />.</typeparam>
            <param name="source">An <see cref="T:System.Collections.Generic.IEnumerable`1" /> of <see cref="T:Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JToken" /> that contains the source collection.</param>
            <returns>
            An <see cref="T:System.Collections.Generic.IEnumerable`1" /> of <see cref="T:Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JToken" /> that contains the ancestors of every token in the
            source collection.
            </returns>
        </member>
        <member name="M:Elastic.Apm.Libraries.Newtonsoft.Json.Linq.Extensions.AncestorsAndSelf``1(System.Collections.Generic.IEnumerable{``0})">
            <summary>
            Returns a collection of tokens that contains every token in the source collection, and the ancestors of every token in
            the source collection.
            </summary>
            <typeparam name="T">The type of the objects in source, constrained to <see cref="T:Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JToken" />.</typeparam>
            <param name="source">An <see cref="T:System.Collections.Generic.IEnumerable`1" /> of <see cref="T:Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JToken" /> that contains the source collection.</param>
            <returns>
            An <see cref="T:System.Collections.Generic.IEnumerable`1" /> of <see cref="T:Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JToken" /> that contains every token in the source collection,
            the ancestors of every token in the source collection.
            </returns>
        </member>
        <member name="M:Elastic.Apm.Libraries.Newtonsoft.Json.Linq.Extensions.Descendants``1(System.Collections.Generic.IEnumerable{``0})">
            <summary>
            Returns a collection of tokens that contains the descendants of every token in the source collection.
            </summary>
            <typeparam name="T">The type of the objects in source, constrained to <see cref="T:Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JContainer" />.</typeparam>
            <param name="source">An <see cref="T:System.Collections.Generic.IEnumerable`1" /> of <see cref="T:Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JToken" /> that contains the source collection.</param>
            <returns>
            An <see cref="T:System.Collections.Generic.IEnumerable`1" /> of <see cref="T:Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JToken" /> that contains the descendants of every token in the
            source collection.
            </returns>
        </member>
        <member name="M:Elastic.Apm.Libraries.Newtonsoft.Json.Linq.Extensions.DescendantsAndSelf``1(System.Collections.Generic.IEnumerable{``0})">
            <summary>
            Returns a collection of tokens that contains every token in the source collection, and the descendants of every token
            in the source collection.
            </summary>
            <typeparam name="T">The type of the objects in source, constrained to <see cref="T:Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JContainer" />.</typeparam>
            <param name="source">An <see cref="T:System.Collections.Generic.IEnumerable`1" /> of <see cref="T:Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JToken" /> that contains the source collection.</param>
            <returns>
            An <see cref="T:System.Collections.Generic.IEnumerable`1" /> of <see cref="T:Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JToken" /> that contains every token in the source collection,
            and the descendants of every token in the source collection.
            </returns>
        </member>
        <member name="M:Elastic.Apm.Libraries.Newtonsoft.Json.Linq.Extensions.Properties(System.Collections.Generic.IEnumerable{Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JObject})">
            <summary>
            Returns a collection of child properties of every object in the source collection.
            </summary>
            <param name="source">An <see cref="T:System.Collections.Generic.IEnumerable`1" /> of <see cref="T:Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JObject" /> that contains the source collection.</param>
            <returns>
            An <see cref="T:System.Collections.Generic.IEnumerable`1" /> of <see cref="T:Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JProperty" /> that contains the properties of every object in
            the source collection.
            </returns>
        </member>
        <member name="M:Elastic.Apm.Libraries.Newtonsoft.Json.Linq.Extensions.Values(System.Collections.Generic.IEnumerable{Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JToken},System.Object)">
            <summary>
            Returns a collection of child values of every object in the source collection with the given key.
            </summary>
            <param name="source">An <see cref="T:System.Collections.Generic.IEnumerable`1" /> of <see cref="T:Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JToken" /> that contains the source collection.</param>
            <param name="key">The token key.</param>
            <returns>
            An <see cref="T:System.Collections.Generic.IEnumerable`1" /> of <see cref="T:Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JToken" /> that contains the values of every token in the
            source collection with the given key.
            </returns>
        </member>
        <member name="M:Elastic.Apm.Libraries.Newtonsoft.Json.Linq.Extensions.Values(System.Collections.Generic.IEnumerable{Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JToken})">
            <summary>
            Returns a collection of child values of every object in the source collection.
            </summary>
            <param name="source">An <see cref="T:System.Collections.Generic.IEnumerable`1" /> of <see cref="T:Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JToken" /> that contains the source collection.</param>
            <returns>
            An <see cref="T:System.Collections.Generic.IEnumerable`1" /> of <see cref="T:Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JToken" /> that contains the values of every token in the
            source collection.
            </returns>
        </member>
        <member name="M:Elastic.Apm.Libraries.Newtonsoft.Json.Linq.Extensions.Values``1(System.Collections.Generic.IEnumerable{Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JToken},System.Object)">
            <summary>
            Returns a collection of converted child values of every object in the source collection with the given key.
            </summary>
            <typeparam name="U">The type to convert the values to.</typeparam>
            <param name="source">An <see cref="T:System.Collections.Generic.IEnumerable`1" /> of <see cref="T:Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JToken" /> that contains the source collection.</param>
            <param name="key">The token key.</param>
            <returns>
            An <see cref="T:System.Collections.Generic.IEnumerable`1" /> that contains the converted values of every token in the source collection
            with the given key.
            </returns>
        </member>
        <member name="M:Elastic.Apm.Libraries.Newtonsoft.Json.Linq.Extensions.Values``1(System.Collections.Generic.IEnumerable{Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JToken})">
            <summary>
            Returns a collection of converted child values of every object in the source collection.
            </summary>
            <typeparam name="U">The type to convert the values to.</typeparam>
            <param name="source">An <see cref="T:System.Collections.Generic.IEnumerable`1" /> of <see cref="T:Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JToken" /> that contains the source collection.</param>
            <returns>An <see cref="T:System.Collections.Generic.IEnumerable`1" /> that contains the converted values of every token in the source collection.</returns>
        </member>
        <member name="M:Elastic.Apm.Libraries.Newtonsoft.Json.Linq.Extensions.Value``1(System.Collections.Generic.IEnumerable{Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JToken})">
            <summary>
            Converts the value.
            </summary>
            <typeparam name="U">The type to convert the value to.</typeparam>
            <param name="value">A <see cref="T:Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JToken" /> cast as a <see cref="T:System.Collections.Generic.IEnumerable`1" /> of <see cref="T:Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JToken" />.</param>
            <returns>A converted value.</returns>
        </member>
        <member name="M:Elastic.Apm.Libraries.Newtonsoft.Json.Linq.Extensions.Value``2(System.Collections.Generic.IEnumerable{``0})">
            <summary>
            Converts the value.
            </summary>
            <typeparam name="T">The source collection type.</typeparam>
            <typeparam name="U">The type to convert the value to.</typeparam>
            <param name="value">A <see cref="T:Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JToken" /> cast as a <see cref="T:System.Collections.Generic.IEnumerable`1" /> of <see cref="T:Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JToken" />.</param>
            <returns>A converted value.</returns>
        </member>
        <member name="M:Elastic.Apm.Libraries.Newtonsoft.Json.Linq.Extensions.Children``1(System.Collections.Generic.IEnumerable{``0})">
            <summary>
            Returns a collection of child tokens of every array in the source collection.
            </summary>
            <typeparam name="T">The source collection type.</typeparam>
            <param name="source">An <see cref="T:System.Collections.Generic.IEnumerable`1" /> of <see cref="T:Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JToken" /> that contains the source collection.</param>
            <returns>
            An <see cref="T:System.Collections.Generic.IEnumerable`1" /> of <see cref="T:Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JToken" /> that contains the values of every token in the
            source collection.
            </returns>
        </member>
        <member name="M:Elastic.Apm.Libraries.Newtonsoft.Json.Linq.Extensions.Children``2(System.Collections.Generic.IEnumerable{``0})">
            <summary>
            Returns a collection of converted child tokens of every array in the source collection.
            </summary>
            <param name="source">An <see cref="T:System.Collections.Generic.IEnumerable`1" /> of <see cref="T:Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JToken" /> that contains the source collection.</param>
            <typeparam name="U">The type to convert the values to.</typeparam>
            <typeparam name="T">The source collection type.</typeparam>
            <returns>An <see cref="T:System.Collections.Generic.IEnumerable`1" /> that contains the converted values of every token in the source collection.</returns>
        </member>
        <member name="M:Elastic.Apm.Libraries.Newtonsoft.Json.Linq.Extensions.AsJEnumerable(System.Collections.Generic.IEnumerable{Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JToken})">
            <summary>
            Returns the input typed as <see cref="T:Elastic.Apm.Libraries.Newtonsoft.Json.Linq.IJEnumerable`1" />.
            </summary>
            <param name="source">An <see cref="T:System.Collections.Generic.IEnumerable`1" /> of <see cref="T:Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JToken" /> that contains the source collection.</param>
            <returns>The input typed as <see cref="T:Elastic.Apm.Libraries.Newtonsoft.Json.Linq.IJEnumerable`1" />.</returns>
        </member>
        <member name="M:Elastic.Apm.Libraries.Newtonsoft.Json.Linq.Extensions.AsJEnumerable``1(System.Collections.Generic.IEnumerable{``0})">
            <summary>
            Returns the input typed as <see cref="T:Elastic.Apm.Libraries.Newtonsoft.Json.Linq.IJEnumerable`1" />.
            </summary>
            <typeparam name="T">The source collection type.</typeparam>
            <param name="source">An <see cref="T:System.Collections.Generic.IEnumerable`1" /> of <see cref="T:Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JToken" /> that contains the source collection.</param>
            <returns>The input typed as <see cref="T:Elastic.Apm.Libraries.Newtonsoft.Json.Linq.IJEnumerable`1" />.</returns>
        </member>
        <member name="T:Elastic.Apm.Libraries.Newtonsoft.Json.Linq.IJEnumerable`1">
            <summary>
            Represents a collection of <see cref="T:Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JToken" /> objects.
            </summary>
            <typeparam name="T">The type of token.</typeparam>
        </member>
        <member name="P:Elastic.Apm.Libraries.Newtonsoft.Json.Linq.IJEnumerable`1.Item(System.Object)">
            <summary>
            Gets the <see cref="T:Elastic.Apm.Libraries.Newtonsoft.Json.Linq.IJEnumerable`1" /> of <see cref="T:Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JToken" /> with the specified key.
            </summary>
            <value></value>
        </member>
        <member name="T:Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JArray">
            <summary>
            Represents a JSON array.
            </summary>
            <example>
              <code lang="cs" source="..\Src\Newtonsoft.Json.Tests\Documentation\LinqToJsonTests.cs"
                  region="LinqToJsonCreateParseArray" title="Parsing a JSON Array from Text" />
            </example>
        </member>
        <member name="M:Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JArray.WriteToAsync(Elastic.Apm.Libraries.Newtonsoft.Json.JsonWriter,System.Threading.CancellationToken,Elastic.Apm.Libraries.Newtonsoft.Json.JsonConverter[])">
            <summary>
            Writes this token to a <see cref="T:Elastic.Apm.Libraries.Newtonsoft.Json.JsonWriter"/> asynchronously.
            </summary>
            <param name="writer">A <see cref="T:Elastic.Apm.Libraries.Newtonsoft.Json.JsonWriter"/> into which this method will write.</param>
            <param name="cancellationToken">The token to monitor for cancellation requests.</param>
            <param name="converters">A collection of <see cref="T:Elastic.Apm.Libraries.Newtonsoft.Json.JsonConverter"/> which will be used when writing the token.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> that represents the asynchronous write operation.</returns>
        </member>
        <member name="M:Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JArray.LoadAsync(Elastic.Apm.Libraries.Newtonsoft.Json.JsonReader,System.Threading.CancellationToken)">
            <summary>
            Asynchronously loads a <see cref="T:Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JArray"/> from a <see cref="T:Elastic.Apm.Libraries.Newtonsoft.Json.JsonReader"/>.
            </summary>
            <param name="reader">A <see cref="T:Elastic.Apm.Libraries.Newtonsoft.Json.JsonReader"/> that will be read for the content of the <see cref="T:Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JArray"/>.
            If this is <c>null</c>, default load settings will be used.</param>
            <param name="cancellationToken">The token to monitor for cancellation requests. The default value is <see cref="P:System.Threading.CancellationToken.None"/>.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task`1"/> representing the asynchronous load. The <see cref="P:System.Threading.Tasks.Task`1.Result"/> property contains the JSON that was read from the specified <see cref="T:Elastic.Apm.Libraries.Newtonsoft.Json.JsonReader"/>.</returns>
        </member>
        <member name="M:Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JArray.LoadAsync(Elastic.Apm.Libraries.Newtonsoft.Json.JsonReader,Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JsonLoadSettings,System.Threading.CancellationToken)">
            <summary>
            Asynchronously loads a <see cref="T:Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JArray"/> from a <see cref="T:Elastic.Apm.Libraries.Newtonsoft.Json.JsonReader"/>.
            </summary>
            <param name="reader">A <see cref="T:Elastic.Apm.Libraries.Newtonsoft.Json.JsonReader"/> that will be read for the content of the <see cref="T:Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JArray"/>.</param>
            <param name="settings">The <see cref="T:Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JsonLoadSettings"/> used to load the JSON.
            If this is <c>null</c>, default load settings will be used.</param>
            <param name="cancellationToken">The token to monitor for cancellation requests. The default value is <see cref="P:System.Threading.CancellationToken.None"/>.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task`1"/> representing the asynchronous load. The <see cref="P:System.Threading.Tasks.Task`1.Result"/> property contains the JSON that was read from the specified <see cref="T:Elastic.Apm.Libraries.Newtonsoft.Json.JsonReader"/>.</returns>
        </member>
        <member name="M:Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JArray.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JArray" /> class.
            </summary>
        </member>
        <member name="M:Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JArray.#ctor(Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JArray)">
            <summary>
            Initializes a new instance of the <see cref="T:Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JArray" /> class from another <see cref="T:Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JArray" /> object.
            </summary>
            <param name="other">A <see cref="T:Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JArray" /> object to copy from.</param>
        </member>
        <member name="M:Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JArray.#ctor(System.Object[])">
            <summary>
            Initializes a new instance of the <see cref="T:Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JArray" /> class with the specified content.
            </summary>
            <param name="content">The contents of the array.</param>
        </member>
        <member name="M:Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JArray.#ctor(System.Object)">
            <summary>
            Initializes a new instance of the <see cref="T:Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JArray" /> class with the specified content.
            </summary>
            <param name="content">The contents of the array.</param>
        </member>
        <member name="P:Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JArray.ChildrenTokens">
            <summary>
            Gets the container's children tokens.
            </summary>
            <value>The container's children tokens.</value>
        </member>
        <member name="P:Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JArray.IsReadOnly">
            <summary>
            Gets a value indicating whether the <see cref="T:Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JArray" /> is read-only.
            </summary>
            <returns><c>true</c> if the <see cref="T:Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JArray" /> is read-only; otherwise, <c>false</c>.</returns>
        </member>
        <member name="P:Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JArray.Item(System.Object)">
            <summary>
            Gets the <see cref="T:Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JToken" /> with the specified key.
            </summary>
            <value>The <see cref="T:Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JToken" /> with the specified key.</value>
        </member>
        <member name="P:Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JArray.Item(System.Int32)">
            <summary>
            Gets or sets the <see cref="T:Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JToken" /> at the specified index.
            </summary>
            <value></value>
        </member>
        <member name="P:Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JArray.Type">
            <summary>
            Gets the node type for this <see cref="T:Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JToken" />.
            </summary>
            <value>The type.</value>
        </member>
        <member name="M:Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JArray.Load(Elastic.Apm.Libraries.Newtonsoft.Json.JsonReader)">
            <summary>
            Loads an <see cref="T:Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JArray" /> from a <see cref="T:Elastic.Apm.Libraries.Newtonsoft.Json.JsonReader" />.
            </summary>
            <param name="reader">A <see cref="T:Elastic.Apm.Libraries.Newtonsoft.Json.JsonReader" /> that will be read for the content of the <see cref="T:Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JArray" />.</param>
            <returns>A <see cref="T:Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JArray" /> that contains the JSON that was read from the specified <see cref="T:Elastic.Apm.Libraries.Newtonsoft.Json.JsonReader" />.</returns>
        </member>
        <member name="M:Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JArray.Load(Elastic.Apm.Libraries.Newtonsoft.Json.JsonReader,Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JsonLoadSettings)">
            <summary>
            Loads an <see cref="T:Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JArray" /> from a <see cref="T:Elastic.Apm.Libraries.Newtonsoft.Json.JsonReader" />.
            </summary>
            <param name="reader">A <see cref="T:Elastic.Apm.Libraries.Newtonsoft.Json.JsonReader" /> that will be read for the content of the <see cref="T:Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JArray" />.</param>
            <param name="settings">
            The <see cref="T:Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JsonLoadSettings" /> used to load the JSON.
            If this is <c>null</c>, default load settings will be used.
            </param>
            <returns>A <see cref="T:Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JArray" /> that contains the JSON that was read from the specified <see cref="T:Elastic.Apm.Libraries.Newtonsoft.Json.JsonReader" />.</returns>
        </member>
        <member name="M:Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JArray.Parse(System.String)">
            <summary>
            Load a <see cref="T:Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JArray" /> from a string that contains JSON.
            </summary>
            <param name="json">A <see cref="T:System.String" /> that contains JSON.</param>
            <returns>A <see cref="T:Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JArray" /> populated from the string that contains JSON.</returns>
            <example>
              <code lang="cs" source="..\Src\Newtonsoft.Json.Tests\Documentation\LinqToJsonTests.cs"
                  region="LinqToJsonCreateParseArray" title="Parsing a JSON Array from Text" />
            </example>
        </member>
        <member name="M:Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JArray.Parse(System.String,Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JsonLoadSettings)">
            <summary>
            Load a <see cref="T:Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JArray" /> from a string that contains JSON.
            </summary>
            <param name="json">A <see cref="T:System.String" /> that contains JSON.</param>
            <param name="settings">
            The <see cref="T:Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JsonLoadSettings" /> used to load the JSON.
            If this is <c>null</c>, default load settings will be used.
            </param>
            <returns>A <see cref="T:Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JArray" /> populated from the string that contains JSON.</returns>
            <example>
              <code lang="cs" source="..\Src\Newtonsoft.Json.Tests\Documentation\LinqToJsonTests.cs"
                  region="LinqToJsonCreateParseArray" title="Parsing a JSON Array from Text" />
            </example>
        </member>
        <member name="M:Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JArray.FromObject(System.Object)">
            <summary>
            Creates a <see cref="T:Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JArray" /> from an object.
            </summary>
            <param name="o">The object that will be used to create <see cref="T:Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JArray" />.</param>
            <returns>A <see cref="T:Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JArray" /> with the values of the specified object.</returns>
        </member>
        <member name="M:Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JArray.FromObject(System.Object,Elastic.Apm.Libraries.Newtonsoft.Json.JsonSerializer)">
            <summary>
            Creates a <see cref="T:Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JArray" /> from an object.
            </summary>
            <param name="o">The object that will be used to create <see cref="T:Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JArray" />.</param>
            <param name="jsonSerializer">The <see cref="T:Elastic.Apm.Libraries.Newtonsoft.Json.JsonSerializer" /> that will be used to read the object.</param>
            <returns>A <see cref="T:Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JArray" /> with the values of the specified object.</returns>
        </member>
        <member name="M:Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JArray.WriteTo(Elastic.Apm.Libraries.Newtonsoft.Json.JsonWriter,Elastic.Apm.Libraries.Newtonsoft.Json.JsonConverter[])">
            <summary>
            Writes this token to a <see cref="T:Elastic.Apm.Libraries.Newtonsoft.Json.JsonWriter" />.
            </summary>
            <param name="writer">A <see cref="T:Elastic.Apm.Libraries.Newtonsoft.Json.JsonWriter" /> into which this method will write.</param>
            <param name="converters">A collection of <see cref="T:Elastic.Apm.Libraries.Newtonsoft.Json.JsonConverter" /> which will be used when writing the token.</param>
        </member>
        <member name="M:Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JArray.IndexOf(Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JToken)">
            <summary>
            Determines the index of a specific item in the <see cref="T:Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JArray" />.
            </summary>
            <param name="item">The object to locate in the <see cref="T:Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JArray" />.</param>
            <returns>
            The index of <paramref name="item" /> if found in the list; otherwise, -1.
            </returns>
        </member>
        <member name="M:Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JArray.Insert(System.Int32,Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JToken)">
            <summary>
            Inserts an item to the <see cref="T:Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JArray" /> at the specified index.
            </summary>
            <param name="index">The zero-based index at which <paramref name="item" /> should be inserted.</param>
            <param name="item">The object to insert into the <see cref="T:Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JArray" />.</param>
            <exception cref="T:System.ArgumentOutOfRangeException">
            <paramref name="index" /> is not a valid index in the <see cref="T:Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JArray" />.
            </exception>
        </member>
        <member name="M:Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JArray.RemoveAt(System.Int32)">
            <summary>
            Removes the <see cref="T:Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JArray" /> item at the specified index.
            </summary>
            <param name="index">The zero-based index of the item to remove.</param>
            <exception cref="T:System.ArgumentOutOfRangeException">
            <paramref name="index" /> is not a valid index in the <see cref="T:Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JArray" />.
            </exception>
        </member>
        <member name="M:Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JArray.GetEnumerator">
            <summary>
            Returns an enumerator that iterates through the collection.
            </summary>
            <returns>
            A <see cref="T:System.Collections.Generic.IEnumerator`1" /> of <see cref="T:Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JToken" /> that can be used to iterate through the collection.
            </returns>
        </member>
        <member name="M:Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JArray.Add(Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JToken)">
            <summary>
            Adds an item to the <see cref="T:Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JArray" />.
            </summary>
            <param name="item">The object to add to the <see cref="T:Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JArray" />.</param>
        </member>
        <member name="M:Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JArray.Clear">
            <summary>
            Removes all items from the <see cref="T:Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JArray" />.
            </summary>
        </member>
        <member name="M:Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JArray.Contains(Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JToken)">
            <summary>
            Determines whether the <see cref="T:Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JArray" /> contains a specific value.
            </summary>
            <param name="item">The object to locate in the <see cref="T:Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JArray" />.</param>
            <returns>
            <c>true</c> if <paramref name="item" /> is found in the <see cref="T:Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JArray" />; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JArray.CopyTo(Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JToken[],System.Int32)">
            <summary>
            Copies the elements of the <see cref="T:Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JArray" /> to an array, starting at a particular array index.
            </summary>
            <param name="array">The array.</param>
            <param name="arrayIndex">Index of the array.</param>
        </member>
        <member name="M:Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JArray.Remove(Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JToken)">
            <summary>
            Removes the first occurrence of a specific object from the <see cref="T:Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JArray" />.
            </summary>
            <param name="item">The object to remove from the <see cref="T:Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JArray" />.</param>
            <returns>
            <c>true</c> if <paramref name="item" /> was successfully removed from the <see cref="T:Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JArray" />; otherwise,
            <c>false</c>. This method also returns <c>false</c> if <paramref name="item" /> is not found in the original
            <see cref="T:Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JArray" />.
            </returns>
        </member>
        <member name="T:Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JConstructor">
            <summary>
            Represents a JSON constructor.
            </summary>
        </member>
        <member name="M:Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JConstructor.WriteToAsync(Elastic.Apm.Libraries.Newtonsoft.Json.JsonWriter,System.Threading.CancellationToken,Elastic.Apm.Libraries.Newtonsoft.Json.JsonConverter[])">
            <summary>
            Writes this token to a <see cref="T:Elastic.Apm.Libraries.Newtonsoft.Json.JsonWriter"/> asynchronously.
            </summary>
            <param name="writer">A <see cref="T:Elastic.Apm.Libraries.Newtonsoft.Json.JsonWriter"/> into which this method will write.</param>
            <param name="cancellationToken">The token to monitor for cancellation requests.</param>
            <param name="converters">A collection of <see cref="T:Elastic.Apm.Libraries.Newtonsoft.Json.JsonConverter"/> which will be used when writing the token.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> that represents the asynchronous write operation.</returns>
        </member>
        <member name="M:Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JConstructor.LoadAsync(Elastic.Apm.Libraries.Newtonsoft.Json.JsonReader,System.Threading.CancellationToken)">
            <summary>
            Asynchronously loads a <see cref="T:Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JConstructor"/> from a <see cref="T:Elastic.Apm.Libraries.Newtonsoft.Json.JsonReader"/>.
            </summary>
            <param name="reader">A <see cref="T:Elastic.Apm.Libraries.Newtonsoft.Json.JsonReader"/> that will be read for the content of the <see cref="T:Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JConstructor"/>.</param>
            <param name="cancellationToken">The token to monitor for cancellation requests. The default value is <see cref="P:System.Threading.CancellationToken.None"/>.</param>
            <returns>
            A <see cref="T:System.Threading.Tasks.Task`1"/> that represents the asynchronous load. The <see cref="P:System.Threading.Tasks.Task`1.Result"/>
            property returns a <see cref="T:Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JConstructor"/> that contains the JSON that was read from the specified <see cref="T:Elastic.Apm.Libraries.Newtonsoft.Json.JsonReader"/>.</returns>
        </member>
        <member name="M:Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JConstructor.LoadAsync(Elastic.Apm.Libraries.Newtonsoft.Json.JsonReader,Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JsonLoadSettings,System.Threading.CancellationToken)">
            <summary>
            Asynchronously loads a <see cref="T:Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JConstructor"/> from a <see cref="T:Elastic.Apm.Libraries.Newtonsoft.Json.JsonReader"/>.
            </summary>
            <param name="reader">A <see cref="T:Elastic.Apm.Libraries.Newtonsoft.Json.JsonReader"/> that will be read for the content of the <see cref="T:Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JConstructor"/>.</param>
            <param name="settings">The <see cref="T:Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JsonLoadSettings"/> used to load the JSON.
            If this is <c>null</c>, default load settings will be used.</param>
            <param name="cancellationToken">The token to monitor for cancellation requests. The default value is <see cref="P:System.Threading.CancellationToken.None"/>.</param>
            <returns>
            A <see cref="T:System.Threading.Tasks.Task`1"/> that represents the asynchronous load. The <see cref="P:System.Threading.Tasks.Task`1.Result"/>
            property returns a <see cref="T:Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JConstructor"/> that contains the JSON that was read from the specified <see cref="T:Elastic.Apm.Libraries.Newtonsoft.Json.JsonReader"/>.</returns>
        </member>
        <member name="M:Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JConstructor.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JConstructor" /> class.
            </summary>
        </member>
        <member name="M:Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JConstructor.#ctor(Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JConstructor)">
            <summary>
            Initializes a new instance of the <see cref="T:Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JConstructor" /> class from another <see cref="T:Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JConstructor" /> object.
            </summary>
            <param name="other">A <see cref="T:Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JConstructor" /> object to copy from.</param>
        </member>
        <member name="M:Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JConstructor.#ctor(System.String,System.Object[])">
            <summary>
            Initializes a new instance of the <see cref="T:Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JConstructor" /> class with the specified name and content.
            </summary>
            <param name="name">The constructor name.</param>
            <param name="content">The contents of the constructor.</param>
        </member>
        <member name="M:Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JConstructor.#ctor(System.String,System.Object)">
            <summary>
            Initializes a new instance of the <see cref="T:Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JConstructor" /> class with the specified name and content.
            </summary>
            <param name="name">The constructor name.</param>
            <param name="content">The contents of the constructor.</param>
        </member>
        <member name="M:Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JConstructor.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JConstructor" /> class with the specified name.
            </summary>
            <param name="name">The constructor name.</param>
        </member>
        <member name="P:Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JConstructor.ChildrenTokens">
            <summary>
            Gets the container's children tokens.
            </summary>
            <value>The container's children tokens.</value>
        </member>
        <member name="P:Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JConstructor.Item(System.Object)">
            <summary>
            Gets the <see cref="T:Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JToken" /> with the specified key.
            </summary>
            <value>The <see cref="T:Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JToken" /> with the specified key.</value>
        </member>
        <member name="P:Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JConstructor.Name">
            <summary>
            Gets or sets the name of this constructor.
            </summary>
            <value>The constructor name.</value>
        </member>
        <member name="P:Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JConstructor.Type">
            <summary>
            Gets the node type for this <see cref="T:Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JToken" />.
            </summary>
            <value>The type.</value>
        </member>
        <member name="M:Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JConstructor.WriteTo(Elastic.Apm.Libraries.Newtonsoft.Json.JsonWriter,Elastic.Apm.Libraries.Newtonsoft.Json.JsonConverter[])">
            <summary>
            Writes this token to a <see cref="T:Elastic.Apm.Libraries.Newtonsoft.Json.JsonWriter" />.
            </summary>
            <param name="writer">A <see cref="T:Elastic.Apm.Libraries.Newtonsoft.Json.JsonWriter" /> into which this method will write.</param>
            <param name="converters">A collection of <see cref="T:Elastic.Apm.Libraries.Newtonsoft.Json.JsonConverter" /> which will be used when writing the token.</param>
        </member>
        <member name="M:Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JConstructor.Load(Elastic.Apm.Libraries.Newtonsoft.Json.JsonReader)">
            <summary>
            Loads a <see cref="T:Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JConstructor" /> from a <see cref="T:Elastic.Apm.Libraries.Newtonsoft.Json.JsonReader" />.
            </summary>
            <param name="reader">A <see cref="T:Elastic.Apm.Libraries.Newtonsoft.Json.JsonReader" /> that will be read for the content of the <see cref="T:Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JConstructor" />.</param>
            <returns>
            A <see cref="T:Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JConstructor" /> that contains the JSON that was read from the specified
            <see cref="T:Elastic.Apm.Libraries.Newtonsoft.Json.JsonReader" />.
            </returns>
        </member>
        <member name="M:Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JConstructor.Load(Elastic.Apm.Libraries.Newtonsoft.Json.JsonReader,Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JsonLoadSettings)">
            <summary>
            Loads a <see cref="T:Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JConstructor" /> from a <see cref="T:Elastic.Apm.Libraries.Newtonsoft.Json.JsonReader" />.
            </summary>
            <param name="reader">A <see cref="T:Elastic.Apm.Libraries.Newtonsoft.Json.JsonReader" /> that will be read for the content of the <see cref="T:Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JConstructor" />.</param>
            <param name="settings">
            The <see cref="T:Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JsonLoadSettings" /> used to load the JSON.
            If this is <c>null</c>, default load settings will be used.
            </param>
            <returns>
            A <see cref="T:Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JConstructor" /> that contains the JSON that was read from the specified
            <see cref="T:Elastic.Apm.Libraries.Newtonsoft.Json.JsonReader" />.
            </returns>
        </member>
        <member name="T:Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JContainer">
            <summary>
            Represents a token that can contain other tokens.
            </summary>
        </member>
        <member name="E:Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JContainer.ListChanged">
            <summary>
            Occurs when the list changes or an item in the list changes.
            </summary>
        </member>
        <member name="E:Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JContainer.AddingNew">
            <summary>
            Occurs before an item is added to the collection.
            </summary>
        </member>
        <member name="E:Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JContainer.CollectionChanged">
            <summary>
            Occurs when the items list of the collection has changed, or the collection is reset.
            </summary>
        </member>
        <member name="P:Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JContainer.ChildrenTokens">
            <summary>
            Gets the container's children tokens.
            </summary>
            <value>The container's children tokens.</value>
        </member>
        <member name="M:Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JContainer.OnAddingNew(System.ComponentModel.AddingNewEventArgs)">
            <summary>
            Raises the <see cref="E:Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JContainer.AddingNew"/> event.
            </summary>
            <param name="e">The <see cref="T:System.ComponentModel.AddingNewEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JContainer.OnListChanged(System.ComponentModel.ListChangedEventArgs)">
            <summary>
            Raises the <see cref="E:Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JContainer.ListChanged"/> event.
            </summary>
            <param name="e">The <see cref="T:System.ComponentModel.ListChangedEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JContainer.OnCollectionChanged(System.Collections.Specialized.NotifyCollectionChangedEventArgs)">
            <summary>
            Raises the <see cref="E:Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JContainer.CollectionChanged"/> event.
            </summary>
            <param name="e">The <see cref="T:System.Collections.Specialized.NotifyCollectionChangedEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="P:Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JContainer.HasValues">
            <summary>
            Gets a value indicating whether this token has child tokens.
            </summary>
            <value>
            	<c>true</c> if this token has child values; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JContainer.First">
            <summary>
            Get the first child token of this token.
            </summary>
            <value>
            A <see cref="T:Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JToken" /> containing the first child token of the <see cref="T:Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JToken" />.
            </value>
        </member>
        <member name="P:Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JContainer.Last">
            <summary>
            Get the last child token of this token.
            </summary>
            <value>
            A <see cref="T:Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JToken" /> containing the last child token of the <see cref="T:Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JToken" />.
            </value>
        </member>
        <member name="M:Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JContainer.Children">
            <summary>
            Returns a collection of the child tokens of this token, in document order.
            </summary>
            <returns>
            An <see cref="T:System.Collections.Generic.IEnumerable`1" /> of <see cref="T:Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JToken" /> containing the child tokens of this <see cref="T:Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JToken" />, in
            document order.
            </returns>
        </member>
        <member name="M:Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JContainer.Values``1">
            <summary>
            Returns a collection of the child values of this token, in document order.
            </summary>
            <typeparam name="T">The type to convert the values to.</typeparam>
            <returns>
            A <see cref="T:System.Collections.Generic.IEnumerable`1" /> containing the child values of this <see cref="T:Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JToken" />, in document order.
            </returns>
        </member>
        <member name="M:Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JContainer.Descendants">
            <summary>
            Returns a collection of the descendant tokens for this token in document order.
            </summary>
            <returns>
            An <see cref="T:System.Collections.Generic.IEnumerable`1" /> of <see cref="T:Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JToken" /> containing the descendant tokens of the
            <see cref="T:Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JToken" />.
            </returns>
        </member>
        <member name="M:Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JContainer.DescendantsAndSelf">
            <summary>
            Returns a collection of the tokens that contain this token, and all descendant tokens of this token, in document order.
            </summary>
            <returns>
            An <see cref="T:System.Collections.Generic.IEnumerable`1" /> of <see cref="T:Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JToken" /> containing this token, and all the descendant tokens
            of the <see cref="T:Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JToken" />.
            </returns>
        </member>
        <member name="M:Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JContainer.Add(System.Object)">
            <summary>
            Adds the specified content as children of this <see cref="T:Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JToken" />.
            </summary>
            <param name="content">The content to be added.</param>
        </member>
        <member name="M:Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JContainer.AddFirst(System.Object)">
            <summary>
            Adds the specified content as the first children of this <see cref="T:Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JToken" />.
            </summary>
            <param name="content">The content to be added.</param>
        </member>
        <member name="M:Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JContainer.CreateWriter">
            <summary>
            Creates a <see cref="T:Elastic.Apm.Libraries.Newtonsoft.Json.JsonWriter" /> that can be used to add tokens to the <see cref="T:Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JToken" />.
            </summary>
            <returns>A <see cref="T:Elastic.Apm.Libraries.Newtonsoft.Json.JsonWriter" /> that is ready to have content written to it.</returns>
        </member>
        <member name="M:Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JContainer.ReplaceAll(System.Object)">
            <summary>
            Replaces the child nodes of this token with the specified content.
            </summary>
            <param name="content">The content.</param>
        </member>
        <member name="M:Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JContainer.RemoveAll">
            <summary>
            Removes the child nodes from this token.
            </summary>
        </member>
        <member name="M:Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JContainer.Merge(System.Object)">
            <summary>
            Merge the specified content into this <see cref="T:Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JToken" />.
            </summary>
            <param name="content">The content to be merged.</param>
        </member>
        <member name="M:Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JContainer.Merge(System.Object,Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JsonMergeSettings)">
            <summary>
            Merge the specified content into this <see cref="T:Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JToken" /> using <see cref="T:Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JsonMergeSettings" />.
            </summary>
            <param name="content">The content to be merged.</param>
            <param name="settings">The <see cref="T:Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JsonMergeSettings" /> used to merge the content.</param>
        </member>
        <member name="P:Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JContainer.Count">
            <summary>
            Gets the count of child JSON tokens.
            </summary>
            <value>The count of child JSON tokens.</value>
        </member>
        <member name="T:Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JEnumerable`1">
            <summary>
            Represents a collection of <see cref="T:Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JToken" /> objects.
            </summary>
            <typeparam name="T">The type of token.</typeparam>
        </member>
        <member name="F:Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JEnumerable`1.Empty">
            <summary>
            An empty collection of <see cref="T:Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JToken" /> objects.
            </summary>
        </member>
        <member name="M:Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JEnumerable`1.#ctor(System.Collections.Generic.IEnumerable{`0})">
            <summary>
            Initializes a new instance of the <see cref="T:Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JEnumerable`1" /> struct.
            </summary>
            <param name="enumerable">The enumerable.</param>
        </member>
        <member name="M:Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JEnumerable`1.GetEnumerator">
            <summary>
            Returns an enumerator that can be used to iterate through the collection.
            </summary>
            <returns>
            A <see cref="T:System.Collections.Generic.IEnumerator`1" /> that can be used to iterate through the collection.
            </returns>
        </member>
        <member name="P:Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JEnumerable`1.Item(System.Object)">
            <summary>
            Gets the <see cref="T:Elastic.Apm.Libraries.Newtonsoft.Json.Linq.IJEnumerable`1" /> of <see cref="T:Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JToken" /> with the specified key.
            </summary>
            <value></value>
        </member>
        <member name="M:Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JEnumerable`1.Equals(Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JEnumerable{`0})">
            <summary>
            Determines whether the specified <see cref="T:Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JEnumerable`1" /> is equal to this instance.
            </summary>
            <param name="other">The <see cref="T:Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JEnumerable`1" /> to compare with this instance.</param>
            <returns>
            	<c>true</c> if the specified <see cref="T:Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JEnumerable`1" /> is equal to this instance; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JEnumerable`1.Equals(System.Object)">
            <summary>
            Determines whether the specified <see cref="T:System.Object" /> is equal to this instance.
            </summary>
            <param name="obj">The <see cref="T:System.Object" /> to compare with this instance.</param>
            <returns>
            	<c>true</c> if the specified <see cref="T:System.Object" /> is equal to this instance; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JEnumerable`1.GetHashCode">
            <summary>
            Returns a hash code for this instance.
            </summary>
            <returns>
            A hash code for this instance, suitable for use in hashing algorithms and data structures like a hash table.
            </returns>
        </member>
        <member name="T:Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JObject">
            <summary>
            Represents a JSON object.
            </summary>
            <example>
              <code lang="cs" source="..\Src\Newtonsoft.Json.Tests\Documentation\LinqToJsonTests.cs" region="LinqToJsonCreateParse"
                  title="Parsing a JSON Object from Text" />
            </example>
        </member>
        <member name="M:Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JObject.WriteToAsync(Elastic.Apm.Libraries.Newtonsoft.Json.JsonWriter,System.Threading.CancellationToken,Elastic.Apm.Libraries.Newtonsoft.Json.JsonConverter[])">
            <summary>
            Writes this token to a <see cref="T:Elastic.Apm.Libraries.Newtonsoft.Json.JsonWriter"/> asynchronously.
            </summary>
            <param name="writer">A <see cref="T:Elastic.Apm.Libraries.Newtonsoft.Json.JsonWriter"/> into which this method will write.</param>
            <param name="cancellationToken">The token to monitor for cancellation requests.</param>
            <param name="converters">A collection of <see cref="T:Elastic.Apm.Libraries.Newtonsoft.Json.JsonConverter"/> which will be used when writing the token.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> that represents the asynchronous write operation.</returns>
        </member>
        <member name="M:Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JObject.LoadAsync(Elastic.Apm.Libraries.Newtonsoft.Json.JsonReader,System.Threading.CancellationToken)">
            <summary>
            Asynchronously loads a <see cref="T:Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JObject"/> from a <see cref="T:Elastic.Apm.Libraries.Newtonsoft.Json.JsonReader"/>.
            </summary>
            <param name="reader">A <see cref="T:Elastic.Apm.Libraries.Newtonsoft.Json.JsonReader"/> that will be read for the content of the <see cref="T:Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JObject"/>.</param>
            <param name="cancellationToken">The token to monitor for cancellation requests. The default value is <see cref="P:System.Threading.CancellationToken.None"/>.</param>
            <returns>
            A <see cref="T:System.Threading.Tasks.Task`1"/> that represents the asynchronous load. The <see cref="P:System.Threading.Tasks.Task`1.Result"/>
            property returns a <see cref="T:Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JObject"/> that contains the JSON that was read from the specified <see cref="T:Elastic.Apm.Libraries.Newtonsoft.Json.JsonReader"/>.</returns>
        </member>
        <member name="M:Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JObject.LoadAsync(Elastic.Apm.Libraries.Newtonsoft.Json.JsonReader,Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JsonLoadSettings,System.Threading.CancellationToken)">
            <summary>
            Asynchronously loads a <see cref="T:Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JObject"/> from a <see cref="T:Elastic.Apm.Libraries.Newtonsoft.Json.JsonReader"/>.
            </summary>
            <param name="reader">A <see cref="T:Elastic.Apm.Libraries.Newtonsoft.Json.JsonReader"/> that will be read for the content of the <see cref="T:Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JObject"/>.</param>
            <param name="settings">The <see cref="T:Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JsonLoadSettings"/> used to load the JSON.
            If this is <c>null</c>, default load settings will be used.</param>
            <param name="cancellationToken">The token to monitor for cancellation requests. The default value is <see cref="P:System.Threading.CancellationToken.None"/>.</param>
            <returns>
            A <see cref="T:System.Threading.Tasks.Task`1"/> that represents the asynchronous load. The <see cref="P:System.Threading.Tasks.Task`1.Result"/>
            property returns a <see cref="T:Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JObject"/> that contains the JSON that was read from the specified <see cref="T:Elastic.Apm.Libraries.Newtonsoft.Json.JsonReader"/>.</returns>
        </member>
        <member name="P:Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JObject.ChildrenTokens">
            <summary>
            Gets the container's children tokens.
            </summary>
            <value>The container's children tokens.</value>
        </member>
        <member name="E:Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JObject.PropertyChanged">
            <summary>
            Occurs when a property value changes.
            </summary>
        </member>
        <member name="E:Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JObject.PropertyChanging">
            <summary>
            Occurs when a property value is changing.
            </summary>
        </member>
        <member name="M:Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JObject.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JObject" /> class.
            </summary>
        </member>
        <member name="M:Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JObject.#ctor(Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JObject)">
            <summary>
            Initializes a new instance of the <see cref="T:Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JObject" /> class from another <see cref="T:Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JObject" /> object.
            </summary>
            <param name="other">A <see cref="T:Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JObject" /> object to copy from.</param>
        </member>
        <member name="M:Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JObject.#ctor(System.Object[])">
            <summary>
            Initializes a new instance of the <see cref="T:Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JObject" /> class with the specified content.
            </summary>
            <param name="content">The contents of the object.</param>
        </member>
        <member name="M:Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JObject.#ctor(System.Object)">
            <summary>
            Initializes a new instance of the <see cref="T:Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JObject" /> class with the specified content.
            </summary>
            <param name="content">The contents of the object.</param>
        </member>
        <member name="P:Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JObject.Type">
            <summary>
            Gets the node type for this <see cref="T:Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JToken" />.
            </summary>
            <value>The type.</value>
        </member>
        <member name="M:Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JObject.Properties">
            <summary>
            Gets an <see cref="T:System.Collections.Generic.IEnumerable`1" /> of <see cref="T:Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JProperty" /> of this object's properties.
            </summary>
            <returns>An <see cref="T:System.Collections.Generic.IEnumerable`1" /> of <see cref="T:Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JProperty" /> of this object's properties.</returns>
        </member>
        <member name="M:Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JObject.Property(System.String)">
            <summary>
            Gets a <see cref="T:Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JProperty" /> with the specified name.
            </summary>
            <param name="name">The property name.</param>
            <returns>A <see cref="T:Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JProperty" /> with the specified name or <c>null</c>.</returns>
        </member>
        <member name="M:Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JObject.Property(System.String,System.StringComparison)">
            <summary>
            Gets the <see cref="T:Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JProperty" /> with the specified name.
            The exact name will be searched for first and if no matching property is found then
            the <see cref="T:System.StringComparison" /> will be used to match a property.
            </summary>
            <param name="name">The property name.</param>
            <param name="comparison">One of the enumeration values that specifies how the strings will be compared.</param>
            <returns>A <see cref="T:Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JProperty" /> matched with the specified name or <c>null</c>.</returns>
        </member>
        <member name="M:Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JObject.PropertyValues">
            <summary>
            Gets a <see cref="T:Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JEnumerable`1" /> of <see cref="T:Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JToken" /> of this object's property values.
            </summary>
            <returns>A <see cref="T:Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JEnumerable`1" /> of <see cref="T:Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JToken" /> of this object's property values.</returns>
        </member>
        <member name="P:Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JObject.Item(System.Object)">
            <summary>
            Gets the <see cref="T:Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JToken" /> with the specified key.
            </summary>
            <value>The <see cref="T:Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JToken" /> with the specified key.</value>
        </member>
        <member name="P:Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JObject.Item(System.String)">
            <summary>
            Gets or sets the <see cref="T:Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JToken" /> with the specified property name.
            </summary>
            <value></value>
        </member>
        <member name="M:Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JObject.Load(Elastic.Apm.Libraries.Newtonsoft.Json.JsonReader)">
            <summary>
            Loads a <see cref="T:Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JObject" /> from a <see cref="T:Elastic.Apm.Libraries.Newtonsoft.Json.JsonReader" />.
            </summary>
            <param name="reader">A <see cref="T:Elastic.Apm.Libraries.Newtonsoft.Json.JsonReader" /> that will be read for the content of the <see cref="T:Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JObject" />.</param>
            <returns>A <see cref="T:Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JObject" /> that contains the JSON that was read from the specified <see cref="T:Elastic.Apm.Libraries.Newtonsoft.Json.JsonReader" />.</returns>
            <exception cref="T:Elastic.Apm.Libraries.Newtonsoft.Json.JsonReaderException">
                <paramref name="reader" /> is not valid JSON.
            </exception>
        </member>
        <member name="M:Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JObject.Load(Elastic.Apm.Libraries.Newtonsoft.Json.JsonReader,Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JsonLoadSettings)">
            <summary>
            Loads a <see cref="T:Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JObject" /> from a <see cref="T:Elastic.Apm.Libraries.Newtonsoft.Json.JsonReader" />.
            </summary>
            <param name="reader">A <see cref="T:Elastic.Apm.Libraries.Newtonsoft.Json.JsonReader" /> that will be read for the content of the <see cref="T:Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JObject" />.</param>
            <param name="settings">
            The <see cref="T:Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JsonLoadSettings" /> used to load the JSON.
            If this is <c>null</c>, default load settings will be used.
            </param>
            <returns>A <see cref="T:Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JObject" /> that contains the JSON that was read from the specified <see cref="T:Elastic.Apm.Libraries.Newtonsoft.Json.JsonReader" />.</returns>
            <exception cref="T:Elastic.Apm.Libraries.Newtonsoft.Json.JsonReaderException">
                <paramref name="reader" /> is not valid JSON.
            </exception>
        </member>
        <member name="M:Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JObject.Parse(System.String)">
            <summary>
            Load a <see cref="T:Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JObject" /> from a string that contains JSON.
            </summary>
            <param name="json">A <see cref="T:System.String" /> that contains JSON.</param>
            <returns>A <see cref="T:Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JObject" /> populated from the string that contains JSON.</returns>
            <exception cref="T:Elastic.Apm.Libraries.Newtonsoft.Json.JsonReaderException">
                <paramref name="json" /> is not valid JSON.
            </exception>
            <example>
              <code lang="cs" source="..\Src\Newtonsoft.Json.Tests\Documentation\LinqToJsonTests.cs" region="LinqToJsonCreateParse"
                  title="Parsing a JSON Object from Text" />
            </example>
        </member>
        <member name="M:Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JObject.Parse(System.String,Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JsonLoadSettings)">
            <summary>
            Load a <see cref="T:Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JObject" /> from a string that contains JSON.
            </summary>
            <param name="json">A <see cref="T:System.String" /> that contains JSON.</param>
            <param name="settings">
            The <see cref="T:Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JsonLoadSettings" /> used to load the JSON.
            If this is <c>null</c>, default load settings will be used.
            </param>
            <returns>A <see cref="T:Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JObject" /> populated from the string that contains JSON.</returns>
            <exception cref="T:Elastic.Apm.Libraries.Newtonsoft.Json.JsonReaderException">
                <paramref name="json" /> is not valid JSON.
            </exception>
            <example>
              <code lang="cs" source="..\Src\Newtonsoft.Json.Tests\Documentation\LinqToJsonTests.cs" region="LinqToJsonCreateParse"
                  title="Parsing a JSON Object from Text" />
            </example>
        </member>
        <member name="M:Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JObject.FromObject(System.Object)">
            <summary>
            Creates a <see cref="T:Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JObject" /> from an object.
            </summary>
            <param name="o">The object that will be used to create <see cref="T:Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JObject" />.</param>
            <returns>A <see cref="T:Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JObject" /> with the values of the specified object.</returns>
        </member>
        <member name="M:Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JObject.FromObject(System.Object,Elastic.Apm.Libraries.Newtonsoft.Json.JsonSerializer)">
            <summary>
            Creates a <see cref="T:Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JObject" /> from an object.
            </summary>
            <param name="o">The object that will be used to create <see cref="T:Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JObject" />.</param>
            <param name="jsonSerializer">The <see cref="T:Elastic.Apm.Libraries.Newtonsoft.Json.JsonSerializer" /> that will be used to read the object.</param>
            <returns>A <see cref="T:Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JObject" /> with the values of the specified object.</returns>
        </member>
        <member name="M:Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JObject.WriteTo(Elastic.Apm.Libraries.Newtonsoft.Json.JsonWriter,Elastic.Apm.Libraries.Newtonsoft.Json.JsonConverter[])">
            <summary>
            Writes this token to a <see cref="T:Elastic.Apm.Libraries.Newtonsoft.Json.JsonWriter" />.
            </summary>
            <param name="writer">A <see cref="T:Elastic.Apm.Libraries.Newtonsoft.Json.JsonWriter" /> into which this method will write.</param>
            <param name="converters">A collection of <see cref="T:Elastic.Apm.Libraries.Newtonsoft.Json.JsonConverter" /> which will be used when writing the token.</param>
        </member>
        <member name="M:Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JObject.GetValue(System.String)">
            <summary>
            Gets the <see cref="T:Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JToken" /> with the specified property name.
            </summary>
            <param name="propertyName">Name of the property.</param>
            <returns>The <see cref="T:Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JToken" /> with the specified property name.</returns>
        </member>
        <member name="M:Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JObject.GetValue(System.String,System.StringComparison)">
            <summary>
            Gets the <see cref="T:Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JToken" /> with the specified property name.
            The exact property name will be searched for first and if no matching property is found then
            the <see cref="T:System.StringComparison" /> will be used to match a property.
            </summary>
            <param name="propertyName">Name of the property.</param>
            <param name="comparison">One of the enumeration values that specifies how the strings will be compared.</param>
            <returns>The <see cref="T:Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JToken" /> with the specified property name.</returns>
        </member>
        <member name="M:Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JObject.TryGetValue(System.String,System.StringComparison,Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JToken@)">
            <summary>
            Tries to get the <see cref="T:Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JToken" /> with the specified property name.
            The exact property name will be searched for first and if no matching property is found then
            the <see cref="T:System.StringComparison" /> will be used to match a property.
            </summary>
            <param name="propertyName">Name of the property.</param>
            <param name="value">The value.</param>
            <param name="comparison">One of the enumeration values that specifies how the strings will be compared.</param>
            <returns><c>true</c> if a value was successfully retrieved; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JObject.Add(System.String,Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JToken)">
            <summary>
            Adds the specified property name.
            </summary>
            <param name="propertyName">Name of the property.</param>
            <param name="value">The value.</param>
        </member>
        <member name="M:Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JObject.ContainsKey(System.String)">
            <summary>
            Determines whether the JSON object has the specified property name.
            </summary>
            <param name="propertyName">Name of the property.</param>
            <returns><c>true</c> if the JSON object has the specified property name; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JObject.Remove(System.String)">
            <summary>
            Removes the property with the specified name.
            </summary>
            <param name="propertyName">Name of the property.</param>
            <returns><c>true</c> if item was successfully removed; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JObject.TryGetValue(System.String,Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JToken@)">
            <summary>
            Tries to get the <see cref="T:Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JToken" /> with the specified property name.
            </summary>
            <param name="propertyName">Name of the property.</param>
            <param name="value">The value.</param>
            <returns><c>true</c> if a value was successfully retrieved; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JObject.GetEnumerator">
            <summary>
            Returns an enumerator that can be used to iterate through the collection.
            </summary>
            <returns>
            A <see cref="T:System.Collections.Generic.IEnumerator`1" /> that can be used to iterate through the collection.
            </returns>
        </member>
        <member name="M:Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JObject.OnPropertyChanged(System.String)">
            <summary>
            Raises the <see cref="E:Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JObject.PropertyChanged" /> event with the provided arguments.
            </summary>
            <param name="propertyName">Name of the property.</param>
        </member>
        <member name="M:Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JObject.OnPropertyChanging(System.String)">
            <summary>
            Raises the <see cref="E:Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JObject.PropertyChanging"/> event with the provided arguments.
            </summary>
            <param name="propertyName">Name of the property.</param>
        </member>
        <member name="M:Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JObject.GetMetaObject(System.Linq.Expressions.Expression)">
            <summary>
            Returns the <see cref="T:System.Dynamic.DynamicMetaObject"/> responsible for binding operations performed on this object.
            </summary>
            <param name="parameter">The expression tree representation of the runtime value.</param>
            <returns>
            The <see cref="T:System.Dynamic.DynamicMetaObject"/> to bind this object.
            </returns>
        </member>
        <member name="T:Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JProperty">
            <summary>
            Represents a JSON property.
            </summary>
        </member>
        <member name="M:Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JProperty.WriteToAsync(Elastic.Apm.Libraries.Newtonsoft.Json.JsonWriter,System.Threading.CancellationToken,Elastic.Apm.Libraries.Newtonsoft.Json.JsonConverter[])">
            <summary>
            Writes this token to a <see cref="T:Elastic.Apm.Libraries.Newtonsoft.Json.JsonWriter"/> asynchronously.
            </summary>
            <param name="writer">A <see cref="T:Elastic.Apm.Libraries.Newtonsoft.Json.JsonWriter"/> into which this method will write.</param>
            <param name="cancellationToken">The token to monitor for cancellation requests.</param>
            <param name="converters">A collection of <see cref="T:Elastic.Apm.Libraries.Newtonsoft.Json.JsonConverter"/> which will be used when writing the token.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> that represents the asynchronous write operation.</returns>
        </member>
        <member name="M:Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JProperty.LoadAsync(Elastic.Apm.Libraries.Newtonsoft.Json.JsonReader,System.Threading.CancellationToken)">
            <summary>
            Asynchronously loads a <see cref="T:Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JProperty"/> from a <see cref="T:Elastic.Apm.Libraries.Newtonsoft.Json.JsonReader"/>.
            </summary>
            <param name="reader">A <see cref="T:Elastic.Apm.Libraries.Newtonsoft.Json.JsonReader"/> that will be read for the content of the <see cref="T:Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JProperty"/>.</param>
            <param name="cancellationToken">The token to monitor for cancellation requests. The default value is <see cref="P:System.Threading.CancellationToken.None"/>.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task`1"/> representing the asynchronous creation. The <see cref="P:System.Threading.Tasks.Task`1.Result"/>
            property returns a <see cref="T:Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JProperty"/> that contains the JSON that was read from the specified <see cref="T:Elastic.Apm.Libraries.Newtonsoft.Json.JsonReader"/>.</returns>
        </member>
        <member name="M:Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JProperty.LoadAsync(Elastic.Apm.Libraries.Newtonsoft.Json.JsonReader,Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JsonLoadSettings,System.Threading.CancellationToken)">
            <summary>
            Asynchronously loads a <see cref="T:Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JProperty"/> from a <see cref="T:Elastic.Apm.Libraries.Newtonsoft.Json.JsonReader"/>.
            </summary>
            <param name="reader">A <see cref="T:Elastic.Apm.Libraries.Newtonsoft.Json.JsonReader"/> that will be read for the content of the <see cref="T:Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JProperty"/>.</param>
            <param name="settings">The <see cref="T:Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JsonLoadSettings"/> used to load the JSON.
            If this is <c>null</c>, default load settings will be used.</param>
            <param name="cancellationToken">The token to monitor for cancellation requests. The default value is <see cref="P:System.Threading.CancellationToken.None"/>.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task`1"/> representing the asynchronous creation. The <see cref="P:System.Threading.Tasks.Task`1.Result"/>
            property returns a <see cref="T:Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JProperty"/> that contains the JSON that was read from the specified <see cref="T:Elastic.Apm.Libraries.Newtonsoft.Json.JsonReader"/>.</returns>
        </member>
        <member name="M:Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JProperty.#ctor(Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JProperty)">
            <summary>
            Initializes a new instance of the <see cref="T:Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JProperty" /> class from another <see cref="T:Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JProperty" /> object.
            </summary>
            <param name="other">A <see cref="T:Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JProperty" /> object to copy from.</param>
        </member>
        <member name="M:Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JProperty.#ctor(System.String,System.Object[])">
            <summary>
            Initializes a new instance of the <see cref="T:Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JProperty" /> class.
            </summary>
            <param name="name">The property name.</param>
            <param name="content">The property content.</param>
        </member>
        <member name="M:Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JProperty.#ctor(System.String,System.Object)">
            <summary>
            Initializes a new instance of the <see cref="T:Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JProperty" /> class.
            </summary>
            <param name="name">The property name.</param>
            <param name="content">The property content.</param>
        </member>
        <member name="P:Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JProperty.ChildrenTokens">
            <summary>
            Gets the container's children tokens.
            </summary>
            <value>The container's children tokens.</value>
        </member>
        <member name="P:Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JProperty.Name">
            <summary>
            Gets the property name.
            </summary>
            <value>The property name.</value>
        </member>
        <member name="P:Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JProperty.Type">
            <summary>
            Gets the node type for this <see cref="T:Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JToken" />.
            </summary>
            <value>The type.</value>
        </member>
        <member name="P:Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JProperty.Value">
            <summary>
            Gets or sets the property value.
            </summary>
            <value>The property value.</value>
        </member>
        <member name="M:Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JProperty.WriteTo(Elastic.Apm.Libraries.Newtonsoft.Json.JsonWriter,Elastic.Apm.Libraries.Newtonsoft.Json.JsonConverter[])">
            <summary>
            Writes this token to a <see cref="T:Elastic.Apm.Libraries.Newtonsoft.Json.JsonWriter" />.
            </summary>
            <param name="writer">A <see cref="T:Elastic.Apm.Libraries.Newtonsoft.Json.JsonWriter" /> into which this method will write.</param>
            <param name="converters">A collection of <see cref="T:Elastic.Apm.Libraries.Newtonsoft.Json.JsonConverter" /> which will be used when writing the token.</param>
        </member>
        <member name="M:Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JProperty.Load(Elastic.Apm.Libraries.Newtonsoft.Json.JsonReader)">
            <summary>
            Loads a <see cref="T:Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JProperty" /> from a <see cref="T:Elastic.Apm.Libraries.Newtonsoft.Json.JsonReader" />.
            </summary>
            <param name="reader">A <see cref="T:Elastic.Apm.Libraries.Newtonsoft.Json.JsonReader" /> that will be read for the content of the <see cref="T:Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JProperty" />.</param>
            <returns>A <see cref="T:Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JProperty" /> that contains the JSON that was read from the specified <see cref="T:Elastic.Apm.Libraries.Newtonsoft.Json.JsonReader" />.</returns>
        </member>
        <member name="M:Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JProperty.Load(Elastic.Apm.Libraries.Newtonsoft.Json.JsonReader,Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JsonLoadSettings)">
            <summary>
            Loads a <see cref="T:Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JProperty" /> from a <see cref="T:Elastic.Apm.Libraries.Newtonsoft.Json.JsonReader" />.
            </summary>
            <param name="reader">A <see cref="T:Elastic.Apm.Libraries.Newtonsoft.Json.JsonReader" /> that will be read for the content of the <see cref="T:Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JProperty" />.</param>
            <param name="settings">
            The <see cref="T:Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JsonLoadSettings" /> used to load the JSON.
            If this is <c>null</c>, default load settings will be used.
            </param>
            <returns>A <see cref="T:Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JProperty" /> that contains the JSON that was read from the specified <see cref="T:Elastic.Apm.Libraries.Newtonsoft.Json.JsonReader" />.</returns>
        </member>
        <member name="T:Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JPropertyDescriptor">
            <summary>
            Represents a view of a <see cref="T:Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JProperty"/>.
            </summary>
        </member>
        <member name="M:Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JPropertyDescriptor.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JPropertyDescriptor"/> class.
            </summary>
            <param name="name">The name.</param>
        </member>
        <member name="M:Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JPropertyDescriptor.CanResetValue(System.Object)">
            <summary>
            When overridden in a derived class, returns whether resetting an object changes its value.
            </summary>
            <returns>
            <c>true</c> if resetting the component changes its value; otherwise, <c>false</c>.
            </returns>
            <param name="component">The component to test for reset capability.</param>
        </member>
        <member name="M:Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JPropertyDescriptor.GetValue(System.Object)">
            <summary>
            When overridden in a derived class, gets the current value of the property on a component.
            </summary>
            <returns>
            The value of a property for a given component.
            </returns>
            <param name="component">The component with the property for which to retrieve the value.</param>
        </member>
        <member name="M:Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JPropertyDescriptor.ResetValue(System.Object)">
            <summary>
            When overridden in a derived class, resets the value for this property of the component to the default value.
            </summary>
            <param name="component">The component with the property value that is to be reset to the default value.</param>
        </member>
        <member name="M:Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JPropertyDescriptor.SetValue(System.Object,System.Object)">
            <summary>
            When overridden in a derived class, sets the value of the component to a different value.
            </summary>
            <param name="component">The component with the property value that is to be set.</param>
            <param name="value">The new value.</param>
        </member>
        <member name="M:Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JPropertyDescriptor.ShouldSerializeValue(System.Object)">
            <summary>
            When overridden in a derived class, determines a value indicating whether the value of this property needs to be persisted.
            </summary>
            <returns>
            <c>true</c> if the property should be persisted; otherwise, <c>false</c>.
            </returns>
            <param name="component">The component with the property to be examined for persistence.</param>
        </member>
        <member name="P:Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JPropertyDescriptor.ComponentType">
            <summary>
            When overridden in a derived class, gets the type of the component this property is bound to.
            </summary>
            <returns>
            A <see cref="T:System.Type"/> that represents the type of component this property is bound to.
            When the <see cref="M:System.ComponentModel.PropertyDescriptor.GetValue(System.Object)"/> or
            <see cref="M:System.ComponentModel.PropertyDescriptor.SetValue(System.Object,System.Object)"/>
            methods are invoked, the object specified might be an instance of this type.
            </returns>
        </member>
        <member name="P:Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JPropertyDescriptor.IsReadOnly">
            <summary>
            When overridden in a derived class, gets a value indicating whether this property is read-only.
            </summary>
            <returns>
            <c>true</c> if the property is read-only; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="P:Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JPropertyDescriptor.PropertyType">
            <summary>
            When overridden in a derived class, gets the type of the property.
            </summary>
            <returns>
            A <see cref="T:System.Type"/> that represents the type of the property.
            </returns>
        </member>
        <member name="P:Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JPropertyDescriptor.NameHashCode">
            <summary>
            Gets the hash code for the name of the member.
            </summary>
            <value></value>
            <returns>
            The hash code for the name of the member.
            </returns>
        </member>
        <member name="T:Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JRaw">
            <summary>
            Represents a raw JSON string.
            </summary>
        </member>
        <member name="M:Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JRaw.CreateAsync(Elastic.Apm.Libraries.Newtonsoft.Json.JsonReader,System.Threading.CancellationToken)">
            <summary>
            Asynchronously creates an instance of <see cref="T:Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JRaw"/> with the content of the reader's current token.
            </summary>
            <param name="reader">The reader.</param>
            <param name="cancellationToken">The token to monitor for cancellation requests. The default value is <see cref="P:System.Threading.CancellationToken.None"/>.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task`1"/> representing the asynchronous creation. The <see cref="P:System.Threading.Tasks.Task`1.Result"/>
            property returns an instance of <see cref="T:Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JRaw"/> with the content of the reader's current token.</returns>
        </member>
        <member name="M:Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JRaw.#ctor(Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JRaw)">
            <summary>
            Initializes a new instance of the <see cref="T:Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JRaw" /> class from another <see cref="T:Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JRaw" /> object.
            </summary>
            <param name="other">A <see cref="T:Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JRaw" /> object to copy from.</param>
        </member>
        <member name="M:Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JRaw.#ctor(System.Object)">
            <summary>
            Initializes a new instance of the <see cref="T:Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JRaw" /> class.
            </summary>
            <param name="rawJson">The raw json.</param>
        </member>
        <member name="M:Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JRaw.Create(Elastic.Apm.Libraries.Newtonsoft.Json.JsonReader)">
            <summary>
            Creates an instance of <see cref="T:Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JRaw" /> with the content of the reader's current token.
            </summary>
            <param name="reader">The reader.</param>
            <returns>An instance of <see cref="T:Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JRaw" /> with the content of the reader's current token.</returns>
        </member>
        <member name="T:Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JsonLoadSettings">
            <summary>
            Specifies the settings used when loading JSON.
            </summary>
        </member>
        <member name="M:Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JsonLoadSettings.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JsonLoadSettings" /> class.
            </summary>
        </member>
        <member name="P:Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JsonLoadSettings.CommentHandling">
            <summary>
            Gets or sets how JSON comments are handled when loading JSON.
            The default value is <see cref="F:Elastic.Apm.Libraries.Newtonsoft.Json.Linq.CommentHandling.Ignore" />.
            </summary>
            <value>The JSON comment handling.</value>
        </member>
        <member name="P:Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JsonLoadSettings.DuplicatePropertyNameHandling">
            <summary>
            Gets or sets how duplicate property names in JSON objects are handled when loading JSON.
            The default value is <see cref="F:Elastic.Apm.Libraries.Newtonsoft.Json.Linq.DuplicatePropertyNameHandling.Replace" />.
            </summary>
            <value>The JSON duplicate property name handling.</value>
        </member>
        <member name="P:Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JsonLoadSettings.LineInfoHandling">
            <summary>
            Gets or sets how JSON line info is handled when loading JSON.
            The default value is <see cref="F:Elastic.Apm.Libraries.Newtonsoft.Json.Linq.LineInfoHandling.Load" />.
            </summary>
            <value>The JSON line info handling.</value>
        </member>
        <member name="T:Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JsonMergeSettings">
            <summary>
            Specifies the settings used when merging JSON.
            </summary>
        </member>
        <member name="M:Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JsonMergeSettings.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JsonMergeSettings" /> class.
            </summary>
        </member>
        <member name="P:Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JsonMergeSettings.MergeArrayHandling">
            <summary>
            Gets or sets the method used when merging JSON arrays.
            </summary>
            <value>The method used when merging JSON arrays.</value>
        </member>
        <member name="P:Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JsonMergeSettings.MergeNullValueHandling">
            <summary>
            Gets or sets how null value properties are merged.
            </summary>
            <value>How null value properties are merged.</value>
        </member>
        <member name="P:Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JsonMergeSettings.PropertyNameComparison">
            <summary>
            Gets or sets the comparison used to match property names while merging.
            The exact property name will be searched for first and if no matching property is found then
            the <see cref="T:System.StringComparison" /> will be used to match a property.
            </summary>
            <value>The comparison used to match property names while merging.</value>
        </member>
        <member name="T:Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JsonSelectSettings">
            <summary>
            Specifies the settings used when selecting JSON.
            </summary>
        </member>
        <member name="P:Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JsonSelectSettings.ErrorWhenNoMatch">
            <summary>
            Gets or sets a flag that indicates whether an error should be thrown if
            no tokens are found when evaluating part of the expression.
            </summary>
            <value>
            A flag that indicates whether an error should be thrown if
            no tokens are found when evaluating part of the expression.
            </value>
        </member>
        <member name="T:Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JToken">
            <summary>
            Represents an abstract JSON token.
            </summary>
        </member>
        <member name="M:Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JToken.WriteToAsync(Elastic.Apm.Libraries.Newtonsoft.Json.JsonWriter,System.Threading.CancellationToken,Elastic.Apm.Libraries.Newtonsoft.Json.JsonConverter[])">
            <summary>
            Writes this token to a <see cref="T:Elastic.Apm.Libraries.Newtonsoft.Json.JsonWriter"/> asynchronously.
            </summary>
            <param name="writer">A <see cref="T:Elastic.Apm.Libraries.Newtonsoft.Json.JsonWriter"/> into which this method will write.</param>
            <param name="cancellationToken">The token to monitor for cancellation requests.</param>
            <param name="converters">A collection of <see cref="T:Elastic.Apm.Libraries.Newtonsoft.Json.JsonConverter"/> which will be used when writing the token.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> that represents the asynchronous write operation.</returns>
        </member>
        <member name="M:Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JToken.WriteToAsync(Elastic.Apm.Libraries.Newtonsoft.Json.JsonWriter,Elastic.Apm.Libraries.Newtonsoft.Json.JsonConverter[])">
            <summary>
            Writes this token to a <see cref="T:Elastic.Apm.Libraries.Newtonsoft.Json.JsonWriter"/> asynchronously.
            </summary>
            <param name="writer">A <see cref="T:Elastic.Apm.Libraries.Newtonsoft.Json.JsonWriter"/> into which this method will write.</param>
            <param name="converters">A collection of <see cref="T:Elastic.Apm.Libraries.Newtonsoft.Json.JsonConverter"/> which will be used when writing the token.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> that represents the asynchronous write operation.</returns>
        </member>
        <member name="M:Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JToken.ReadFromAsync(Elastic.Apm.Libraries.Newtonsoft.Json.JsonReader,System.Threading.CancellationToken)">
            <summary>
            Asynchronously creates a <see cref="T:Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JToken"/> from a <see cref="T:Elastic.Apm.Libraries.Newtonsoft.Json.JsonReader"/>.
            </summary>
            <param name="reader">An <see cref="T:Elastic.Apm.Libraries.Newtonsoft.Json.JsonReader"/> positioned at the token to read into this <see cref="T:Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JToken"/>.</param>
            <param name="cancellationToken">The token to monitor for cancellation requests. The default value is <see cref="P:System.Threading.CancellationToken.None"/>.</param>
            <returns>
            A <see cref="T:System.Threading.Tasks.Task`1"/> that represents the asynchronous creation. The
            <see cref="P:System.Threading.Tasks.Task`1.Result"/> property returns a <see cref="T:Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JToken"/> that contains
            the token and its descendant tokens
            that were read from the reader. The runtime type of the token is determined
            by the token type of the first token encountered in the reader.
            </returns>
        </member>
        <member name="M:Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JToken.ReadFromAsync(Elastic.Apm.Libraries.Newtonsoft.Json.JsonReader,Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JsonLoadSettings,System.Threading.CancellationToken)">
            <summary>
            Asynchronously creates a <see cref="T:Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JToken"/> from a <see cref="T:Elastic.Apm.Libraries.Newtonsoft.Json.JsonReader"/>.
            </summary>
            <param name="reader">An <see cref="T:Elastic.Apm.Libraries.Newtonsoft.Json.JsonReader"/> positioned at the token to read into this <see cref="T:Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JToken"/>.</param>
            <param name="settings">The <see cref="T:Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JsonLoadSettings"/> used to load the JSON.
            If this is <c>null</c>, default load settings will be used.</param>
            <param name="cancellationToken">The token to monitor for cancellation requests. The default value is <see cref="P:System.Threading.CancellationToken.None"/>.</param>
            <returns>
            A <see cref="T:System.Threading.Tasks.Task`1"/> that represents the asynchronous creation. The
            <see cref="P:System.Threading.Tasks.Task`1.Result"/> property returns a <see cref="T:Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JToken"/> that contains
            the token and its descendant tokens
            that were read from the reader. The runtime type of the token is determined
            by the token type of the first token encountered in the reader.
            </returns>
        </member>
        <member name="M:Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JToken.LoadAsync(Elastic.Apm.Libraries.Newtonsoft.Json.JsonReader,System.Threading.CancellationToken)">
            <summary>
            Asynchronously creates a <see cref="T:Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JToken"/> from a <see cref="T:Elastic.Apm.Libraries.Newtonsoft.Json.JsonReader"/>.
            </summary>
            <param name="reader">A <see cref="T:Elastic.Apm.Libraries.Newtonsoft.Json.JsonReader"/> positioned at the token to read into this <see cref="T:Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JToken"/>.</param>
            <param name="cancellationToken">The token to monitor for cancellation requests. The default value is <see cref="P:System.Threading.CancellationToken.None"/>.</param>
            <returns>
            A <see cref="T:System.Threading.Tasks.Task`1"/> that represents the asynchronous creation. The <see cref="P:System.Threading.Tasks.Task`1.Result"/>
            property returns a <see cref="T:Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JToken"/> that contains the token and its descendant tokens
            that were read from the reader. The runtime type of the token is determined
            by the token type of the first token encountered in the reader.
            </returns>
        </member>
        <member name="M:Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JToken.LoadAsync(Elastic.Apm.Libraries.Newtonsoft.Json.JsonReader,Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JsonLoadSettings,System.Threading.CancellationToken)">
            <summary>
            Asynchronously creates a <see cref="T:Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JToken"/> from a <see cref="T:Elastic.Apm.Libraries.Newtonsoft.Json.JsonReader"/>.
            </summary>
            <param name="reader">A <see cref="T:Elastic.Apm.Libraries.Newtonsoft.Json.JsonReader"/> positioned at the token to read into this <see cref="T:Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JToken"/>.</param>
            <param name="settings">The <see cref="T:Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JsonLoadSettings"/> used to load the JSON.
            If this is <c>null</c>, default load settings will be used.</param>
            <param name="cancellationToken">The token to monitor for cancellation requests. The default value is <see cref="P:System.Threading.CancellationToken.None"/>.</param>
            <returns>
            A <see cref="T:System.Threading.Tasks.Task`1"/> that represents the asynchronous creation. The <see cref="P:System.Threading.Tasks.Task`1.Result"/>
            property returns a <see cref="T:Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JToken"/> that contains the token and its descendant tokens
            that were read from the reader. The runtime type of the token is determined
            by the token type of the first token encountered in the reader.
            </returns>
        </member>
        <member name="P:Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JToken.EqualityComparer">
            <summary>
            Gets a comparer that can compare two tokens for value equality.
            </summary>
            <value>A <see cref="T:Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JTokenEqualityComparer" /> that can compare two nodes for value equality.</value>
        </member>
        <member name="P:Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JToken.Parent">
            <summary>
            Gets or sets the parent.
            </summary>
            <value>The parent.</value>
        </member>
        <member name="P:Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JToken.Root">
            <summary>
            Gets the root <see cref="T:Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JToken" /> of this <see cref="T:Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JToken" />.
            </summary>
            <value>The root <see cref="T:Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JToken" /> of this <see cref="T:Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JToken" />.</value>
        </member>
        <member name="P:Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JToken.Type">
            <summary>
            Gets the node type for this <see cref="T:Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JToken" />.
            </summary>
            <value>The type.</value>
        </member>
        <member name="P:Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JToken.HasValues">
            <summary>
            Gets a value indicating whether this token has child tokens.
            </summary>
            <value>
            	<c>true</c> if this token has child values; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="M:Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JToken.DeepEquals(Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JToken,Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JToken)">
            <summary>
            Compares the values of two tokens, including the values of all descendant tokens.
            </summary>
            <param name="t1">The first <see cref="T:Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JToken" /> to compare.</param>
            <param name="t2">The second <see cref="T:Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JToken" /> to compare.</param>
            <returns><c>true</c> if the tokens are equal; otherwise <c>false</c>.</returns>
        </member>
        <member name="P:Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JToken.Next">
            <summary>
            Gets the next sibling token of this node.
            </summary>
            <value>The <see cref="T:Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JToken" /> that contains the next sibling token.</value>
        </member>
        <member name="P:Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JToken.Previous">
            <summary>
            Gets the previous sibling token of this node.
            </summary>
            <value>The <see cref="T:Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JToken" /> that contains the previous sibling token.</value>
        </member>
        <member name="P:Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JToken.Path">
            <summary>
            Gets the path of the JSON token.
            </summary>
        </member>
        <member name="M:Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JToken.AddAfterSelf(System.Object)">
            <summary>
            Adds the specified content immediately after this token.
            </summary>
            <param name="content">
            A content object that contains simple content or a collection of content objects to be added
            after this token.
            </param>
        </member>
        <member name="M:Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JToken.AddBeforeSelf(System.Object)">
            <summary>
            Adds the specified content immediately before this token.
            </summary>
            <param name="content">
            A content object that contains simple content or a collection of content objects to be added
            before this token.
            </param>
        </member>
        <member name="M:Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JToken.Ancestors">
            <summary>
            Returns a collection of the ancestor tokens of this token.
            </summary>
            <returns>A collection of the ancestor tokens of this token.</returns>
        </member>
        <member name="M:Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JToken.AncestorsAndSelf">
            <summary>
            Returns a collection of tokens that contain this token, and the ancestors of this token.
            </summary>
            <returns>A collection of tokens that contain this token, and the ancestors of this token.</returns>
        </member>
        <member name="M:Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JToken.AfterSelf">
            <summary>
            Returns a collection of the sibling tokens after this token, in document order.
            </summary>
            <returns>A collection of the sibling tokens after this tokens, in document order.</returns>
        </member>
        <member name="M:Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JToken.BeforeSelf">
            <summary>
            Returns a collection of the sibling tokens before this token, in document order.
            </summary>
            <returns>A collection of the sibling tokens before this token, in document order.</returns>
        </member>
        <member name="P:Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JToken.Item(System.Object)">
            <summary>
            Gets the <see cref="T:Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JToken" /> with the specified key.
            </summary>
            <value>The <see cref="T:Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JToken" /> with the specified key.</value>
        </member>
        <member name="M:Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JToken.Value``1(System.Object)">
            <summary>
            Gets the <see cref="T:Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JToken" /> with the specified key converted to the specified type.
            </summary>
            <typeparam name="T">The type to convert the token to.</typeparam>
            <param name="key">The token key.</param>
            <returns>The converted token value.</returns>
        </member>
        <member name="P:Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JToken.First">
            <summary>
            Get the first child token of this token.
            </summary>
            <value>A <see cref="T:Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JToken" /> containing the first child token of the <see cref="T:Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JToken" />.</value>
        </member>
        <member name="P:Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JToken.Last">
            <summary>
            Get the last child token of this token.
            </summary>
            <value>A <see cref="T:Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JToken" /> containing the last child token of the <see cref="T:Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JToken" />.</value>
        </member>
        <member name="M:Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JToken.Children">
            <summary>
            Returns a collection of the child tokens of this token, in document order.
            </summary>
            <returns>
            An <see cref="T:System.Collections.Generic.IEnumerable`1" /> of <see cref="T:Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JToken" /> containing the child tokens of this
            <see cref="T:Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JToken" />, in document order.
            </returns>
        </member>
        <member name="M:Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JToken.Children``1">
            <summary>
            Returns a collection of the child tokens of this token, in document order, filtered by the specified type.
            </summary>
            <typeparam name="T">The type to filter the child tokens on.</typeparam>
            <returns>A <see cref="T:Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JEnumerable`1" /> containing the child tokens of this <see cref="T:Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JToken" />, in document order.</returns>
        </member>
        <member name="M:Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JToken.Values``1">
            <summary>
            Returns a collection of the child values of this token, in document order.
            </summary>
            <typeparam name="T">The type to convert the values to.</typeparam>
            <returns>A <see cref="T:System.Collections.Generic.IEnumerable`1" /> containing the child values of this <see cref="T:Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JToken" />, in document order.</returns>
        </member>
        <member name="M:Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JToken.Remove">
            <summary>
            Removes this token from its parent.
            </summary>
        </member>
        <member name="M:Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JToken.Replace(Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JToken)">
            <summary>
            Replaces this token with the specified token.
            </summary>
            <param name="value">The value.</param>
        </member>
        <member name="M:Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JToken.WriteTo(Elastic.Apm.Libraries.Newtonsoft.Json.JsonWriter,Elastic.Apm.Libraries.Newtonsoft.Json.JsonConverter[])">
            <summary>
            Writes this token to a <see cref="T:Elastic.Apm.Libraries.Newtonsoft.Json.JsonWriter" />.
            </summary>
            <param name="writer">A <see cref="T:Elastic.Apm.Libraries.Newtonsoft.Json.JsonWriter" /> into which this method will write.</param>
            <param name="converters">A collection of <see cref="T:Elastic.Apm.Libraries.Newtonsoft.Json.JsonConverter" /> which will be used when writing the token.</param>
        </member>
        <member name="M:Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JToken.ToString">
            <summary>
            Returns the indented JSON for this token.
            </summary>
            <remarks>
            <c>ToString()</c> returns a non-JSON string value for tokens with a type of <see cref="F:Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JTokenType.String" />.
            If you want the JSON for all token types then you should use <see cref="M:Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JToken.WriteTo(Elastic.Apm.Libraries.Newtonsoft.Json.JsonWriter,Elastic.Apm.Libraries.Newtonsoft.Json.JsonConverter[])" />.
            </remarks>
            <returns>
            The indented JSON for this token.
            </returns>
        </member>
        <member name="M:Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JToken.ToString(Elastic.Apm.Libraries.Newtonsoft.Json.Formatting,Elastic.Apm.Libraries.Newtonsoft.Json.JsonConverter[])">
            <summary>
            Returns the JSON for this token using the given formatting and converters.
            </summary>
            <param name="formatting">Indicates how the output should be formatted.</param>
            <param name="converters">A collection of <see cref="T:Elastic.Apm.Libraries.Newtonsoft.Json.JsonConverter" />s which will be used when writing the token.</param>
            <returns>The JSON for this token using the given formatting and converters.</returns>
        </member>
        <member name="M:Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JToken.op_Explicit(Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JToken)~System.Boolean">
            <summary>
            Performs an explicit conversion from <see cref="T:Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JToken" /> to <see cref="T:System.Boolean" />.
            </summary>
            <param name="value">The value.</param>
            <returns>The result of the conversion.</returns>
        </member>
        <member name="M:Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JToken.op_Explicit(Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JToken)~System.DateTimeOffset">
            <summary>
            Performs an explicit conversion from <see cref="T:Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JToken"/> to <see cref="T:System.DateTimeOffset"/>.
            </summary>
            <param name="value">The value.</param>
            <returns>The result of the conversion.</returns>
        </member>
        <member name="M:Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JToken.op_Explicit(Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JToken)~System.Nullable{System.Boolean}">
            <summary>
            Performs an explicit conversion from <see cref="T:Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JToken" /> to <see cref="T:System.Nullable`1" /> of <see cref="T:System.Boolean" />.
            </summary>
            <param name="value">The value.</param>
            <returns>The result of the conversion.</returns>
        </member>
        <member name="M:Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JToken.op_Explicit(Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JToken)~System.Int64">
            <summary>
            Performs an explicit conversion from <see cref="T:Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JToken" /> to <see cref="T:System.Nullable`1" /> of <see cref="T:System.Int64" />.
            </summary>
            <param name="value">The value.</param>
            <returns>The result of the conversion.</returns>
        </member>
        <member name="M:Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JToken.op_Explicit(Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JToken)~System.Nullable{System.DateTime}">
            <summary>
            Performs an explicit conversion from <see cref="T:Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JToken" /> to <see cref="T:System.Nullable`1" /> of <see cref="T:System.DateTime" />.
            </summary>
            <param name="value">The value.</param>
            <returns>The result of the conversion.</returns>
        </member>
        <member name="M:Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JToken.op_Explicit(Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JToken)~System.Nullable{System.DateTimeOffset}">
            <summary>
            Performs an explicit conversion from <see cref="T:Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JToken"/> to <see cref="T:System.Nullable`1"/> of <see cref="T:System.DateTimeOffset"/>.
            </summary>
            <param name="value">The value.</param>
            <returns>The result of the conversion.</returns>
        </member>
        <member name="M:Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JToken.op_Explicit(Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JToken)~System.Nullable{System.Decimal}">
            <summary>
            Performs an explicit conversion from <see cref="T:Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JToken" /> to <see cref="T:System.Nullable`1" /> of <see cref="T:System.Decimal" />.
            </summary>
            <param name="value">The value.</param>
            <returns>The result of the conversion.</returns>
        </member>
        <member name="M:Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JToken.op_Explicit(Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JToken)~System.Nullable{System.Double}">
            <summary>
            Performs an explicit conversion from <see cref="T:Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JToken" /> to <see cref="T:System.Nullable`1" /> of <see cref="T:System.Double" />.
            </summary>
            <param name="value">The value.</param>
            <returns>The result of the conversion.</returns>
        </member>
        <member name="M:Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JToken.op_Explicit(Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JToken)~System.Nullable{System.Char}">
            <summary>
            Performs an explicit conversion from <see cref="T:Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JToken" /> to <see cref="T:System.Nullable`1" /> of <see cref="T:System.Char" />.
            </summary>
            <param name="value">The value.</param>
            <returns>The result of the conversion.</returns>
        </member>
        <member name="M:Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JToken.op_Explicit(Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JToken)~System.Int32">
            <summary>
            Performs an explicit conversion from <see cref="T:Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JToken" /> to <see cref="T:System.Int32" />.
            </summary>
            <param name="value">The value.</param>
            <returns>The result of the conversion.</returns>
        </member>
        <member name="M:Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JToken.op_Explicit(Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JToken)~System.Int16">
            <summary>
            Performs an explicit conversion from <see cref="T:Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JToken" /> to <see cref="T:System.Int16" />.
            </summary>
            <param name="value">The value.</param>
            <returns>The result of the conversion.</returns>
        </member>
        <member name="M:Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JToken.op_Explicit(Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JToken)~System.UInt16">
            <summary>
            Performs an explicit conversion from <see cref="T:Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JToken" /> to <see cref="T:System.UInt16" />.
            </summary>
            <param name="value">The value.</param>
            <returns>The result of the conversion.</returns>
        </member>
        <member name="M:Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JToken.op_Explicit(Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JToken)~System.Char">
            <summary>
            Performs an explicit conversion from <see cref="T:Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JToken" /> to <see cref="T:System.Char" />.
            </summary>
            <param name="value">The value.</param>
            <returns>The result of the conversion.</returns>
        </member>
        <member name="M:Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JToken.op_Explicit(Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JToken)~System.Byte">
            <summary>
            Performs an explicit conversion from <see cref="T:Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JToken" /> to <see cref="T:System.Byte" />.
            </summary>
            <param name="value">The value.</param>
            <returns>The result of the conversion.</returns>
        </member>
        <member name="M:Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JToken.op_Explicit(Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JToken)~System.SByte">
            <summary>
            Performs an explicit conversion from <see cref="T:Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JToken" /> to <see cref="T:System.SByte" />.
            </summary>
            <param name="value">The value.</param>
            <returns>The result of the conversion.</returns>
        </member>
        <member name="M:Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JToken.op_Explicit(Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JToken)~System.Nullable{System.Int32}">
            <summary>
            Performs an explicit conversion from <see cref="T:Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JToken" /> to <see cref="T:System.Nullable`1" /> of <see cref="T:System.Int32" /> .
            </summary>
            <param name="value">The value.</param>
            <returns>The result of the conversion.</returns>
        </member>
        <member name="M:Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JToken.op_Explicit(Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JToken)~System.Nullable{System.Int16}">
            <summary>
            Performs an explicit conversion from <see cref="T:Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JToken" /> to <see cref="T:System.Nullable`1" /> of <see cref="T:System.Int16" />.
            </summary>
            <param name="value">The value.</param>
            <returns>The result of the conversion.</returns>
        </member>
        <member name="M:Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JToken.op_Explicit(Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JToken)~System.Nullable{System.UInt16}">
            <summary>
            Performs an explicit conversion from <see cref="T:Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JToken" /> to <see cref="T:System.Nullable`1" /> of <see cref="T:System.UInt16" />.
            </summary>
            <param name="value">The value.</param>
            <returns>The result of the conversion.</returns>
        </member>
        <member name="M:Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JToken.op_Explicit(Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JToken)~System.Nullable{System.Byte}">
            <summary>
            Performs an explicit conversion from <see cref="T:Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JToken" /> to <see cref="T:System.Nullable`1" /> of <see cref="T:System.Byte" />.
            </summary>
            <param name="value">The value.</param>
            <returns>The result of the conversion.</returns>
        </member>
        <member name="M:Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JToken.op_Explicit(Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JToken)~System.Nullable{System.SByte}">
            <summary>
            Performs an explicit conversion from <see cref="T:Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JToken" /> to <see cref="T:System.Nullable`1" /> of <see cref="T:System.SByte" />.
            </summary>
            <param name="value">The value.</param>
            <returns>The result of the conversion.</returns>
        </member>
        <member name="M:Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JToken.op_Explicit(Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JToken)~System.DateTime">
            <summary>
            Performs an explicit conversion from <see cref="T:Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JToken" /> to <see cref="T:System.Nullable`1" /> of <see cref="T:System.DateTime" />.
            </summary>
            <param name="value">The value.</param>
            <returns>The result of the conversion.</returns>
        </member>
        <member name="M:Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JToken.op_Explicit(Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JToken)~System.Nullable{System.Int64}">
            <summary>
            Performs an explicit conversion from <see cref="T:Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JToken" /> to <see cref="T:System.Nullable`1" /> of <see cref="T:System.Int64" />.
            </summary>
            <param name="value">The value.</param>
            <returns>The result of the conversion.</returns>
        </member>
        <member name="M:Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JToken.op_Explicit(Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JToken)~System.Nullable{System.Single}">
            <summary>
            Performs an explicit conversion from <see cref="T:Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JToken" /> to <see cref="T:System.Nullable`1" /> of <see cref="T:System.Single" />.
            </summary>
            <param name="value">The value.</param>
            <returns>The result of the conversion.</returns>
        </member>
        <member name="M:Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JToken.op_Explicit(Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JToken)~System.Decimal">
            <summary>
            Performs an explicit conversion from <see cref="T:Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JToken" /> to <see cref="T:System.Decimal" />.
            </summary>
            <param name="value">The value.</param>
            <returns>The result of the conversion.</returns>
        </member>
        <member name="M:Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JToken.op_Explicit(Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JToken)~System.Nullable{System.UInt32}">
            <summary>
            Performs an explicit conversion from <see cref="T:Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JToken" /> to <see cref="T:System.Nullable`1" /> of <see cref="T:System.UInt32" />.
            </summary>
            <param name="value">The value.</param>
            <returns>The result of the conversion.</returns>
        </member>
        <member name="M:Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JToken.op_Explicit(Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JToken)~System.Nullable{System.UInt64}">
            <summary>
            Performs an explicit conversion from <see cref="T:Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JToken" /> to <see cref="T:System.Nullable`1" /> of <see cref="T:System.UInt64" />.
            </summary>
            <param name="value">The value.</param>
            <returns>The result of the conversion.</returns>
        </member>
        <member name="M:Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JToken.op_Explicit(Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JToken)~System.Double">
            <summary>
            Performs an explicit conversion from <see cref="T:Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JToken" /> to <see cref="T:System.Double" />.
            </summary>
            <param name="value">The value.</param>
            <returns>The result of the conversion.</returns>
        </member>
        <member name="M:Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JToken.op_Explicit(Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JToken)~System.Single">
            <summary>
            Performs an explicit conversion from <see cref="T:Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JToken" /> to <see cref="T:System.Single" />.
            </summary>
            <param name="value">The value.</param>
            <returns>The result of the conversion.</returns>
        </member>
        <member name="M:Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JToken.op_Explicit(Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JToken)~System.String">
            <summary>
            Performs an explicit conversion from <see cref="T:Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JToken" /> to <see cref="T:System.String" />.
            </summary>
            <param name="value">The value.</param>
            <returns>The result of the conversion.</returns>
        </member>
        <member name="M:Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JToken.op_Explicit(Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JToken)~System.UInt32">
            <summary>
            Performs an explicit conversion from <see cref="T:Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JToken" /> to <see cref="T:System.UInt32" />.
            </summary>
            <param name="value">The value.</param>
            <returns>The result of the conversion.</returns>
        </member>
        <member name="M:Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JToken.op_Explicit(Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JToken)~System.UInt64">
            <summary>
            Performs an explicit conversion from <see cref="T:Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JToken" /> to <see cref="T:System.UInt64" />.
            </summary>
            <param name="value">The value.</param>
            <returns>The result of the conversion.</returns>
        </member>
        <member name="M:Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JToken.op_Explicit(Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JToken)~System.Byte[]">
            <summary>
            Performs an explicit conversion from <see cref="T:Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JToken" /> to <see cref="T:System.Byte" />[].
            </summary>
            <param name="value">The value.</param>
            <returns>The result of the conversion.</returns>
        </member>
        <member name="M:Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JToken.op_Explicit(Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JToken)~System.Guid">
            <summary>
            Performs an explicit conversion from <see cref="T:Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JToken" /> to <see cref="T:System.Guid" />.
            </summary>
            <param name="value">The value.</param>
            <returns>The result of the conversion.</returns>
        </member>
        <member name="M:Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JToken.op_Explicit(Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JToken)~System.Nullable{System.Guid}">
            <summary>
            Performs an explicit conversion from <see cref="T:Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JToken" /> to <see cref="T:System.Nullable`1" /> of <see cref="T:System.Guid" /> .
            </summary>
            <param name="value">The value.</param>
            <returns>The result of the conversion.</returns>
        </member>
        <member name="M:Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JToken.op_Explicit(Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JToken)~System.TimeSpan">
            <summary>
            Performs an explicit conversion from <see cref="T:Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JToken" /> to <see cref="T:System.TimeSpan" />.
            </summary>
            <param name="value">The value.</param>
            <returns>The result of the conversion.</returns>
        </member>
        <member name="M:Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JToken.op_Explicit(Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JToken)~System.Nullable{System.TimeSpan}">
            <summary>
            Performs an explicit conversion from <see cref="T:Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JToken" /> to <see cref="T:System.Nullable`1" /> of <see cref="T:System.TimeSpan" />.
            </summary>
            <param name="value">The value.</param>
            <returns>The result of the conversion.</returns>
        </member>
        <member name="M:Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JToken.op_Explicit(Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JToken)~System.Uri">
            <summary>
            Performs an explicit conversion from <see cref="T:Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JToken" /> to <see cref="T:System.Uri" />.
            </summary>
            <param name="value">The value.</param>
            <returns>The result of the conversion.</returns>
        </member>
        <member name="M:Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JToken.op_Implicit(System.Boolean)~Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JToken">
            <summary>
            Performs an implicit conversion from <see cref="T:System.Boolean" /> to <see cref="T:Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JToken" />.
            </summary>
            <param name="value">The value to create a <see cref="T:Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JValue" /> from.</param>
            <returns>The <see cref="T:Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JValue" /> initialized with the specified value.</returns>
        </member>
        <member name="M:Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JToken.op_Implicit(System.DateTimeOffset)~Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JToken">
            <summary>
            Performs an implicit conversion from <see cref="T:System.DateTimeOffset"/> to <see cref="T:Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JToken"/>.
            </summary>
            <param name="value">The value to create a <see cref="T:Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JValue"/> from.</param>
            <returns>The <see cref="T:Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JValue"/> initialized with the specified value.</returns>
        </member>
        <member name="M:Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JToken.op_Implicit(System.Byte)~Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JToken">
            <summary>
            Performs an implicit conversion from <see cref="T:System.Byte" /> to <see cref="T:Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JToken" />.
            </summary>
            <param name="value">The value to create a <see cref="T:Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JValue" /> from.</param>
            <returns>The <see cref="T:Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JValue" /> initialized with the specified value.</returns>
        </member>
        <member name="M:Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JToken.op_Implicit(System.Nullable{System.Byte})~Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JToken">
            <summary>
            Performs an implicit conversion from <see cref="T:System.Nullable`1" /> of <see cref="T:System.Byte" /> to <see cref="T:Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JToken" />.
            </summary>
            <param name="value">The value to create a <see cref="T:Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JValue" /> from.</param>
            <returns>The <see cref="T:Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JValue" /> initialized with the specified value.</returns>
        </member>
        <member name="M:Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JToken.op_Implicit(System.SByte)~Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JToken">
            <summary>
            Performs an implicit conversion from <see cref="T:System.SByte" /> to <see cref="T:Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JToken" />.
            </summary>
            <param name="value">The value to create a <see cref="T:Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JValue" /> from.</param>
            <returns>The <see cref="T:Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JValue" /> initialized with the specified value.</returns>
        </member>
        <member name="M:Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JToken.op_Implicit(System.Nullable{System.SByte})~Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JToken">
            <summary>
            Performs an implicit conversion from <see cref="T:System.Nullable`1" /> of <see cref="T:System.SByte" /> to <see cref="T:Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JToken" />.
            </summary>
            <param name="value">The value to create a <see cref="T:Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JValue" /> from.</param>
            <returns>The <see cref="T:Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JValue" /> initialized with the specified value.</returns>
        </member>
        <member name="M:Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JToken.op_Implicit(System.Nullable{System.Boolean})~Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JToken">
            <summary>
            Performs an implicit conversion from <see cref="T:System.Nullable`1" /> of <see cref="T:System.Boolean" /> to <see cref="T:Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JToken" />.
            </summary>
            <param name="value">The value to create a <see cref="T:Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JValue" /> from.</param>
            <returns>The <see cref="T:Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JValue" /> initialized with the specified value.</returns>
        </member>
        <member name="M:Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JToken.op_Implicit(System.Int64)~Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JToken">
            <summary>
            Performs an implicit conversion from <see cref="T:System.Nullable`1" /> of <see cref="T:System.Int64" /> to <see cref="T:Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JToken" />.
            </summary>
            <param name="value">The value to create a <see cref="T:Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JValue" /> from.</param>
            <returns>The <see cref="T:Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JValue" /> initialized with the specified value.</returns>
        </member>
        <member name="M:Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JToken.op_Implicit(System.Nullable{System.DateTime})~Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JToken">
            <summary>
            Performs an implicit conversion from <see cref="T:System.Nullable`1" /> of <see cref="T:System.DateTime" /> to <see cref="T:Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JToken" />.
            </summary>
            <param name="value">The value to create a <see cref="T:Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JValue" /> from.</param>
            <returns>The <see cref="T:Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JValue" /> initialized with the specified value.</returns>
        </member>
        <member name="M:Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JToken.op_Implicit(System.Nullable{System.DateTimeOffset})~Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JToken">
            <summary>
            Performs an implicit conversion from <see cref="T:System.Nullable`1"/> of <see cref="T:System.DateTimeOffset"/> to <see cref="T:Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JToken"/>.
            </summary>
            <param name="value">The value to create a <see cref="T:Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JValue"/> from.</param>
            <returns>The <see cref="T:Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JValue"/> initialized with the specified value.</returns>
        </member>
        <member name="M:Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JToken.op_Implicit(System.Nullable{System.Decimal})~Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JToken">
            <summary>
            Performs an implicit conversion from <see cref="T:System.Nullable`1" /> of <see cref="T:System.Decimal" /> to <see cref="T:Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JToken" />.
            </summary>
            <param name="value">The value to create a <see cref="T:Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JValue" /> from.</param>
            <returns>The <see cref="T:Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JValue" /> initialized with the specified value.</returns>
        </member>
        <member name="M:Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JToken.op_Implicit(System.Nullable{System.Double})~Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JToken">
            <summary>
            Performs an implicit conversion from <see cref="T:System.Nullable`1" /> of <see cref="T:System.Double" /> to <see cref="T:Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JToken" />.
            </summary>
            <param name="value">The value to create a <see cref="T:Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JValue" /> from.</param>
            <returns>The <see cref="T:Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JValue" /> initialized with the specified value.</returns>
        </member>
        <member name="M:Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JToken.op_Implicit(System.Int16)~Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JToken">
            <summary>
            Performs an implicit conversion from <see cref="T:System.Int16" /> to <see cref="T:Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JToken" />.
            </summary>
            <param name="value">The value to create a <see cref="T:Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JValue" /> from.</param>
            <returns>The <see cref="T:Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JValue" /> initialized with the specified value.</returns>
        </member>
        <member name="M:Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JToken.op_Implicit(System.UInt16)~Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JToken">
            <summary>
            Performs an implicit conversion from <see cref="T:System.UInt16" /> to <see cref="T:Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JToken" />.
            </summary>
            <param name="value">The value to create a <see cref="T:Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JValue" /> from.</param>
            <returns>The <see cref="T:Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JValue" /> initialized with the specified value.</returns>
        </member>
        <member name="M:Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JToken.op_Implicit(System.Int32)~Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JToken">
            <summary>
            Performs an implicit conversion from <see cref="T:System.Int32" /> to <see cref="T:Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JToken" />.
            </summary>
            <param name="value">The value to create a <see cref="T:Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JValue" /> from.</param>
            <returns>The <see cref="T:Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JValue" /> initialized with the specified value.</returns>
        </member>
        <member name="M:Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JToken.op_Implicit(System.Nullable{System.Int32})~Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JToken">
            <summary>
            Performs an implicit conversion from <see cref="T:System.Nullable`1" /> of <see cref="T:System.Int32" /> to <see cref="T:Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JToken" />.
            </summary>
            <param name="value">The value to create a <see cref="T:Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JValue" /> from.</param>
            <returns>The <see cref="T:Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JValue" /> initialized with the specified value.</returns>
        </member>
        <member name="M:Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JToken.op_Implicit(System.DateTime)~Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JToken">
            <summary>
            Performs an implicit conversion from <see cref="T:System.DateTime" /> to <see cref="T:Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JToken" />.
            </summary>
            <param name="value">The value to create a <see cref="T:Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JValue" /> from.</param>
            <returns>The <see cref="T:Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JValue" /> initialized with the specified value.</returns>
        </member>
        <member name="M:Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JToken.op_Implicit(System.Nullable{System.Int64})~Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JToken">
            <summary>
            Performs an implicit conversion from <see cref="T:System.Nullable`1" /> of <see cref="T:System.Int64" /> to <see cref="T:Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JToken" />.
            </summary>
            <param name="value">The value to create a <see cref="T:Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JValue" /> from.</param>
            <returns>The <see cref="T:Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JValue" /> initialized with the specified value.</returns>
        </member>
        <member name="M:Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JToken.op_Implicit(System.Nullable{System.Single})~Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JToken">
            <summary>
            Performs an implicit conversion from <see cref="T:System.Nullable`1" /> of <see cref="T:System.Single" /> to <see cref="T:Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JToken" />.
            </summary>
            <param name="value">The value to create a <see cref="T:Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JValue" /> from.</param>
            <returns>The <see cref="T:Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JValue" /> initialized with the specified value.</returns>
        </member>
        <member name="M:Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JToken.op_Implicit(System.Decimal)~Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JToken">
            <summary>
            Performs an implicit conversion from <see cref="T:System.Decimal" /> to <see cref="T:Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JToken" />.
            </summary>
            <param name="value">The value to create a <see cref="T:Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JValue" /> from.</param>
            <returns>The <see cref="T:Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JValue" /> initialized with the specified value.</returns>
        </member>
        <member name="M:Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JToken.op_Implicit(System.Nullable{System.Int16})~Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JToken">
            <summary>
            Performs an implicit conversion from <see cref="T:System.Nullable`1" /> of <see cref="T:System.Int16" /> to <see cref="T:Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JToken" />.
            </summary>
            <param name="value">The value to create a <see cref="T:Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JValue" /> from.</param>
            <returns>The <see cref="T:Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JValue" /> initialized with the specified value.</returns>
        </member>
        <member name="M:Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JToken.op_Implicit(System.Nullable{System.UInt16})~Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JToken">
            <summary>
            Performs an implicit conversion from <see cref="T:System.Nullable`1" /> of <see cref="T:System.UInt16" /> to <see cref="T:Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JToken" />.
            </summary>
            <param name="value">The value to create a <see cref="T:Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JValue" /> from.</param>
            <returns>The <see cref="T:Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JValue" /> initialized with the specified value.</returns>
        </member>
        <member name="M:Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JToken.op_Implicit(System.Nullable{System.UInt32})~Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JToken">
            <summary>
            Performs an implicit conversion from <see cref="T:System.Nullable`1" /> of <see cref="T:System.UInt32" /> to <see cref="T:Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JToken" />.
            </summary>
            <param name="value">The value to create a <see cref="T:Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JValue" /> from.</param>
            <returns>The <see cref="T:Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JValue" /> initialized with the specified value.</returns>
        </member>
        <member name="M:Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JToken.op_Implicit(System.Nullable{System.UInt64})~Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JToken">
            <summary>
            Performs an implicit conversion from <see cref="T:System.Nullable`1" /> of <see cref="T:System.UInt64" /> to <see cref="T:Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JToken" />.
            </summary>
            <param name="value">The value to create a <see cref="T:Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JValue" /> from.</param>
            <returns>The <see cref="T:Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JValue" /> initialized with the specified value.</returns>
        </member>
        <member name="M:Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JToken.op_Implicit(System.Double)~Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JToken">
            <summary>
            Performs an implicit conversion from <see cref="T:System.Double" /> to <see cref="T:Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JToken" />.
            </summary>
            <param name="value">The value to create a <see cref="T:Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JValue" /> from.</param>
            <returns>The <see cref="T:Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JValue" /> initialized with the specified value.</returns>
        </member>
        <member name="M:Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JToken.op_Implicit(System.Single)~Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JToken">
            <summary>
            Performs an implicit conversion from <see cref="T:System.Single" /> to <see cref="T:Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JToken" />.
            </summary>
            <param name="value">The value to create a <see cref="T:Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JValue" /> from.</param>
            <returns>The <see cref="T:Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JValue" /> initialized with the specified value.</returns>
        </member>
        <member name="M:Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JToken.op_Implicit(System.String)~Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JToken">
            <summary>
            Performs an implicit conversion from <see cref="T:System.String" /> to <see cref="T:Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JToken" />.
            </summary>
            <param name="value">The value to create a <see cref="T:Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JValue" /> from.</param>
            <returns>The <see cref="T:Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JValue" /> initialized with the specified value.</returns>
        </member>
        <member name="M:Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JToken.op_Implicit(System.UInt32)~Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JToken">
            <summary>
            Performs an implicit conversion from <see cref="T:System.UInt32" /> to <see cref="T:Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JToken" />.
            </summary>
            <param name="value">The value to create a <see cref="T:Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JValue" /> from.</param>
            <returns>The <see cref="T:Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JValue" /> initialized with the specified value.</returns>
        </member>
        <member name="M:Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JToken.op_Implicit(System.UInt64)~Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JToken">
            <summary>
            Performs an implicit conversion from <see cref="T:System.UInt64" /> to <see cref="T:Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JToken" />.
            </summary>
            <param name="value">The value to create a <see cref="T:Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JValue" /> from.</param>
            <returns>The <see cref="T:Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JValue" /> initialized with the specified value.</returns>
        </member>
        <member name="M:Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JToken.op_Implicit(System.Byte[])~Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JToken">
            <summary>
            Performs an implicit conversion from <see cref="T:System.Byte" />[] to <see cref="T:Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JToken" />.
            </summary>
            <param name="value">The value to create a <see cref="T:Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JValue" /> from.</param>
            <returns>The <see cref="T:Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JValue" /> initialized with the specified value.</returns>
        </member>
        <member name="M:Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JToken.op_Implicit(System.Uri)~Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JToken">
            <summary>
            Performs an implicit conversion from <see cref="T:System.Uri" /> to <see cref="T:Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JToken" />.
            </summary>
            <param name="value">The value to create a <see cref="T:Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JValue" /> from.</param>
            <returns>The <see cref="T:Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JValue" /> initialized with the specified value.</returns>
        </member>
        <member name="M:Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JToken.op_Implicit(System.TimeSpan)~Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JToken">
            <summary>
            Performs an implicit conversion from <see cref="T:System.TimeSpan" /> to <see cref="T:Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JToken" />.
            </summary>
            <param name="value">The value to create a <see cref="T:Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JValue" /> from.</param>
            <returns>The <see cref="T:Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JValue" /> initialized with the specified value.</returns>
        </member>
        <member name="M:Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JToken.op_Implicit(System.Nullable{System.TimeSpan})~Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JToken">
            <summary>
            Performs an implicit conversion from <see cref="T:System.Nullable`1" /> of <see cref="T:System.TimeSpan" /> to <see cref="T:Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JToken" />.
            </summary>
            <param name="value">The value to create a <see cref="T:Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JValue" /> from.</param>
            <returns>The <see cref="T:Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JValue" /> initialized with the specified value.</returns>
        </member>
        <member name="M:Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JToken.op_Implicit(System.Guid)~Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JToken">
            <summary>
            Performs an implicit conversion from <see cref="T:System.Guid" /> to <see cref="T:Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JToken" />.
            </summary>
            <param name="value">The value to create a <see cref="T:Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JValue" /> from.</param>
            <returns>The <see cref="T:Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JValue" /> initialized with the specified value.</returns>
        </member>
        <member name="M:Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JToken.op_Implicit(System.Nullable{System.Guid})~Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JToken">
            <summary>
            Performs an implicit conversion from <see cref="T:System.Nullable`1" /> of <see cref="T:System.Guid" /> to <see cref="T:Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JToken" />.
            </summary>
            <param name="value">The value to create a <see cref="T:Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JValue" /> from.</param>
            <returns>The <see cref="T:Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JValue" /> initialized with the specified value.</returns>
        </member>
        <member name="M:Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JToken.CreateReader">
            <summary>
            Creates a <see cref="T:Elastic.Apm.Libraries.Newtonsoft.Json.JsonReader" /> for this token.
            </summary>
            <returns>A <see cref="T:Elastic.Apm.Libraries.Newtonsoft.Json.JsonReader" /> that can be used to read this token and its descendants.</returns>
        </member>
        <member name="M:Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JToken.FromObject(System.Object)">
            <summary>
            Creates a <see cref="T:Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JToken" /> from an object.
            </summary>
            <param name="o">The object that will be used to create <see cref="T:Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JToken" />.</param>
            <returns>A <see cref="T:Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JToken" /> with the value of the specified object.</returns>
        </member>
        <member name="M:Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JToken.FromObject(System.Object,Elastic.Apm.Libraries.Newtonsoft.Json.JsonSerializer)">
            <summary>
            Creates a <see cref="T:Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JToken" /> from an object using the specified <see cref="T:Elastic.Apm.Libraries.Newtonsoft.Json.JsonSerializer" />.
            </summary>
            <param name="o">The object that will be used to create <see cref="T:Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JToken" />.</param>
            <param name="jsonSerializer">The <see cref="T:Elastic.Apm.Libraries.Newtonsoft.Json.JsonSerializer" /> that will be used when reading the object.</param>
            <returns>A <see cref="T:Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JToken" /> with the value of the specified object.</returns>
        </member>
        <member name="M:Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JToken.ToObject``1">
            <summary>
            Creates an instance of the specified .NET type from the <see cref="T:Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JToken" />.
            </summary>
            <typeparam name="T">The object type that the token will be deserialized to.</typeparam>
            <returns>The new object created from the JSON value.</returns>
        </member>
        <member name="M:Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JToken.ToObject(System.Type)">
            <summary>
            Creates an instance of the specified .NET type from the <see cref="T:Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JToken" />.
            </summary>
            <param name="objectType">The object type that the token will be deserialized to.</param>
            <returns>The new object created from the JSON value.</returns>
        </member>
        <member name="M:Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JToken.ToObject``1(Elastic.Apm.Libraries.Newtonsoft.Json.JsonSerializer)">
            <summary>
            Creates an instance of the specified .NET type from the <see cref="T:Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JToken" /> using the specified
            <see cref="T:Elastic.Apm.Libraries.Newtonsoft.Json.JsonSerializer" />.
            </summary>
            <typeparam name="T">The object type that the token will be deserialized to.</typeparam>
            <param name="jsonSerializer">The <see cref="T:Elastic.Apm.Libraries.Newtonsoft.Json.JsonSerializer" /> that will be used when creating the object.</param>
            <returns>The new object created from the JSON value.</returns>
        </member>
        <member name="M:Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JToken.ToObject(System.Type,Elastic.Apm.Libraries.Newtonsoft.Json.JsonSerializer)">
            <summary>
            Creates an instance of the specified .NET type from the <see cref="T:Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JToken" /> using the specified
            <see cref="T:Elastic.Apm.Libraries.Newtonsoft.Json.JsonSerializer" />.
            </summary>
            <param name="objectType">The object type that the token will be deserialized to.</param>
            <param name="jsonSerializer">The <see cref="T:Elastic.Apm.Libraries.Newtonsoft.Json.JsonSerializer" /> that will be used when creating the object.</param>
            <returns>The new object created from the JSON value.</returns>
        </member>
        <member name="M:Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JToken.ReadFrom(Elastic.Apm.Libraries.Newtonsoft.Json.JsonReader)">
            <summary>
            Creates a <see cref="T:Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JToken" /> from a <see cref="T:Elastic.Apm.Libraries.Newtonsoft.Json.JsonReader" />.
            </summary>
            <param name="reader">A <see cref="T:Elastic.Apm.Libraries.Newtonsoft.Json.JsonReader" /> positioned at the token to read into this <see cref="T:Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JToken" />.</param>
            <returns>
            A <see cref="T:Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JToken" /> that contains the token and its descendant tokens
            that were read from the reader. The runtime type of the token is determined
            by the token type of the first token encountered in the reader.
            </returns>
        </member>
        <member name="M:Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JToken.ReadFrom(Elastic.Apm.Libraries.Newtonsoft.Json.JsonReader,Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JsonLoadSettings)">
            <summary>
            Creates a <see cref="T:Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JToken" /> from a <see cref="T:Elastic.Apm.Libraries.Newtonsoft.Json.JsonReader" />.
            </summary>
            <param name="reader">An <see cref="T:Elastic.Apm.Libraries.Newtonsoft.Json.JsonReader" /> positioned at the token to read into this <see cref="T:Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JToken" />.</param>
            <param name="settings">
            The <see cref="T:Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JsonLoadSettings" /> used to load the JSON.
            If this is <c>null</c>, default load settings will be used.
            </param>
            <returns>
            A <see cref="T:Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JToken" /> that contains the token and its descendant tokens
            that were read from the reader. The runtime type of the token is determined
            by the token type of the first token encountered in the reader.
            </returns>
        </member>
        <member name="M:Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JToken.Parse(System.String)">
            <summary>
            Load a <see cref="T:Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JToken" /> from a string that contains JSON.
            </summary>
            <param name="json">A <see cref="T:System.String" /> that contains JSON.</param>
            <returns>A <see cref="T:Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JToken" /> populated from the string that contains JSON.</returns>
        </member>
        <member name="M:Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JToken.Parse(System.String,Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JsonLoadSettings)">
            <summary>
            Load a <see cref="T:Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JToken" /> from a string that contains JSON.
            </summary>
            <param name="json">A <see cref="T:System.String" /> that contains JSON.</param>
            <param name="settings">
            The <see cref="T:Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JsonLoadSettings" /> used to load the JSON.
            If this is <c>null</c>, default load settings will be used.
            </param>
            <returns>A <see cref="T:Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JToken" /> populated from the string that contains JSON.</returns>
        </member>
        <member name="M:Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JToken.Load(Elastic.Apm.Libraries.Newtonsoft.Json.JsonReader,Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JsonLoadSettings)">
            <summary>
            Creates a <see cref="T:Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JToken" /> from a <see cref="T:Elastic.Apm.Libraries.Newtonsoft.Json.JsonReader" />.
            </summary>
            <param name="reader">A <see cref="T:Elastic.Apm.Libraries.Newtonsoft.Json.JsonReader" /> positioned at the token to read into this <see cref="T:Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JToken" />.</param>
            <param name="settings">
            The <see cref="T:Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JsonLoadSettings" /> used to load the JSON.
            If this is <c>null</c>, default load settings will be used.
            </param>
            <returns>
            A <see cref="T:Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JToken" /> that contains the token and its descendant tokens
            that were read from the reader. The runtime type of the token is determined
            by the token type of the first token encountered in the reader.
            </returns>
        </member>
        <member name="M:Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JToken.Load(Elastic.Apm.Libraries.Newtonsoft.Json.JsonReader)">
            <summary>
            Creates a <see cref="T:Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JToken" /> from a <see cref="T:Elastic.Apm.Libraries.Newtonsoft.Json.JsonReader" />.
            </summary>
            <param name="reader">A <see cref="T:Elastic.Apm.Libraries.Newtonsoft.Json.JsonReader" /> positioned at the token to read into this <see cref="T:Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JToken" />.</param>
            <returns>
            A <see cref="T:Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JToken" /> that contains the token and its descendant tokens
            that were read from the reader. The runtime type of the token is determined
            by the token type of the first token encountered in the reader.
            </returns>
        </member>
        <member name="M:Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JToken.SelectToken(System.String)">
            <summary>
            Selects a <see cref="T:Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JToken" /> using a JSONPath expression. Selects the token that matches the object path.
            </summary>
            <param name="path">
            A <see cref="T:System.String" /> that contains a JSONPath expression.
            </param>
            <returns>A <see cref="T:Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JToken" />, or <c>null</c>.</returns>
        </member>
        <member name="M:Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JToken.SelectToken(System.String,System.Boolean)">
            <summary>
            Selects a <see cref="T:Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JToken" /> using a JSONPath expression. Selects the token that matches the object path.
            </summary>
            <param name="path">
            A <see cref="T:System.String" /> that contains a JSONPath expression.
            </param>
            <param name="errorWhenNoMatch">
            A flag to indicate whether an error should be thrown if no tokens are found when
            evaluating part of the expression.
            </param>
            <returns>A <see cref="T:Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JToken" />.</returns>
        </member>
        <member name="M:Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JToken.SelectToken(System.String,Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JsonSelectSettings)">
            <summary>
            Selects a <see cref="T:Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JToken" /> using a JSONPath expression. Selects the token that matches the object path.
            </summary>
            <param name="path">
            A <see cref="T:System.String" /> that contains a JSONPath expression.
            </param>
            <param name="settings">The <see cref="T:Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JsonSelectSettings" /> used to select tokens.</param>
            <returns>A <see cref="T:Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JToken" />.</returns>
        </member>
        <member name="M:Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JToken.SelectTokens(System.String)">
            <summary>
            Selects a collection of elements using a JSONPath expression.
            </summary>
            <param name="path">
            A <see cref="T:System.String" /> that contains a JSONPath expression.
            </param>
            <returns>An <see cref="T:System.Collections.Generic.IEnumerable`1" /> of <see cref="T:Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JToken" /> that contains the selected elements.</returns>
        </member>
        <member name="M:Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JToken.SelectTokens(System.String,System.Boolean)">
            <summary>
            Selects a collection of elements using a JSONPath expression.
            </summary>
            <param name="path">
            A <see cref="T:System.String" /> that contains a JSONPath expression.
            </param>
            <param name="errorWhenNoMatch">
            A flag to indicate whether an error should be thrown if no tokens are found when
            evaluating part of the expression.
            </param>
            <returns>An <see cref="T:System.Collections.Generic.IEnumerable`1" /> of <see cref="T:Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JToken" /> that contains the selected elements.</returns>
        </member>
        <member name="M:Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JToken.SelectTokens(System.String,Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JsonSelectSettings)">
            <summary>
            Selects a collection of elements using a JSONPath expression.
            </summary>
            <param name="path">
            A <see cref="T:System.String" /> that contains a JSONPath expression.
            </param>
            <param name="settings">The <see cref="T:Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JsonSelectSettings" /> used to select tokens.</param>
            <returns>An <see cref="T:System.Collections.Generic.IEnumerable`1" /> of <see cref="T:Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JToken" /> that contains the selected elements.</returns>
        </member>
        <member name="M:Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JToken.GetMetaObject(System.Linq.Expressions.Expression)">
            <summary>
            Returns the <see cref="T:System.Dynamic.DynamicMetaObject"/> responsible for binding operations performed on this object.
            </summary>
            <param name="parameter">The expression tree representation of the runtime value.</param>
            <returns>
            The <see cref="T:System.Dynamic.DynamicMetaObject"/> to bind this object.
            </returns>
        </member>
        <member name="M:Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JToken.System#Dynamic#IDynamicMetaObjectProvider#GetMetaObject(System.Linq.Expressions.Expression)">
            <summary>
            Returns the <see cref="T:System.Dynamic.DynamicMetaObject"/> responsible for binding operations performed on this object.
            </summary>
            <param name="parameter">The expression tree representation of the runtime value.</param>
            <returns>
            The <see cref="T:System.Dynamic.DynamicMetaObject"/> to bind this object.
            </returns>
        </member>
        <member name="M:Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JToken.DeepClone">
            <summary>
            Creates a new instance of the <see cref="T:Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JToken" />. All child tokens are recursively cloned.
            </summary>
            <returns>A new instance of the <see cref="T:Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JToken" />.</returns>
        </member>
        <member name="M:Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JToken.AddAnnotation(System.Object)">
            <summary>
            Adds an object to the annotation list of this <see cref="T:Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JToken" />.
            </summary>
            <param name="annotation">The annotation to add.</param>
        </member>
        <member name="M:Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JToken.Annotation``1">
            <summary>
            Get the first annotation object of the specified type from this <see cref="T:Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JToken" />.
            </summary>
            <typeparam name="T">The type of the annotation to retrieve.</typeparam>
            <returns>
            The first annotation object that matches the specified type, or <c>null</c> if no annotation is of the
            specified type.
            </returns>
        </member>
        <member name="M:Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JToken.Annotation(System.Type)">
            <summary>
            Gets the first annotation object of the specified type from this <see cref="T:Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JToken" />.
            </summary>
            <param name="type">The <see cref="P:Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JToken.Type" /> of the annotation to retrieve.</param>
            <returns>
            The first annotation object that matches the specified type, or <c>null</c> if no annotation is of the
            specified type.
            </returns>
        </member>
        <member name="M:Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JToken.Annotations``1">
            <summary>
            Gets a collection of annotations of the specified type for this <see cref="T:Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JToken" />.
            </summary>
            <typeparam name="T">The type of the annotations to retrieve.</typeparam>
            <returns>An <see cref="T:System.Collections.Generic.IEnumerable`1" /> that contains the annotations for this <see cref="T:Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JToken" />.</returns>
        </member>
        <member name="M:Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JToken.Annotations(System.Type)">
            <summary>
            Gets a collection of annotations of the specified type for this <see cref="T:Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JToken" />.
            </summary>
            <param name="type">The <see cref="P:Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JToken.Type" /> of the annotations to retrieve.</param>
            <returns>
            An <see cref="T:System.Collections.Generic.IEnumerable`1" /> of <see cref="T:System.Object" /> that contains the annotations that match the
            specified type for this <see cref="T:Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JToken" />.
            </returns>
        </member>
        <member name="M:Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JToken.RemoveAnnotations``1">
            <summary>
            Removes the annotations of the specified type from this <see cref="T:Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JToken" />.
            </summary>
            <typeparam name="T">The type of annotations to remove.</typeparam>
        </member>
        <member name="M:Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JToken.RemoveAnnotations(System.Type)">
            <summary>
            Removes the annotations of the specified type from this <see cref="T:Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JToken" />.
            </summary>
            <param name="type">The <see cref="P:Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JToken.Type" /> of annotations to remove.</param>
        </member>
        <member name="T:Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JTokenEqualityComparer">
            <summary>
            Compares tokens to determine whether they are equal.
            </summary>
        </member>
        <member name="M:Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JTokenEqualityComparer.Equals(Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JToken,Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JToken)">
            <summary>
            Determines whether the specified objects are equal.
            </summary>
            <param name="x">The first object of type <see cref="T:Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JToken" /> to compare.</param>
            <param name="y">The second object of type <see cref="T:Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JToken" /> to compare.</param>
            <returns>
            <c>true</c> if the specified objects are equal; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JTokenEqualityComparer.GetHashCode(Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JToken)">
            <summary>
            Returns a hash code for the specified object.
            </summary>
            <param name="obj">The <see cref="T:System.Object" /> for which a hash code is to be returned.</param>
            <returns>A hash code for the specified object.</returns>
            <exception cref="T:System.ArgumentNullException">
            The type of <paramref name="obj" /> is a reference type and
            <paramref name="obj" /> is <c>null</c>.
            </exception>
        </member>
        <member name="T:Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JTokenReader">
            <summary>
            Represents a reader that provides fast, non-cached, forward-only access to serialized JSON data.
            </summary>
        </member>
        <member name="M:Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JTokenReader.#ctor(Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JToken)">
            <summary>
            Initializes a new instance of the <see cref="T:Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JTokenReader" /> class.
            </summary>
            <param name="token">The token to read from.</param>
        </member>
        <member name="M:Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JTokenReader.#ctor(Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JToken,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JTokenReader" /> class.
            </summary>
            <param name="token">The token to read from.</param>
            <param name="initialPath">The initial path of the token. It is prepended to the returned <see cref="P:Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JTokenReader.Path" />.</param>
        </member>
        <member name="P:Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JTokenReader.CurrentToken">
            <summary>
            Gets the <see cref="T:Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JToken" /> at the reader's current position.
            </summary>
        </member>
        <member name="P:Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JTokenReader.Path">
            <summary>
            Gets the path of the current JSON token.
            </summary>
        </member>
        <member name="M:Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JTokenReader.Read">
            <summary>
            Reads the next JSON token from the underlying <see cref="T:Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JToken" />.
            </summary>
            <returns>
            <c>true</c> if the next token was read successfully; <c>false</c> if there are no more tokens to read.
            </returns>
        </member>
        <member name="T:Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JTokenType">
            <summary>
            Specifies the type of token.
            </summary>
        </member>
        <member name="F:Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JTokenType.None">
            <summary>
            No token type has been set.
            </summary>
        </member>
        <member name="F:Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JTokenType.Object">
            <summary>
            A JSON object.
            </summary>
        </member>
        <member name="F:Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JTokenType.Array">
            <summary>
            A JSON array.
            </summary>
        </member>
        <member name="F:Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JTokenType.Constructor">
            <summary>
            A JSON constructor.
            </summary>
        </member>
        <member name="F:Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JTokenType.Property">
            <summary>
            A JSON object property.
            </summary>
        </member>
        <member name="F:Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JTokenType.Comment">
            <summary>
            A comment.
            </summary>
        </member>
        <member name="F:Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JTokenType.Integer">
            <summary>
            An integer value.
            </summary>
        </member>
        <member name="F:Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JTokenType.Float">
            <summary>
            A float value.
            </summary>
        </member>
        <member name="F:Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JTokenType.String">
            <summary>
            A string value.
            </summary>
        </member>
        <member name="F:Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JTokenType.Boolean">
            <summary>
            A boolean value.
            </summary>
        </member>
        <member name="F:Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JTokenType.Null">
            <summary>
            A null value.
            </summary>
        </member>
        <member name="F:Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JTokenType.Undefined">
            <summary>
            An undefined value.
            </summary>
        </member>
        <member name="F:Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JTokenType.Date">
            <summary>
            A date value.
            </summary>
        </member>
        <member name="F:Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JTokenType.Raw">
            <summary>
            A raw JSON value.
            </summary>
        </member>
        <member name="F:Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JTokenType.Bytes">
            <summary>
            A collection of bytes value.
            </summary>
        </member>
        <member name="F:Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JTokenType.Guid">
            <summary>
            A Guid value.
            </summary>
        </member>
        <member name="F:Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JTokenType.Uri">
            <summary>
            A Uri value.
            </summary>
        </member>
        <member name="F:Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JTokenType.TimeSpan">
            <summary>
            A TimeSpan value.
            </summary>
        </member>
        <member name="T:Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JTokenWriter">
            <summary>
            Represents a writer that provides a fast, non-cached, forward-only way of generating JSON data.
            </summary>
        </member>
        <member name="P:Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JTokenWriter.CurrentToken">
            <summary>
            Gets the <see cref="T:Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JToken" /> at the writer's current position.
            </summary>
        </member>
        <member name="P:Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JTokenWriter.Token">
            <summary>
            Gets the token being written.
            </summary>
            <value>The token being written.</value>
        </member>
        <member name="M:Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JTokenWriter.#ctor(Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JContainer)">
            <summary>
            Initializes a new instance of the <see cref="T:Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JTokenWriter" /> class writing to the given <see cref="T:Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JContainer" />.
            </summary>
            <param name="container">The container being written to.</param>
        </member>
        <member name="M:Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JTokenWriter.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JTokenWriter" /> class.
            </summary>
        </member>
        <member name="M:Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JTokenWriter.Flush">
            <summary>
            Flushes whatever is in the buffer to the underlying <see cref="T:Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JContainer" />.
            </summary>
        </member>
        <member name="M:Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JTokenWriter.Close">
            <summary>
            Closes this writer.
            If <see cref="P:Elastic.Apm.Libraries.Newtonsoft.Json.JsonWriter.AutoCompleteOnClose" /> is set to <c>true</c>, the JSON is auto-completed.
            </summary>
            <remarks>
            Setting <see cref="P:Elastic.Apm.Libraries.Newtonsoft.Json.JsonWriter.CloseOutput" /> to <c>true</c> has no additional effect, since the underlying
            <see cref="T:Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JContainer" /> is a type that cannot be closed.
            </remarks>
        </member>
        <member name="M:Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JTokenWriter.WriteStartObject">
            <summary>
            Writes the beginning of a JSON object.
            </summary>
        </member>
        <member name="M:Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JTokenWriter.WriteStartArray">
            <summary>
            Writes the beginning of a JSON array.
            </summary>
        </member>
        <member name="M:Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JTokenWriter.WriteStartConstructor(System.String)">
            <summary>
            Writes the start of a constructor with the given name.
            </summary>
            <param name="name">The name of the constructor.</param>
        </member>
        <member name="M:Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JTokenWriter.WriteEnd(Elastic.Apm.Libraries.Newtonsoft.Json.JsonToken)">
            <summary>
            Writes the end.
            </summary>
            <param name="token">The token.</param>
        </member>
        <member name="M:Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JTokenWriter.WritePropertyName(System.String)">
            <summary>
            Writes the property name of a name/value pair on a JSON object.
            </summary>
            <param name="name">The name of the property.</param>
        </member>
        <member name="M:Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JTokenWriter.WriteValue(System.Object)">
            <summary>
            Writes a <see cref="T:System.Object" /> value.
            An error will be raised if the value cannot be written as a single JSON token.
            </summary>
            <param name="value">The <see cref="T:System.Object" /> value to write.</param>
        </member>
        <member name="M:Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JTokenWriter.WriteNull">
            <summary>
            Writes a null value.
            </summary>
        </member>
        <member name="M:Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JTokenWriter.WriteUndefined">
            <summary>
            Writes an undefined value.
            </summary>
        </member>
        <member name="M:Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JTokenWriter.WriteRaw(System.String)">
            <summary>
            Writes raw JSON.
            </summary>
            <param name="json">The raw JSON to write.</param>
        </member>
        <member name="M:Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JTokenWriter.WriteComment(System.String)">
            <summary>
            Writes a comment <c>/*...*/</c> containing the specified text.
            </summary>
            <param name="text">Text to place inside the comment.</param>
        </member>
        <member name="M:Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JTokenWriter.WriteValue(System.String)">
            <summary>
            Writes a <see cref="T:System.String" /> value.
            </summary>
            <param name="value">The <see cref="T:System.String" /> value to write.</param>
        </member>
        <member name="M:Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JTokenWriter.WriteValue(System.Int32)">
            <summary>
            Writes a <see cref="T:System.Int32" /> value.
            </summary>
            <param name="value">The <see cref="T:System.Int32" /> value to write.</param>
        </member>
        <member name="M:Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JTokenWriter.WriteValue(System.UInt32)">
            <summary>
            Writes a <see cref="T:System.UInt32" /> value.
            </summary>
            <param name="value">The <see cref="T:System.UInt32" /> value to write.</param>
        </member>
        <member name="M:Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JTokenWriter.WriteValue(System.Int64)">
            <summary>
            Writes a <see cref="T:System.Int64" /> value.
            </summary>
            <param name="value">The <see cref="T:System.Int64" /> value to write.</param>
        </member>
        <member name="M:Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JTokenWriter.WriteValue(System.UInt64)">
            <summary>
            Writes a <see cref="T:System.UInt64" /> value.
            </summary>
            <param name="value">The <see cref="T:System.UInt64" /> value to write.</param>
        </member>
        <member name="M:Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JTokenWriter.WriteValue(System.Single)">
            <summary>
            Writes a <see cref="T:System.Single" /> value.
            </summary>
            <param name="value">The <see cref="T:System.Single" /> value to write.</param>
        </member>
        <member name="M:Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JTokenWriter.WriteValue(System.Double)">
            <summary>
            Writes a <see cref="T:System.Double" /> value.
            </summary>
            <param name="value">The <see cref="T:System.Double" /> value to write.</param>
        </member>
        <member name="M:Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JTokenWriter.WriteValue(System.Boolean)">
            <summary>
            Writes a <see cref="T:System.Boolean" /> value.
            </summary>
            <param name="value">The <see cref="T:System.Boolean" /> value to write.</param>
        </member>
        <member name="M:Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JTokenWriter.WriteValue(System.Int16)">
            <summary>
            Writes a <see cref="T:System.Int16" /> value.
            </summary>
            <param name="value">The <see cref="T:System.Int16" /> value to write.</param>
        </member>
        <member name="M:Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JTokenWriter.WriteValue(System.UInt16)">
            <summary>
            Writes a <see cref="T:System.UInt16" /> value.
            </summary>
            <param name="value">The <see cref="T:System.UInt16" /> value to write.</param>
        </member>
        <member name="M:Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JTokenWriter.WriteValue(System.Char)">
            <summary>
            Writes a <see cref="T:System.Char" /> value.
            </summary>
            <param name="value">The <see cref="T:System.Char" /> value to write.</param>
        </member>
        <member name="M:Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JTokenWriter.WriteValue(System.Byte)">
            <summary>
            Writes a <see cref="T:System.Byte" /> value.
            </summary>
            <param name="value">The <see cref="T:System.Byte" /> value to write.</param>
        </member>
        <member name="M:Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JTokenWriter.WriteValue(System.SByte)">
            <summary>
            Writes a <see cref="T:System.SByte" /> value.
            </summary>
            <param name="value">The <see cref="T:System.SByte" /> value to write.</param>
        </member>
        <member name="M:Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JTokenWriter.WriteValue(System.Decimal)">
            <summary>
            Writes a <see cref="T:System.Decimal" /> value.
            </summary>
            <param name="value">The <see cref="T:System.Decimal" /> value to write.</param>
        </member>
        <member name="M:Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JTokenWriter.WriteValue(System.DateTime)">
            <summary>
            Writes a <see cref="T:System.DateTime" /> value.
            </summary>
            <param name="value">The <see cref="T:System.DateTime" /> value to write.</param>
        </member>
        <member name="M:Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JTokenWriter.WriteValue(System.DateTimeOffset)">
            <summary>
            Writes a <see cref="T:System.DateTimeOffset"/> value.
            </summary>
            <param name="value">The <see cref="T:System.DateTimeOffset"/> value to write.</param>
        </member>
        <member name="M:Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JTokenWriter.WriteValue(System.Byte[])">
            <summary>
            Writes a <see cref="T:System.Byte" />[] value.
            </summary>
            <param name="value">The <see cref="T:System.Byte" />[] value to write.</param>
        </member>
        <member name="M:Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JTokenWriter.WriteValue(System.TimeSpan)">
            <summary>
            Writes a <see cref="T:System.TimeSpan" /> value.
            </summary>
            <param name="value">The <see cref="T:System.TimeSpan" /> value to write.</param>
        </member>
        <member name="M:Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JTokenWriter.WriteValue(System.Guid)">
            <summary>
            Writes a <see cref="T:System.Guid" /> value.
            </summary>
            <param name="value">The <see cref="T:System.Guid" /> value to write.</param>
        </member>
        <member name="M:Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JTokenWriter.WriteValue(System.Uri)">
            <summary>
            Writes a <see cref="T:System.Uri" /> value.
            </summary>
            <param name="value">The <see cref="T:System.Uri" /> value to write.</param>
        </member>
        <member name="T:Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JValue">
            <summary>
            Represents a value in JSON (string, integer, date, etc).
            </summary>
        </member>
        <member name="M:Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JValue.WriteToAsync(Elastic.Apm.Libraries.Newtonsoft.Json.JsonWriter,System.Threading.CancellationToken,Elastic.Apm.Libraries.Newtonsoft.Json.JsonConverter[])">
            <summary>
            Writes this token to a <see cref="T:Elastic.Apm.Libraries.Newtonsoft.Json.JsonWriter"/> asynchronously.
            </summary>
            <param name="writer">A <see cref="T:Elastic.Apm.Libraries.Newtonsoft.Json.JsonWriter"/> into which this method will write.</param>
            <param name="cancellationToken">The token to monitor for cancellation requests.</param>
            <param name="converters">A collection of <see cref="T:Elastic.Apm.Libraries.Newtonsoft.Json.JsonConverter"/> which will be used when writing the token.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> that represents the asynchronous write operation.</returns>
        </member>
        <member name="M:Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JValue.#ctor(Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JValue)">
            <summary>
            Initializes a new instance of the <see cref="T:Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JValue" /> class from another <see cref="T:Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JValue" /> object.
            </summary>
            <param name="other">A <see cref="T:Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JValue" /> object to copy from.</param>
        </member>
        <member name="M:Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JValue.#ctor(System.Int64)">
            <summary>
            Initializes a new instance of the <see cref="T:Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JValue" /> class with the given value.
            </summary>
            <param name="value">The value.</param>
        </member>
        <member name="M:Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JValue.#ctor(System.Decimal)">
            <summary>
            Initializes a new instance of the <see cref="T:Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JValue" /> class with the given value.
            </summary>
            <param name="value">The value.</param>
        </member>
        <member name="M:Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JValue.#ctor(System.Char)">
            <summary>
            Initializes a new instance of the <see cref="T:Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JValue" /> class with the given value.
            </summary>
            <param name="value">The value.</param>
        </member>
        <member name="M:Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JValue.#ctor(System.UInt64)">
            <summary>
            Initializes a new instance of the <see cref="T:Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JValue" /> class with the given value.
            </summary>
            <param name="value">The value.</param>
        </member>
        <member name="M:Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JValue.#ctor(System.Double)">
            <summary>
            Initializes a new instance of the <see cref="T:Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JValue" /> class with the given value.
            </summary>
            <param name="value">The value.</param>
        </member>
        <member name="M:Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JValue.#ctor(System.Single)">
            <summary>
            Initializes a new instance of the <see cref="T:Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JValue" /> class with the given value.
            </summary>
            <param name="value">The value.</param>
        </member>
        <member name="M:Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JValue.#ctor(System.DateTime)">
            <summary>
            Initializes a new instance of the <see cref="T:Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JValue" /> class with the given value.
            </summary>
            <param name="value">The value.</param>
        </member>
        <member name="M:Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JValue.#ctor(System.DateTimeOffset)">
            <summary>
            Initializes a new instance of the <see cref="T:Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JValue"/> class with the given value.
            </summary>
            <param name="value">The value.</param>
        </member>
        <member name="M:Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JValue.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JValue" /> class with the given value.
            </summary>
            <param name="value">The value.</param>
        </member>
        <member name="M:Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JValue.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JValue" /> class with the given value.
            </summary>
            <param name="value">The value.</param>
        </member>
        <member name="M:Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JValue.#ctor(System.Guid)">
            <summary>
            Initializes a new instance of the <see cref="T:Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JValue" /> class with the given value.
            </summary>
            <param name="value">The value.</param>
        </member>
        <member name="M:Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JValue.#ctor(System.Uri)">
            <summary>
            Initializes a new instance of the <see cref="T:Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JValue" /> class with the given value.
            </summary>
            <param name="value">The value.</param>
        </member>
        <member name="M:Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JValue.#ctor(System.TimeSpan)">
            <summary>
            Initializes a new instance of the <see cref="T:Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JValue" /> class with the given value.
            </summary>
            <param name="value">The value.</param>
        </member>
        <member name="M:Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JValue.#ctor(System.Object)">
            <summary>
            Initializes a new instance of the <see cref="T:Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JValue" /> class with the given value.
            </summary>
            <param name="value">The value.</param>
        </member>
        <member name="P:Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JValue.HasValues">
            <summary>
            Gets a value indicating whether this token has child tokens.
            </summary>
            <value>
            	<c>true</c> if this token has child values; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="M:Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JValue.CreateComment(System.String)">
            <summary>
            Creates a <see cref="T:Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JValue" /> comment with the given value.
            </summary>
            <param name="value">The value.</param>
            <returns>A <see cref="T:Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JValue" /> comment with the given value.</returns>
        </member>
        <member name="M:Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JValue.CreateString(System.String)">
            <summary>
            Creates a <see cref="T:Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JValue" /> string with the given value.
            </summary>
            <param name="value">The value.</param>
            <returns>A <see cref="T:Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JValue" /> string with the given value.</returns>
        </member>
        <member name="M:Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JValue.CreateNull">
            <summary>
            Creates a <see cref="T:Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JValue" /> null value.
            </summary>
            <returns>A <see cref="T:Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JValue" /> null value.</returns>
        </member>
        <member name="M:Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JValue.CreateUndefined">
            <summary>
            Creates a <see cref="T:Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JValue" /> undefined value.
            </summary>
            <returns>A <see cref="T:Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JValue" /> undefined value.</returns>
        </member>
        <member name="P:Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JValue.Type">
            <summary>
            Gets the node type for this <see cref="T:Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JToken" />.
            </summary>
            <value>The type.</value>
        </member>
        <member name="P:Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JValue.Value">
            <summary>
            Gets or sets the underlying token value.
            </summary>
            <value>The underlying token value.</value>
        </member>
        <member name="M:Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JValue.WriteTo(Elastic.Apm.Libraries.Newtonsoft.Json.JsonWriter,Elastic.Apm.Libraries.Newtonsoft.Json.JsonConverter[])">
            <summary>
            Writes this token to a <see cref="T:Elastic.Apm.Libraries.Newtonsoft.Json.JsonWriter" />.
            </summary>
            <param name="writer">A <see cref="T:Elastic.Apm.Libraries.Newtonsoft.Json.JsonWriter" /> into which this method will write.</param>
            <param name="converters">A collection of <see cref="T:Elastic.Apm.Libraries.Newtonsoft.Json.JsonConverter" />s which will be used when writing the token.</param>
        </member>
        <member name="M:Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JValue.Equals(Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JValue)">
            <summary>
            Indicates whether the current object is equal to another object of the same type.
            </summary>
            <returns>
            <c>true</c> if the current object is equal to the <paramref name="other" /> parameter; otherwise, <c>false</c>.
            </returns>
            <param name="other">An object to compare with this object.</param>
        </member>
        <member name="M:Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JValue.Equals(System.Object)">
            <summary>
            Determines whether the specified <see cref="T:System.Object" /> is equal to the current <see cref="T:System.Object" />.
            </summary>
            <param name="obj">The <see cref="T:System.Object" /> to compare with the current <see cref="T:System.Object" />.</param>
            <returns>
            <c>true</c> if the specified <see cref="T:System.Object" /> is equal to the current <see cref="T:System.Object" />; otherwise,
            <c>false</c>.
            </returns>
        </member>
        <member name="M:Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JValue.GetHashCode">
            <summary>
            Serves as a hash function for a particular type.
            </summary>
            <returns>
            A hash code for the current <see cref="T:System.Object" />.
            </returns>
        </member>
        <member name="M:Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JValue.ToString">
            <summary>
            Returns a <see cref="T:System.String" /> that represents this instance.
            </summary>
            <remarks>
            <c>ToString()</c> returns a non-JSON string value for tokens with a type of <see cref="F:Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JTokenType.String" />.
            If you want the JSON for all token types then you should use <see cref="M:Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JValue.WriteTo(Elastic.Apm.Libraries.Newtonsoft.Json.JsonWriter,Elastic.Apm.Libraries.Newtonsoft.Json.JsonConverter[])" />.
            </remarks>
            <returns>
            A <see cref="T:System.String" /> that represents this instance.
            </returns>
        </member>
        <member name="M:Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JValue.ToString(System.String)">
            <summary>
            Returns a <see cref="T:System.String" /> that represents this instance.
            </summary>
            <param name="format">The format.</param>
            <returns>
            A <see cref="T:System.String" /> that represents this instance.
            </returns>
        </member>
        <member name="M:Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JValue.ToString(System.IFormatProvider)">
            <summary>
            Returns a <see cref="T:System.String" /> that represents this instance.
            </summary>
            <param name="formatProvider">The format provider.</param>
            <returns>
            A <see cref="T:System.String" /> that represents this instance.
            </returns>
        </member>
        <member name="M:Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JValue.ToString(System.String,System.IFormatProvider)">
            <summary>
            Returns a <see cref="T:System.String" /> that represents this instance.
            </summary>
            <param name="format">The format.</param>
            <param name="formatProvider">The format provider.</param>
            <returns>
            A <see cref="T:System.String" /> that represents this instance.
            </returns>
        </member>
        <member name="M:Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JValue.GetMetaObject(System.Linq.Expressions.Expression)">
            <summary>
            Returns the <see cref="T:System.Dynamic.DynamicMetaObject"/> responsible for binding operations performed on this object.
            </summary>
            <param name="parameter">The expression tree representation of the runtime value.</param>
            <returns>
            The <see cref="T:System.Dynamic.DynamicMetaObject"/> to bind this object.
            </returns>
        </member>
        <member name="M:Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JValue.CompareTo(Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JValue)">
            <summary>
            Compares the current instance with another object of the same type and returns an integer that indicates whether the
            current instance precedes, follows, or occurs in the same position in the sort order as the other object.
            </summary>
            <param name="obj">An object to compare with this instance.</param>
            <returns>
            A 32-bit signed integer that indicates the relative order of the objects being compared. The return value has these
            meanings:
            Value
            Meaning
            Less than zero
            This instance is less than <paramref name="obj" />.
            Zero
            This instance is equal to <paramref name="obj" />.
            Greater than zero
            This instance is greater than <paramref name="obj" />.
            </returns>
            <exception cref="T:System.ArgumentException">
            	<paramref name="obj" /> is not of the same type as this instance.
            </exception>
        </member>
        <member name="T:Elastic.Apm.Libraries.Newtonsoft.Json.Linq.LineInfoHandling">
            <summary>
            Specifies how line information is handled when loading JSON.
            </summary>
        </member>
        <member name="F:Elastic.Apm.Libraries.Newtonsoft.Json.Linq.LineInfoHandling.Ignore">
            <summary>
            Ignore line information.
            </summary>
        </member>
        <member name="F:Elastic.Apm.Libraries.Newtonsoft.Json.Linq.LineInfoHandling.Load">
            <summary>
            Load line information.
            </summary>
        </member>
        <member name="T:Elastic.Apm.Libraries.Newtonsoft.Json.Linq.MergeArrayHandling">
            <summary>
            Specifies how JSON arrays are merged together.
            </summary>
        </member>
        <member name="F:Elastic.Apm.Libraries.Newtonsoft.Json.Linq.MergeArrayHandling.Concat">
            <summary>Concatenate arrays.</summary>
        </member>
        <member name="F:Elastic.Apm.Libraries.Newtonsoft.Json.Linq.MergeArrayHandling.Union">
            <summary>Union arrays, skipping items that already exist.</summary>
        </member>
        <member name="F:Elastic.Apm.Libraries.Newtonsoft.Json.Linq.MergeArrayHandling.Replace">
            <summary>Replace all array items.</summary>
        </member>
        <member name="F:Elastic.Apm.Libraries.Newtonsoft.Json.Linq.MergeArrayHandling.Merge">
            <summary>Merge array items together, matched by index.</summary>
        </member>
        <member name="T:Elastic.Apm.Libraries.Newtonsoft.Json.Linq.MergeNullValueHandling">
            <summary>
            Specifies how null value properties are merged.
            </summary>
        </member>
        <member name="F:Elastic.Apm.Libraries.Newtonsoft.Json.Linq.MergeNullValueHandling.Ignore">
            <summary>
            The content's null value properties will be ignored during merging.
            </summary>
        </member>
        <member name="F:Elastic.Apm.Libraries.Newtonsoft.Json.Linq.MergeNullValueHandling.Merge">
            <summary>
            The content's null value properties will be merged.
            </summary>
        </member>
        <member name="T:Elastic.Apm.Libraries.Newtonsoft.Json.MemberSerialization">
            <summary>
            Specifies the member serialization options for the <see cref="T:Elastic.Apm.Libraries.Newtonsoft.Json.JsonSerializer" />.
            </summary>
        </member>
        <member name="F:Elastic.Apm.Libraries.Newtonsoft.Json.MemberSerialization.OptOut">
            <summary>
            All public members are serialized by default. Members can be excluded using <see cref="T:Elastic.Apm.Libraries.Newtonsoft.Json.JsonIgnoreAttribute" /> or
            <see cref="T:System.NonSerializedAttribute" />.
            This is the default member serialization mode.
            </summary>
        </member>
        <member name="F:Elastic.Apm.Libraries.Newtonsoft.Json.MemberSerialization.OptIn">
            <summary>
            Only members marked with <see cref="T:Elastic.Apm.Libraries.Newtonsoft.Json.JsonPropertyAttribute" /> or <see cref="T:System.Runtime.Serialization.DataMemberAttribute" /> are serialized.
            This member serialization mode can also be set by marking the class with <see cref="T:System.Runtime.Serialization.DataContractAttribute" />.
            </summary>
        </member>
        <member name="F:Elastic.Apm.Libraries.Newtonsoft.Json.MemberSerialization.Fields">
            <summary>
            All public and private fields are serialized. Members can be excluded using <see cref="T:Elastic.Apm.Libraries.Newtonsoft.Json.JsonIgnoreAttribute" /> or
            <see cref="T:System.NonSerializedAttribute" />.
            This member serialization mode can also be set by marking the class with <see cref="T:System.SerializableAttribute" />
            and setting IgnoreSerializableAttribute on <see cref="T:Elastic.Apm.Libraries.Newtonsoft.Json.Serialization.DefaultContractResolver" /> to <c>false</c>.
            </summary>
        </member>
        <member name="T:Elastic.Apm.Libraries.Newtonsoft.Json.MetadataPropertyHandling">
            <summary>
            Specifies metadata property handling options for the <see cref="T:Elastic.Apm.Libraries.Newtonsoft.Json.JsonSerializer" />.
            </summary>
        </member>
        <member name="F:Elastic.Apm.Libraries.Newtonsoft.Json.MetadataPropertyHandling.Default">
            <summary>
            Read metadata properties located at the start of a JSON object.
            </summary>
        </member>
        <member name="F:Elastic.Apm.Libraries.Newtonsoft.Json.MetadataPropertyHandling.ReadAhead">
            <summary>
            Read metadata properties located anywhere in a JSON object. Note that this setting will impact performance.
            </summary>
        </member>
        <member name="F:Elastic.Apm.Libraries.Newtonsoft.Json.MetadataPropertyHandling.Ignore">
            <summary>
            Do not try to read metadata properties.
            </summary>
        </member>
        <member name="T:Elastic.Apm.Libraries.Newtonsoft.Json.MissingMemberHandling">
            <summary>
            Specifies missing member handling options for the <see cref="T:Elastic.Apm.Libraries.Newtonsoft.Json.JsonSerializer" />.
            </summary>
        </member>
        <member name="F:Elastic.Apm.Libraries.Newtonsoft.Json.MissingMemberHandling.Ignore">
            <summary>
            Ignore a missing member and do not attempt to deserialize it.
            </summary>
        </member>
        <member name="F:Elastic.Apm.Libraries.Newtonsoft.Json.MissingMemberHandling.Error">
            <summary>
            Throw a <see cref="T:Elastic.Apm.Libraries.Newtonsoft.Json.JsonSerializationException" /> when a missing member is encountered during deserialization.
            </summary>
        </member>
        <member name="T:Elastic.Apm.Libraries.Newtonsoft.Json.NullValueHandling">
            <summary>
            Specifies null value handling options for the <see cref="T:Elastic.Apm.Libraries.Newtonsoft.Json.JsonSerializer" />.
            </summary>
            <example>
              <code lang="cs" source="..\Src\Newtonsoft.Json.Tests\Documentation\SerializationTests.cs"
                  region="ReducingSerializedJsonSizeNullValueHandlingObject" title="NullValueHandling Class" />
              <code lang="cs" source="..\Src\Newtonsoft.Json.Tests\Documentation\SerializationTests.cs"
                  region="ReducingSerializedJsonSizeNullValueHandlingExample" title="NullValueHandling Ignore Example" />
            </example>
        </member>
        <member name="F:Elastic.Apm.Libraries.Newtonsoft.Json.NullValueHandling.Include">
            <summary>
            Include null values when serializing and deserializing objects.
            </summary>
        </member>
        <member name="F:Elastic.Apm.Libraries.Newtonsoft.Json.NullValueHandling.Ignore">
            <summary>
            Ignore null values when serializing and deserializing objects.
            </summary>
        </member>
        <member name="T:Elastic.Apm.Libraries.Newtonsoft.Json.ObjectCreationHandling">
            <summary>
            Specifies how object creation is handled by the <see cref="T:Elastic.Apm.Libraries.Newtonsoft.Json.JsonSerializer" />.
            </summary>
        </member>
        <member name="F:Elastic.Apm.Libraries.Newtonsoft.Json.ObjectCreationHandling.Auto">
            <summary>
            Reuse existing objects, create new objects when needed.
            </summary>
        </member>
        <member name="F:Elastic.Apm.Libraries.Newtonsoft.Json.ObjectCreationHandling.Reuse">
            <summary>
            Only reuse existing objects.
            </summary>
        </member>
        <member name="F:Elastic.Apm.Libraries.Newtonsoft.Json.ObjectCreationHandling.Replace">
            <summary>
            Always create new objects.
            </summary>
        </member>
        <member name="T:Elastic.Apm.Libraries.Newtonsoft.Json.PreserveReferencesHandling">
            <summary>
            Specifies reference handling options for the <see cref="T:Elastic.Apm.Libraries.Newtonsoft.Json.JsonSerializer" />.
            Note that references cannot be preserved when a value is set via a non-default constructor such as types that implement
            <see cref="T:System.Runtime.Serialization.ISerializable" />.
            </summary>
            <example>
              <code lang="cs" source="..\Src\Newtonsoft.Json.Tests\Documentation\SerializationTests.cs"
                  region="PreservingObjectReferencesOn" title="Preserve Object References" />
            </example>
        </member>
        <member name="F:Elastic.Apm.Libraries.Newtonsoft.Json.PreserveReferencesHandling.None">
            <summary>
            Do not preserve references when serializing types.
            </summary>
        </member>
        <member name="F:Elastic.Apm.Libraries.Newtonsoft.Json.PreserveReferencesHandling.Objects">
            <summary>
            Preserve references when serializing into a JSON object structure.
            </summary>
        </member>
        <member name="F:Elastic.Apm.Libraries.Newtonsoft.Json.PreserveReferencesHandling.Arrays">
            <summary>
            Preserve references when serializing into a JSON array structure.
            </summary>
        </member>
        <member name="F:Elastic.Apm.Libraries.Newtonsoft.Json.PreserveReferencesHandling.All">
            <summary>
            Preserve references when serializing.
            </summary>
        </member>
        <member name="T:Elastic.Apm.Libraries.Newtonsoft.Json.ReferenceLoopHandling">
            <summary>
            Specifies reference loop handling options for the <see cref="T:Elastic.Apm.Libraries.Newtonsoft.Json.JsonSerializer" />.
            </summary>
        </member>
        <member name="F:Elastic.Apm.Libraries.Newtonsoft.Json.ReferenceLoopHandling.Error">
            <summary>
            Throw a <see cref="T:Elastic.Apm.Libraries.Newtonsoft.Json.JsonSerializationException" /> when a loop is encountered.
            </summary>
        </member>
        <member name="F:Elastic.Apm.Libraries.Newtonsoft.Json.ReferenceLoopHandling.Ignore">
            <summary>
            Ignore loop references and do not serialize.
            </summary>
        </member>
        <member name="F:Elastic.Apm.Libraries.Newtonsoft.Json.ReferenceLoopHandling.Serialize">
            <summary>
            Serialize loop references.
            </summary>
        </member>
        <member name="T:Elastic.Apm.Libraries.Newtonsoft.Json.Required">
            <summary>
            Indicating whether a property is required.
            </summary>
        </member>
        <member name="F:Elastic.Apm.Libraries.Newtonsoft.Json.Required.Default">
            <summary>
            The property is not required. The default state.
            </summary>
        </member>
        <member name="F:Elastic.Apm.Libraries.Newtonsoft.Json.Required.AllowNull">
            <summary>
            The property must be defined in JSON but can be a null value.
            </summary>
        </member>
        <member name="F:Elastic.Apm.Libraries.Newtonsoft.Json.Required.Always">
            <summary>
            The property must be defined in JSON and cannot be a null value.
            </summary>
        </member>
        <member name="F:Elastic.Apm.Libraries.Newtonsoft.Json.Required.DisallowNull">
            <summary>
            The property is not required but it cannot be a null value.
            </summary>
        </member>
        <member name="T:Elastic.Apm.Libraries.Newtonsoft.Json.Schema.Extensions">
            <summary>
            <para>
            Contains the JSON schema extension methods.
            </para>
            <note type="caution">
            JSON Schema validation has been moved to its own package. See
            <see href="https://www.newtonsoft.com/jsonschema">https://www.newtonsoft.com/jsonschema</see> for more details.
            </note>
            </summary>
        </member>
        <member name="M:Elastic.Apm.Libraries.Newtonsoft.Json.Schema.Extensions.IsValid(Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JToken,Elastic.Apm.Libraries.Newtonsoft.Json.Schema.JsonSchema)">
            <summary>
            <para>
            Determines whether the <see cref="T:Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JToken" /> is valid.
            </para>
            <note type="caution">
            JSON Schema validation has been moved to its own package. See
            <see href="https://www.newtonsoft.com/jsonschema">https://www.newtonsoft.com/jsonschema</see> for more details.
            </note>
            </summary>
            <param name="source">The source <see cref="T:Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JToken" /> to test.</param>
            <param name="schema">The schema to test with.</param>
            <returns>
            	<c>true</c> if the specified <see cref="T:Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JToken" /> is valid; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Elastic.Apm.Libraries.Newtonsoft.Json.Schema.Extensions.IsValid(Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JToken,Elastic.Apm.Libraries.Newtonsoft.Json.Schema.JsonSchema,System.Collections.Generic.IList{System.String}@)">
            <summary>
            <para>
            Determines whether the <see cref="T:Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JToken" /> is valid.
            </para>
            <note type="caution">
            JSON Schema validation has been moved to its own package. See
            <see href="https://www.newtonsoft.com/jsonschema">https://www.newtonsoft.com/jsonschema</see> for more details.
            </note>
            </summary>
            <param name="source">The source <see cref="T:Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JToken" /> to test.</param>
            <param name="schema">The schema to test with.</param>
            <param name="errorMessages">When this method returns, contains any error messages generated while validating. </param>
            <returns>
            	<c>true</c> if the specified <see cref="T:Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JToken" /> is valid; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Elastic.Apm.Libraries.Newtonsoft.Json.Schema.Extensions.Validate(Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JToken,Elastic.Apm.Libraries.Newtonsoft.Json.Schema.JsonSchema)">
            <summary>
            <para>
            Validates the specified <see cref="T:Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JToken" />.
            </para>
            <note type="caution">
            JSON Schema validation has been moved to its own package. See
            <see href="https://www.newtonsoft.com/jsonschema">https://www.newtonsoft.com/jsonschema</see> for more details.
            </note>
            </summary>
            <param name="source">The source <see cref="T:Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JToken" /> to test.</param>
            <param name="schema">The schema to test with.</param>
        </member>
        <member name="M:Elastic.Apm.Libraries.Newtonsoft.Json.Schema.Extensions.Validate(Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JToken,Elastic.Apm.Libraries.Newtonsoft.Json.Schema.JsonSchema,Elastic.Apm.Libraries.Newtonsoft.Json.Schema.ValidationEventHandler)">
            <summary>
            <para>
            Validates the specified <see cref="T:Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JToken" />.
            </para>
            <note type="caution">
            JSON Schema validation has been moved to its own package. See
            <see href="https://www.newtonsoft.com/jsonschema">https://www.newtonsoft.com/jsonschema</see> for more details.
            </note>
            </summary>
            <param name="source">The source <see cref="T:Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JToken" /> to test.</param>
            <param name="schema">The schema to test with.</param>
            <param name="validationEventHandler">The validation event handler.</param>
        </member>
        <member name="T:Elastic.Apm.Libraries.Newtonsoft.Json.Schema.JsonSchema">
            <summary>
            <para>
            An in-memory representation of a JSON Schema.
            </para>
            <note type="caution">
            JSON Schema validation has been moved to its own package. See
            <see href="https://www.newtonsoft.com/jsonschema">https://www.newtonsoft.com/jsonschema</see> for more details.
            </note>
            </summary>
        </member>
        <member name="M:Elastic.Apm.Libraries.Newtonsoft.Json.Schema.JsonSchema.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Elastic.Apm.Libraries.Newtonsoft.Json.Schema.JsonSchema" /> class.
            </summary>
        </member>
        <member name="P:Elastic.Apm.Libraries.Newtonsoft.Json.Schema.JsonSchema.AdditionalItems">
            <summary>
            Gets or sets the <see cref="T:Elastic.Apm.Libraries.Newtonsoft.Json.Schema.JsonSchema" /> of additional items.
            </summary>
            <value>The <see cref="T:Elastic.Apm.Libraries.Newtonsoft.Json.Schema.JsonSchema" /> of additional items.</value>
        </member>
        <member name="P:Elastic.Apm.Libraries.Newtonsoft.Json.Schema.JsonSchema.AdditionalProperties">
            <summary>
            Gets or sets the <see cref="T:Elastic.Apm.Libraries.Newtonsoft.Json.Schema.JsonSchema" /> of additional properties.
            </summary>
            <value>The <see cref="T:Elastic.Apm.Libraries.Newtonsoft.Json.Schema.JsonSchema" /> of additional properties.</value>
        </member>
        <member name="P:Elastic.Apm.Libraries.Newtonsoft.Json.Schema.JsonSchema.AllowAdditionalItems">
            <summary>
            Gets or sets a value indicating whether additional items are allowed.
            </summary>
            <value>
            	<c>true</c> if additional items are allowed; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Elastic.Apm.Libraries.Newtonsoft.Json.Schema.JsonSchema.AllowAdditionalProperties">
            <summary>
            Gets or sets a value indicating whether additional properties are allowed.
            </summary>
            <value>
            	<c>true</c> if additional properties are allowed; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Elastic.Apm.Libraries.Newtonsoft.Json.Schema.JsonSchema.Default">
            <summary>
            Gets or sets the default value.
            </summary>
            <value>The default value.</value>
        </member>
        <member name="P:Elastic.Apm.Libraries.Newtonsoft.Json.Schema.JsonSchema.Description">
            <summary>
            Gets or sets the description of the object.
            </summary>
        </member>
        <member name="P:Elastic.Apm.Libraries.Newtonsoft.Json.Schema.JsonSchema.Disallow">
            <summary>
            Gets or sets disallowed types.
            </summary>
            <value>The disallowed types.</value>
        </member>
        <member name="P:Elastic.Apm.Libraries.Newtonsoft.Json.Schema.JsonSchema.DivisibleBy">
            <summary>
            Gets or sets a number that the value should be divisible by.
            </summary>
            <value>A number that the value should be divisible by.</value>
        </member>
        <member name="P:Elastic.Apm.Libraries.Newtonsoft.Json.Schema.JsonSchema.Enum">
            <summary>
            Gets or sets the a collection of valid enum values allowed.
            </summary>
            <value>A collection of valid enum values allowed.</value>
        </member>
        <member name="P:Elastic.Apm.Libraries.Newtonsoft.Json.Schema.JsonSchema.ExclusiveMaximum">
            <summary>
            Gets or sets a flag indicating whether the value can not equal the number defined by the <c>maximum</c> attribute (
            <see cref="P:Elastic.Apm.Libraries.Newtonsoft.Json.Schema.JsonSchema.Maximum" />).
            </summary>
            <value>
            A flag indicating whether the value can not equal the number defined by the <c>maximum</c> attribute (
            <see cref="P:Elastic.Apm.Libraries.Newtonsoft.Json.Schema.JsonSchema.Maximum" />).
            </value>
        </member>
        <member name="P:Elastic.Apm.Libraries.Newtonsoft.Json.Schema.JsonSchema.ExclusiveMinimum">
            <summary>
            Gets or sets a flag indicating whether the value can not equal the number defined by the <c>minimum</c> attribute (
            <see cref="P:Elastic.Apm.Libraries.Newtonsoft.Json.Schema.JsonSchema.Minimum" />).
            </summary>
            <value>
            A flag indicating whether the value can not equal the number defined by the <c>minimum</c> attribute (
            <see cref="P:Elastic.Apm.Libraries.Newtonsoft.Json.Schema.JsonSchema.Minimum" />).
            </value>
        </member>
        <member name="P:Elastic.Apm.Libraries.Newtonsoft.Json.Schema.JsonSchema.Extends">
            <summary>
            Gets or sets the collection of <see cref="T:Elastic.Apm.Libraries.Newtonsoft.Json.Schema.JsonSchema" /> that this schema extends.
            </summary>
            <value>The collection of <see cref="T:Elastic.Apm.Libraries.Newtonsoft.Json.Schema.JsonSchema" /> that this schema extends.</value>
        </member>
        <member name="P:Elastic.Apm.Libraries.Newtonsoft.Json.Schema.JsonSchema.Format">
            <summary>
            Gets or sets the format.
            </summary>
            <value>The format.</value>
        </member>
        <member name="P:Elastic.Apm.Libraries.Newtonsoft.Json.Schema.JsonSchema.Hidden">
            <summary>
            Gets or sets whether the object is visible to users.
            </summary>
        </member>
        <member name="P:Elastic.Apm.Libraries.Newtonsoft.Json.Schema.JsonSchema.Id">
            <summary>
            Gets or sets the id.
            </summary>
        </member>
        <member name="P:Elastic.Apm.Libraries.Newtonsoft.Json.Schema.JsonSchema.Items">
            <summary>
            Gets or sets the <see cref="T:Elastic.Apm.Libraries.Newtonsoft.Json.Schema.JsonSchema" /> of items.
            </summary>
            <value>The <see cref="T:Elastic.Apm.Libraries.Newtonsoft.Json.Schema.JsonSchema" /> of items.</value>
        </member>
        <member name="P:Elastic.Apm.Libraries.Newtonsoft.Json.Schema.JsonSchema.Maximum">
            <summary>
            Gets or sets the maximum.
            </summary>
            <value>The maximum.</value>
        </member>
        <member name="P:Elastic.Apm.Libraries.Newtonsoft.Json.Schema.JsonSchema.MaximumItems">
            <summary>
            Gets or sets the maximum number of items.
            </summary>
            <value>The maximum number of items.</value>
        </member>
        <member name="P:Elastic.Apm.Libraries.Newtonsoft.Json.Schema.JsonSchema.MaximumLength">
            <summary>
            Gets or sets the maximum length.
            </summary>
            <value>The maximum length.</value>
        </member>
        <member name="P:Elastic.Apm.Libraries.Newtonsoft.Json.Schema.JsonSchema.Minimum">
            <summary>
            Gets or sets the minimum.
            </summary>
            <value>The minimum.</value>
        </member>
        <member name="P:Elastic.Apm.Libraries.Newtonsoft.Json.Schema.JsonSchema.MinimumItems">
            <summary>
            Gets or sets the minimum number of items.
            </summary>
            <value>The minimum number of items.</value>
        </member>
        <member name="P:Elastic.Apm.Libraries.Newtonsoft.Json.Schema.JsonSchema.MinimumLength">
            <summary>
            Gets or sets the minimum length.
            </summary>
            <value>The minimum length.</value>
        </member>
        <member name="P:Elastic.Apm.Libraries.Newtonsoft.Json.Schema.JsonSchema.Pattern">
            <summary>
            Gets or sets the pattern.
            </summary>
            <value>The pattern.</value>
        </member>
        <member name="P:Elastic.Apm.Libraries.Newtonsoft.Json.Schema.JsonSchema.PatternProperties">
            <summary>
            Gets or sets the pattern properties.
            </summary>
            <value>The pattern properties.</value>
        </member>
        <member name="P:Elastic.Apm.Libraries.Newtonsoft.Json.Schema.JsonSchema.PositionalItemsValidation">
            <summary>
            Gets or sets a value indicating whether items in an array are validated using the <see cref="T:Elastic.Apm.Libraries.Newtonsoft.Json.Schema.JsonSchema" /> instance at
            their array position from <see cref="P:Elastic.Apm.Libraries.Newtonsoft.Json.Schema.JsonSchema.Items" />.
            </summary>
            <value>
            	<c>true</c> if items are validated using their array position; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Elastic.Apm.Libraries.Newtonsoft.Json.Schema.JsonSchema.Properties">
            <summary>
            Gets or sets the <see cref="T:Elastic.Apm.Libraries.Newtonsoft.Json.Schema.JsonSchema" /> of properties.
            </summary>
            <value>The <see cref="T:Elastic.Apm.Libraries.Newtonsoft.Json.Schema.JsonSchema" /> of properties.</value>
        </member>
        <member name="P:Elastic.Apm.Libraries.Newtonsoft.Json.Schema.JsonSchema.ReadOnly">
            <summary>
            Gets or sets whether the object is read-only.
            </summary>
        </member>
        <member name="P:Elastic.Apm.Libraries.Newtonsoft.Json.Schema.JsonSchema.Required">
            <summary>
            Gets or sets whether the object is required.
            </summary>
        </member>
        <member name="P:Elastic.Apm.Libraries.Newtonsoft.Json.Schema.JsonSchema.Requires">
            <summary>
            Gets or sets the required property if this property is present.
            </summary>
            <value>The required property if this property is present.</value>
        </member>
        <member name="P:Elastic.Apm.Libraries.Newtonsoft.Json.Schema.JsonSchema.Title">
            <summary>
            Gets or sets the title.
            </summary>
        </member>
        <member name="P:Elastic.Apm.Libraries.Newtonsoft.Json.Schema.JsonSchema.Transient">
            <summary>
            Gets or sets whether the object is transient.
            </summary>
        </member>
        <member name="P:Elastic.Apm.Libraries.Newtonsoft.Json.Schema.JsonSchema.Type">
            <summary>
            Gets or sets the types of values allowed by the object.
            </summary>
            <value>The type.</value>
        </member>
        <member name="P:Elastic.Apm.Libraries.Newtonsoft.Json.Schema.JsonSchema.UniqueItems">
            <summary>
            Gets or sets whether the array items must be unique.
            </summary>
        </member>
        <member name="M:Elastic.Apm.Libraries.Newtonsoft.Json.Schema.JsonSchema.Read(Elastic.Apm.Libraries.Newtonsoft.Json.JsonReader)">
            <summary>
            Reads a <see cref="T:Elastic.Apm.Libraries.Newtonsoft.Json.Schema.JsonSchema" /> from the specified <see cref="T:Elastic.Apm.Libraries.Newtonsoft.Json.JsonReader" />.
            </summary>
            <param name="reader">The <see cref="T:Elastic.Apm.Libraries.Newtonsoft.Json.JsonReader" /> containing the JSON Schema to read.</param>
            <returns>The <see cref="T:Elastic.Apm.Libraries.Newtonsoft.Json.Schema.JsonSchema" /> object representing the JSON Schema.</returns>
        </member>
        <member name="M:Elastic.Apm.Libraries.Newtonsoft.Json.Schema.JsonSchema.Read(Elastic.Apm.Libraries.Newtonsoft.Json.JsonReader,Elastic.Apm.Libraries.Newtonsoft.Json.Schema.JsonSchemaResolver)">
            <summary>
            Reads a <see cref="T:Elastic.Apm.Libraries.Newtonsoft.Json.Schema.JsonSchema" /> from the specified <see cref="T:Elastic.Apm.Libraries.Newtonsoft.Json.JsonReader" />.
            </summary>
            <param name="reader">The <see cref="T:Elastic.Apm.Libraries.Newtonsoft.Json.JsonReader" /> containing the JSON Schema to read.</param>
            <param name="resolver">The <see cref="T:Elastic.Apm.Libraries.Newtonsoft.Json.Schema.JsonSchemaResolver" /> to use when resolving schema references.</param>
            <returns>The <see cref="T:Elastic.Apm.Libraries.Newtonsoft.Json.Schema.JsonSchema" /> object representing the JSON Schema.</returns>
        </member>
        <member name="M:Elastic.Apm.Libraries.Newtonsoft.Json.Schema.JsonSchema.Parse(System.String)">
            <summary>
            Load a <see cref="T:Elastic.Apm.Libraries.Newtonsoft.Json.Schema.JsonSchema" /> from a string that contains JSON Schema.
            </summary>
            <param name="json">A <see cref="T:System.String" /> that contains JSON Schema.</param>
            <returns>A <see cref="T:Elastic.Apm.Libraries.Newtonsoft.Json.Schema.JsonSchema" /> populated from the string that contains JSON Schema.</returns>
        </member>
        <member name="M:Elastic.Apm.Libraries.Newtonsoft.Json.Schema.JsonSchema.Parse(System.String,Elastic.Apm.Libraries.Newtonsoft.Json.Schema.JsonSchemaResolver)">
            <summary>
            Load a <see cref="T:Elastic.Apm.Libraries.Newtonsoft.Json.Schema.JsonSchema" /> from a string that contains JSON Schema using the specified
            <see cref="T:Elastic.Apm.Libraries.Newtonsoft.Json.Schema.JsonSchemaResolver" />.
            </summary>
            <param name="json">A <see cref="T:System.String" /> that contains JSON Schema.</param>
            <param name="resolver">The resolver.</param>
            <returns>A <see cref="T:Elastic.Apm.Libraries.Newtonsoft.Json.Schema.JsonSchema" /> populated from the string that contains JSON Schema.</returns>
        </member>
        <member name="M:Elastic.Apm.Libraries.Newtonsoft.Json.Schema.JsonSchema.WriteTo(Elastic.Apm.Libraries.Newtonsoft.Json.JsonWriter)">
            <summary>
            Writes this schema to a <see cref="T:Elastic.Apm.Libraries.Newtonsoft.Json.JsonWriter" />.
            </summary>
            <param name="writer">A <see cref="T:Elastic.Apm.Libraries.Newtonsoft.Json.JsonWriter" /> into which this method will write.</param>
        </member>
        <member name="M:Elastic.Apm.Libraries.Newtonsoft.Json.Schema.JsonSchema.WriteTo(Elastic.Apm.Libraries.Newtonsoft.Json.JsonWriter,Elastic.Apm.Libraries.Newtonsoft.Json.Schema.JsonSchemaResolver)">
            <summary>
            Writes this schema to a <see cref="T:Elastic.Apm.Libraries.Newtonsoft.Json.JsonWriter" /> using the specified <see cref="T:Elastic.Apm.Libraries.Newtonsoft.Json.Schema.JsonSchemaResolver" />.
            </summary>
            <param name="writer">A <see cref="T:Elastic.Apm.Libraries.Newtonsoft.Json.JsonWriter" /> into which this method will write.</param>
            <param name="resolver">The resolver used.</param>
        </member>
        <member name="M:Elastic.Apm.Libraries.Newtonsoft.Json.Schema.JsonSchema.ToString">
            <summary>
            Returns a <see cref="T:System.String" /> that represents the current <see cref="T:System.Object" />.
            </summary>
            <returns>
            A <see cref="T:System.String" /> that represents the current <see cref="T:System.Object" />.
            </returns>
        </member>
        <member name="T:Elastic.Apm.Libraries.Newtonsoft.Json.Schema.JsonSchemaException">
            <summary>
            <para>
            Returns detailed information about the schema exception.
            </para>
            <note type="caution">
            JSON Schema validation has been moved to its own package. See
            <see href="https://www.newtonsoft.com/jsonschema">https://www.newtonsoft.com/jsonschema</see> for more details.
            </note>
            </summary>
        </member>
        <member name="P:Elastic.Apm.Libraries.Newtonsoft.Json.Schema.JsonSchemaException.LineNumber">
            <summary>
            Gets the line number indicating where the error occurred.
            </summary>
            <value>The line number indicating where the error occurred.</value>
        </member>
        <member name="P:Elastic.Apm.Libraries.Newtonsoft.Json.Schema.JsonSchemaException.LinePosition">
            <summary>
            Gets the line position indicating where the error occurred.
            </summary>
            <value>The line position indicating where the error occurred.</value>
        </member>
        <member name="P:Elastic.Apm.Libraries.Newtonsoft.Json.Schema.JsonSchemaException.Path">
            <summary>
            Gets the path to the JSON where the error occurred.
            </summary>
            <value>The path to the JSON where the error occurred.</value>
        </member>
        <member name="M:Elastic.Apm.Libraries.Newtonsoft.Json.Schema.JsonSchemaException.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Elastic.Apm.Libraries.Newtonsoft.Json.Schema.JsonSchemaException" /> class.
            </summary>
        </member>
        <member name="M:Elastic.Apm.Libraries.Newtonsoft.Json.Schema.JsonSchemaException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Elastic.Apm.Libraries.Newtonsoft.Json.Schema.JsonSchemaException" /> class
            with a specified error message.
            </summary>
            <param name="message">The error message that explains the reason for the exception.</param>
        </member>
        <member name="M:Elastic.Apm.Libraries.Newtonsoft.Json.Schema.JsonSchemaException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:Elastic.Apm.Libraries.Newtonsoft.Json.Schema.JsonSchemaException" /> class
            with a specified error message and a reference to the inner exception that is the cause of this exception.
            </summary>
            <param name="message">The error message that explains the reason for the exception.</param>
            <param name="innerException">
            The exception that is the cause of the current exception, or <c>null</c> if no inner
            exception is specified.
            </param>
        </member>
        <member name="M:Elastic.Apm.Libraries.Newtonsoft.Json.Schema.JsonSchemaException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the <see cref="T:Elastic.Apm.Libraries.Newtonsoft.Json.Schema.JsonSchemaException"/> class.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo"/> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext"/> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info"/> parameter is <c>null</c>.</exception>
            <exception cref="T:System.Runtime.Serialization.SerializationException">The class name is <c>null</c> or <see cref="P:System.Exception.HResult"/> is zero (0).</exception>
        </member>
        <member name="T:Elastic.Apm.Libraries.Newtonsoft.Json.Schema.JsonSchemaGenerator">
            <summary>
            <para>
            Generates a <see cref="T:Elastic.Apm.Libraries.Newtonsoft.Json.Schema.JsonSchema" /> from a specified <see cref="T:System.Type" />.
            </para>
            <note type="caution">
            JSON Schema validation has been moved to its own package. See
            <see href="https://www.newtonsoft.com/jsonschema">https://www.newtonsoft.com/jsonschema</see> for more details.
            </note>
            </summary>
        </member>
        <member name="P:Elastic.Apm.Libraries.Newtonsoft.Json.Schema.JsonSchemaGenerator.UndefinedSchemaIdHandling">
            <summary>
            Gets or sets how undefined schemas are handled by the serializer.
            </summary>
        </member>
        <member name="P:Elastic.Apm.Libraries.Newtonsoft.Json.Schema.JsonSchemaGenerator.ContractResolver">
            <summary>
            Gets or sets the contract resolver.
            </summary>
            <value>The contract resolver.</value>
        </member>
        <member name="M:Elastic.Apm.Libraries.Newtonsoft.Json.Schema.JsonSchemaGenerator.Generate(System.Type)">
            <summary>
            Generate a <see cref="T:Elastic.Apm.Libraries.Newtonsoft.Json.Schema.JsonSchema" /> from the specified type.
            </summary>
            <param name="type">The type to generate a <see cref="T:Elastic.Apm.Libraries.Newtonsoft.Json.Schema.JsonSchema" /> from.</param>
            <returns>A <see cref="T:Elastic.Apm.Libraries.Newtonsoft.Json.Schema.JsonSchema" /> generated from the specified type.</returns>
        </member>
        <member name="M:Elastic.Apm.Libraries.Newtonsoft.Json.Schema.JsonSchemaGenerator.Generate(System.Type,Elastic.Apm.Libraries.Newtonsoft.Json.Schema.JsonSchemaResolver)">
            <summary>
            Generate a <see cref="T:Elastic.Apm.Libraries.Newtonsoft.Json.Schema.JsonSchema" /> from the specified type.
            </summary>
            <param name="type">The type to generate a <see cref="T:Elastic.Apm.Libraries.Newtonsoft.Json.Schema.JsonSchema" /> from.</param>
            <param name="resolver">The <see cref="T:Elastic.Apm.Libraries.Newtonsoft.Json.Schema.JsonSchemaResolver" /> used to resolve schema references.</param>
            <returns>A <see cref="T:Elastic.Apm.Libraries.Newtonsoft.Json.Schema.JsonSchema" /> generated from the specified type.</returns>
        </member>
        <member name="M:Elastic.Apm.Libraries.Newtonsoft.Json.Schema.JsonSchemaGenerator.Generate(System.Type,System.Boolean)">
            <summary>
            Generate a <see cref="T:Elastic.Apm.Libraries.Newtonsoft.Json.Schema.JsonSchema" /> from the specified type.
            </summary>
            <param name="type">The type to generate a <see cref="T:Elastic.Apm.Libraries.Newtonsoft.Json.Schema.JsonSchema" /> from.</param>
            <param name="rootSchemaNullable">Specify whether the generated root <see cref="T:Elastic.Apm.Libraries.Newtonsoft.Json.Schema.JsonSchema" /> will be nullable.</param>
            <returns>A <see cref="T:Elastic.Apm.Libraries.Newtonsoft.Json.Schema.JsonSchema" /> generated from the specified type.</returns>
        </member>
        <member name="M:Elastic.Apm.Libraries.Newtonsoft.Json.Schema.JsonSchemaGenerator.Generate(System.Type,Elastic.Apm.Libraries.Newtonsoft.Json.Schema.JsonSchemaResolver,System.Boolean)">
            <summary>
            Generate a <see cref="T:Elastic.Apm.Libraries.Newtonsoft.Json.Schema.JsonSchema" /> from the specified type.
            </summary>
            <param name="type">The type to generate a <see cref="T:Elastic.Apm.Libraries.Newtonsoft.Json.Schema.JsonSchema" /> from.</param>
            <param name="resolver">The <see cref="T:Elastic.Apm.Libraries.Newtonsoft.Json.Schema.JsonSchemaResolver" /> used to resolve schema references.</param>
            <param name="rootSchemaNullable">Specify whether the generated root <see cref="T:Elastic.Apm.Libraries.Newtonsoft.Json.Schema.JsonSchema" /> will be nullable.</param>
            <returns>A <see cref="T:Elastic.Apm.Libraries.Newtonsoft.Json.Schema.JsonSchema" /> generated from the specified type.</returns>
        </member>
        <member name="T:Elastic.Apm.Libraries.Newtonsoft.Json.Schema.JsonSchemaResolver">
            <summary>
            <para>
            Resolves <see cref="T:Elastic.Apm.Libraries.Newtonsoft.Json.Schema.JsonSchema" /> from an id.
            </para>
            <note type="caution">
            JSON Schema validation has been moved to its own package. See
            <see href="https://www.newtonsoft.com/jsonschema">https://www.newtonsoft.com/jsonschema</see> for more details.
            </note>
            </summary>
        </member>
        <member name="M:Elastic.Apm.Libraries.Newtonsoft.Json.Schema.JsonSchemaResolver.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Elastic.Apm.Libraries.Newtonsoft.Json.Schema.JsonSchemaResolver" /> class.
            </summary>
        </member>
        <member name="P:Elastic.Apm.Libraries.Newtonsoft.Json.Schema.JsonSchemaResolver.LoadedSchemas">
            <summary>
            Gets or sets the loaded schemas.
            </summary>
            <value>The loaded schemas.</value>
        </member>
        <member name="M:Elastic.Apm.Libraries.Newtonsoft.Json.Schema.JsonSchemaResolver.GetSchema(System.String)">
            <summary>
            Gets a <see cref="T:Elastic.Apm.Libraries.Newtonsoft.Json.Schema.JsonSchema" /> for the specified reference.
            </summary>
            <param name="reference">The id.</param>
            <returns>A <see cref="T:Elastic.Apm.Libraries.Newtonsoft.Json.Schema.JsonSchema" /> for the specified reference.</returns>
        </member>
        <member name="T:Elastic.Apm.Libraries.Newtonsoft.Json.Schema.JsonSchemaType">
            <summary>
            <para>
            The value types allowed by the <see cref="T:Elastic.Apm.Libraries.Newtonsoft.Json.Schema.JsonSchema" />.
            </para>
            <note type="caution">
            JSON Schema validation has been moved to its own package. See
            <see href="https://www.newtonsoft.com/jsonschema">https://www.newtonsoft.com/jsonschema</see> for more details.
            </note>
            </summary>
        </member>
        <member name="F:Elastic.Apm.Libraries.Newtonsoft.Json.Schema.JsonSchemaType.None">
            <summary>
            No type specified.
            </summary>
        </member>
        <member name="F:Elastic.Apm.Libraries.Newtonsoft.Json.Schema.JsonSchemaType.String">
            <summary>
            String type.
            </summary>
        </member>
        <member name="F:Elastic.Apm.Libraries.Newtonsoft.Json.Schema.JsonSchemaType.Float">
            <summary>
            Float type.
            </summary>
        </member>
        <member name="F:Elastic.Apm.Libraries.Newtonsoft.Json.Schema.JsonSchemaType.Integer">
            <summary>
            Integer type.
            </summary>
        </member>
        <member name="F:Elastic.Apm.Libraries.Newtonsoft.Json.Schema.JsonSchemaType.Boolean">
            <summary>
            Boolean type.
            </summary>
        </member>
        <member name="F:Elastic.Apm.Libraries.Newtonsoft.Json.Schema.JsonSchemaType.Object">
            <summary>
            Object type.
            </summary>
        </member>
        <member name="F:Elastic.Apm.Libraries.Newtonsoft.Json.Schema.JsonSchemaType.Array">
            <summary>
            Array type.
            </summary>
        </member>
        <member name="F:Elastic.Apm.Libraries.Newtonsoft.Json.Schema.JsonSchemaType.Null">
            <summary>
            Null type.
            </summary>
        </member>
        <member name="F:Elastic.Apm.Libraries.Newtonsoft.Json.Schema.JsonSchemaType.Any">
            <summary>
            Any type.
            </summary>
        </member>
        <member name="T:Elastic.Apm.Libraries.Newtonsoft.Json.Schema.UndefinedSchemaIdHandling">
            <summary>
            <para>
            Specifies undefined schema Id handling options for the <see cref="T:Elastic.Apm.Libraries.Newtonsoft.Json.Schema.JsonSchemaGenerator" />.
            </para>
            <note type="caution">
            JSON Schema validation has been moved to its own package. See
            <see href="https://www.newtonsoft.com/jsonschema">https://www.newtonsoft.com/jsonschema</see> for more details.
            </note>
            </summary>
        </member>
        <member name="F:Elastic.Apm.Libraries.Newtonsoft.Json.Schema.UndefinedSchemaIdHandling.None">
            <summary>
            Do not infer a schema Id.
            </summary>
        </member>
        <member name="F:Elastic.Apm.Libraries.Newtonsoft.Json.Schema.UndefinedSchemaIdHandling.UseTypeName">
            <summary>
            Use the .NET type name as the schema Id.
            </summary>
        </member>
        <member name="F:Elastic.Apm.Libraries.Newtonsoft.Json.Schema.UndefinedSchemaIdHandling.UseAssemblyQualifiedName">
            <summary>
            Use the assembly qualified .NET type name as the schema Id.
            </summary>
        </member>
        <member name="T:Elastic.Apm.Libraries.Newtonsoft.Json.Schema.ValidationEventArgs">
            <summary>
            <para>
            Returns detailed information related to the <see cref="T:Elastic.Apm.Libraries.Newtonsoft.Json.Schema.ValidationEventHandler" />.
            </para>
            <note type="caution">
            JSON Schema validation has been moved to its own package. See
            <see href="https://www.newtonsoft.com/jsonschema">https://www.newtonsoft.com/jsonschema</see> for more details.
            </note>
            </summary>
        </member>
        <member name="P:Elastic.Apm.Libraries.Newtonsoft.Json.Schema.ValidationEventArgs.Exception">
            <summary>
            Gets the <see cref="T:Elastic.Apm.Libraries.Newtonsoft.Json.Schema.JsonSchemaException" /> associated with the validation error.
            </summary>
            <value>The JsonSchemaException associated with the validation error.</value>
        </member>
        <member name="P:Elastic.Apm.Libraries.Newtonsoft.Json.Schema.ValidationEventArgs.Message">
            <summary>
            Gets the text description corresponding to the validation error.
            </summary>
            <value>The text description.</value>
        </member>
        <member name="P:Elastic.Apm.Libraries.Newtonsoft.Json.Schema.ValidationEventArgs.Path">
            <summary>
            Gets the path of the JSON location where the validation error occurred.
            </summary>
            <value>The path of the JSON location where the validation error occurred.</value>
        </member>
        <member name="T:Elastic.Apm.Libraries.Newtonsoft.Json.Schema.ValidationEventHandler">
            <summary>
            <para>
            Represents the callback method that will handle JSON schema validation events and the
            <see cref="T:Elastic.Apm.Libraries.Newtonsoft.Json.Schema.ValidationEventArgs" />.
            </para>
            <note type="caution">
            JSON Schema validation has been moved to its own package. See
            <see href="https://www.newtonsoft.com/jsonschema">https://www.newtonsoft.com/jsonschema</see> for more details.
            </note>
            </summary>
        </member>
        <member name="T:Elastic.Apm.Libraries.Newtonsoft.Json.Serialization.CamelCaseNamingStrategy">
            <summary>
            A camel case naming strategy.
            </summary>
        </member>
        <member name="M:Elastic.Apm.Libraries.Newtonsoft.Json.Serialization.CamelCaseNamingStrategy.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:Elastic.Apm.Libraries.Newtonsoft.Json.Serialization.CamelCaseNamingStrategy" /> class.
            </summary>
            <param name="processDictionaryKeys">
            A flag indicating whether dictionary keys should be processed.
            </param>
            <param name="overrideSpecifiedNames">
            A flag indicating whether explicitly specified property names should be processed,
            e.g. a property name customized with a <see cref="T:Elastic.Apm.Libraries.Newtonsoft.Json.JsonPropertyAttribute" />.
            </param>
        </member>
        <member name="M:Elastic.Apm.Libraries.Newtonsoft.Json.Serialization.CamelCaseNamingStrategy.#ctor(System.Boolean,System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:Elastic.Apm.Libraries.Newtonsoft.Json.Serialization.CamelCaseNamingStrategy" /> class.
            </summary>
            <param name="processDictionaryKeys">
            A flag indicating whether dictionary keys should be processed.
            </param>
            <param name="overrideSpecifiedNames">
            A flag indicating whether explicitly specified property names should be processed,
            e.g. a property name customized with a <see cref="T:Elastic.Apm.Libraries.Newtonsoft.Json.JsonPropertyAttribute" />.
            </param>
            <param name="processExtensionDataNames">
            A flag indicating whether extension data names should be processed.
            </param>
        </member>
        <member name="M:Elastic.Apm.Libraries.Newtonsoft.Json.Serialization.CamelCaseNamingStrategy.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Elastic.Apm.Libraries.Newtonsoft.Json.Serialization.CamelCaseNamingStrategy" /> class.
            </summary>
        </member>
        <member name="M:Elastic.Apm.Libraries.Newtonsoft.Json.Serialization.CamelCaseNamingStrategy.ResolvePropertyName(System.String)">
            <summary>
            Resolves the specified property name.
            </summary>
            <param name="name">The property name to resolve.</param>
            <returns>The resolved property name.</returns>
        </member>
        <member name="T:Elastic.Apm.Libraries.Newtonsoft.Json.Serialization.CamelCasePropertyNamesContractResolver">
            <summary>
            Resolves member mappings for a type, camel casing property names.
            </summary>
        </member>
        <member name="M:Elastic.Apm.Libraries.Newtonsoft.Json.Serialization.CamelCasePropertyNamesContractResolver.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Elastic.Apm.Libraries.Newtonsoft.Json.Serialization.CamelCasePropertyNamesContractResolver" /> class.
            </summary>
        </member>
        <member name="M:Elastic.Apm.Libraries.Newtonsoft.Json.Serialization.CamelCasePropertyNamesContractResolver.ResolveContract(System.Type)">
            <summary>
            Resolves the contract for a given type.
            </summary>
            <param name="type">The type to resolve a contract for.</param>
            <returns>The contract for a given type.</returns>
        </member>
        <member name="T:Elastic.Apm.Libraries.Newtonsoft.Json.Serialization.DefaultContractResolver">
            <summary>
            Used by <see cref="T:Elastic.Apm.Libraries.Newtonsoft.Json.JsonSerializer" /> to resolve a <see cref="T:Elastic.Apm.Libraries.Newtonsoft.Json.Serialization.JsonContract" /> for a given <see cref="T:System.Type" />.
            </summary>
        </member>
        <member name="P:Elastic.Apm.Libraries.Newtonsoft.Json.Serialization.DefaultContractResolver.DynamicCodeGeneration">
            <summary>
            Gets a value indicating whether members are being get and set using dynamic code generation.
            This value is determined by the runtime permissions available.
            </summary>
            <value>
            	<c>true</c> if using dynamic code generation; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Elastic.Apm.Libraries.Newtonsoft.Json.Serialization.DefaultContractResolver.DefaultMembersSearchFlags">
            <summary>
            Gets or sets the default members search flags.
            </summary>
            <value>The default members search flags.</value>
        </member>
        <member name="P:Elastic.Apm.Libraries.Newtonsoft.Json.Serialization.DefaultContractResolver.SerializeCompilerGeneratedMembers">
            <summary>
            Gets or sets a value indicating whether compiler generated members should be serialized.
            </summary>
            <value>
            	<c>true</c> if serialized compiler generated members; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Elastic.Apm.Libraries.Newtonsoft.Json.Serialization.DefaultContractResolver.IgnoreSerializableInterface">
            <summary>
            Gets or sets a value indicating whether to ignore the <see cref="T:System.Runtime.Serialization.ISerializable"/> interface when serializing and deserializing types.
            </summary>
            <value>
            	<c>true</c> if the <see cref="T:System.Runtime.Serialization.ISerializable"/> interface will be ignored when serializing and deserializing types; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Elastic.Apm.Libraries.Newtonsoft.Json.Serialization.DefaultContractResolver.IgnoreSerializableAttribute">
            <summary>
            Gets or sets a value indicating whether to ignore the <see cref="T:System.SerializableAttribute"/> attribute when serializing and deserializing types.
            </summary>
            <value>
            	<c>true</c> if the <see cref="T:System.SerializableAttribute"/> attribute will be ignored when serializing and deserializing types; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Elastic.Apm.Libraries.Newtonsoft.Json.Serialization.DefaultContractResolver.IgnoreIsSpecifiedMembers">
            <summary>
            Gets or sets a value indicating whether to ignore IsSpecified members when serializing and deserializing types.
            </summary>
            <value>
                <c>true</c> if the IsSpecified members will be ignored when serializing and deserializing types; otherwise,
            <c>false</c>.
            </value>
        </member>
        <member name="P:Elastic.Apm.Libraries.Newtonsoft.Json.Serialization.DefaultContractResolver.IgnoreShouldSerializeMembers">
            <summary>
            Gets or sets a value indicating whether to ignore ShouldSerialize members when serializing and deserializing types.
            </summary>
            <value>
                <c>true</c> if the ShouldSerialize members will be ignored when serializing and deserializing types; otherwise,
            <c>false</c>.
            </value>
        </member>
        <member name="P:Elastic.Apm.Libraries.Newtonsoft.Json.Serialization.DefaultContractResolver.NamingStrategy">
            <summary>
            Gets or sets the naming strategy used to resolve how property names and dictionary keys are serialized.
            </summary>
            <value>The naming strategy used to resolve how property names and dictionary keys are serialized.</value>
        </member>
        <member name="M:Elastic.Apm.Libraries.Newtonsoft.Json.Serialization.DefaultContractResolver.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Elastic.Apm.Libraries.Newtonsoft.Json.Serialization.DefaultContractResolver" /> class.
            </summary>
        </member>
        <member name="M:Elastic.Apm.Libraries.Newtonsoft.Json.Serialization.DefaultContractResolver.ResolveContract(System.Type)">
            <summary>
            Resolves the contract for a given type.
            </summary>
            <param name="type">The type to resolve a contract for.</param>
            <returns>The contract for a given type.</returns>
        </member>
        <member name="M:Elastic.Apm.Libraries.Newtonsoft.Json.Serialization.DefaultContractResolver.GetSerializableMembers(System.Type)">
            <summary>
            Gets the serializable members for the type.
            </summary>
            <param name="objectType">The type to get serializable members for.</param>
            <returns>The serializable members for the type.</returns>
        </member>
        <member name="M:Elastic.Apm.Libraries.Newtonsoft.Json.Serialization.DefaultContractResolver.CreateObjectContract(System.Type)">
            <summary>
            Creates a <see cref="T:Elastic.Apm.Libraries.Newtonsoft.Json.Serialization.JsonObjectContract" /> for the given type.
            </summary>
            <param name="objectType">Type of the object.</param>
            <returns>A <see cref="T:Elastic.Apm.Libraries.Newtonsoft.Json.Serialization.JsonObjectContract" /> for the given type.</returns>
        </member>
        <member name="M:Elastic.Apm.Libraries.Newtonsoft.Json.Serialization.DefaultContractResolver.CreateConstructorParameters(System.Reflection.ConstructorInfo,Elastic.Apm.Libraries.Newtonsoft.Json.Serialization.JsonPropertyCollection)">
            <summary>
            Creates the constructor parameters.
            </summary>
            <param name="constructor">The constructor to create properties for.</param>
            <param name="memberProperties">The type's member properties.</param>
            <returns>Properties for the given <see cref="T:System.Reflection.ConstructorInfo" />.</returns>
        </member>
        <member name="M:Elastic.Apm.Libraries.Newtonsoft.Json.Serialization.DefaultContractResolver.CreatePropertyFromConstructorParameter(Elastic.Apm.Libraries.Newtonsoft.Json.Serialization.JsonProperty,System.Reflection.ParameterInfo)">
            <summary>
            Creates a <see cref="T:Elastic.Apm.Libraries.Newtonsoft.Json.Serialization.JsonProperty" /> for the given <see cref="T:System.Reflection.ParameterInfo" />.
            </summary>
            <param name="matchingMemberProperty">The matching member property.</param>
            <param name="parameterInfo">The constructor parameter.</param>
            <returns>A created <see cref="T:Elastic.Apm.Libraries.Newtonsoft.Json.Serialization.JsonProperty" /> for the given <see cref="T:System.Reflection.ParameterInfo" />.</returns>
        </member>
        <member name="M:Elastic.Apm.Libraries.Newtonsoft.Json.Serialization.DefaultContractResolver.ResolveContractConverter(System.Type)">
            <summary>
            Resolves the default <see cref="T:Elastic.Apm.Libraries.Newtonsoft.Json.JsonConverter" /> for the contract.
            </summary>
            <param name="objectType">Type of the object.</param>
            <returns>The contract's default <see cref="T:Elastic.Apm.Libraries.Newtonsoft.Json.JsonConverter" />.</returns>
        </member>
        <member name="M:Elastic.Apm.Libraries.Newtonsoft.Json.Serialization.DefaultContractResolver.CreateDictionaryContract(System.Type)">
            <summary>
            Creates a <see cref="T:Elastic.Apm.Libraries.Newtonsoft.Json.Serialization.JsonDictionaryContract" /> for the given type.
            </summary>
            <param name="objectType">Type of the object.</param>
            <returns>A <see cref="T:Elastic.Apm.Libraries.Newtonsoft.Json.Serialization.JsonDictionaryContract" /> for the given type.</returns>
        </member>
        <member name="M:Elastic.Apm.Libraries.Newtonsoft.Json.Serialization.DefaultContractResolver.CreateArrayContract(System.Type)">
            <summary>
            Creates a <see cref="T:Elastic.Apm.Libraries.Newtonsoft.Json.Serialization.JsonArrayContract" /> for the given type.
            </summary>
            <param name="objectType">Type of the object.</param>
            <returns>A <see cref="T:Elastic.Apm.Libraries.Newtonsoft.Json.Serialization.JsonArrayContract" /> for the given type.</returns>
        </member>
        <member name="M:Elastic.Apm.Libraries.Newtonsoft.Json.Serialization.DefaultContractResolver.CreatePrimitiveContract(System.Type)">
            <summary>
            Creates a <see cref="T:Elastic.Apm.Libraries.Newtonsoft.Json.Serialization.JsonPrimitiveContract" /> for the given type.
            </summary>
            <param name="objectType">Type of the object.</param>
            <returns>A <see cref="T:Elastic.Apm.Libraries.Newtonsoft.Json.Serialization.JsonPrimitiveContract" /> for the given type.</returns>
        </member>
        <member name="M:Elastic.Apm.Libraries.Newtonsoft.Json.Serialization.DefaultContractResolver.CreateLinqContract(System.Type)">
            <summary>
            Creates a <see cref="T:Elastic.Apm.Libraries.Newtonsoft.Json.Serialization.JsonLinqContract" /> for the given type.
            </summary>
            <param name="objectType">Type of the object.</param>
            <returns>A <see cref="T:Elastic.Apm.Libraries.Newtonsoft.Json.Serialization.JsonLinqContract" /> for the given type.</returns>
        </member>
        <member name="M:Elastic.Apm.Libraries.Newtonsoft.Json.Serialization.DefaultContractResolver.CreateISerializableContract(System.Type)">
            <summary>
            Creates a <see cref="T:Elastic.Apm.Libraries.Newtonsoft.Json.Serialization.JsonISerializableContract"/> for the given type.
            </summary>
            <param name="objectType">Type of the object.</param>
            <returns>A <see cref="T:Elastic.Apm.Libraries.Newtonsoft.Json.Serialization.JsonISerializableContract"/> for the given type.</returns>
        </member>
        <member name="M:Elastic.Apm.Libraries.Newtonsoft.Json.Serialization.DefaultContractResolver.CreateDynamicContract(System.Type)">
            <summary>
            Creates a <see cref="T:Elastic.Apm.Libraries.Newtonsoft.Json.Serialization.JsonDynamicContract"/> for the given type.
            </summary>
            <param name="objectType">Type of the object.</param>
            <returns>A <see cref="T:Elastic.Apm.Libraries.Newtonsoft.Json.Serialization.JsonDynamicContract"/> for the given type.</returns>
        </member>
        <member name="M:Elastic.Apm.Libraries.Newtonsoft.Json.Serialization.DefaultContractResolver.CreateStringContract(System.Type)">
            <summary>
            Creates a <see cref="T:Elastic.Apm.Libraries.Newtonsoft.Json.Serialization.JsonStringContract" /> for the given type.
            </summary>
            <param name="objectType">Type of the object.</param>
            <returns>A <see cref="T:Elastic.Apm.Libraries.Newtonsoft.Json.Serialization.JsonStringContract" /> for the given type.</returns>
        </member>
        <member name="M:Elastic.Apm.Libraries.Newtonsoft.Json.Serialization.DefaultContractResolver.CreateContract(System.Type)">
            <summary>
            Determines which contract type is created for the given type.
            </summary>
            <param name="objectType">Type of the object.</param>
            <returns>A <see cref="T:Elastic.Apm.Libraries.Newtonsoft.Json.Serialization.JsonContract" /> for the given type.</returns>
        </member>
        <member name="M:Elastic.Apm.Libraries.Newtonsoft.Json.Serialization.DefaultContractResolver.CreateProperties(System.Type,Elastic.Apm.Libraries.Newtonsoft.Json.MemberSerialization)">
            <summary>
            Creates properties for the given <see cref="T:Elastic.Apm.Libraries.Newtonsoft.Json.Serialization.JsonContract" />.
            </summary>
            <param name="type">The type to create properties for.</param>
            ///
            <param name="memberSerialization">The member serialization mode for the type.</param>
            <returns>Properties for the given <see cref="T:Elastic.Apm.Libraries.Newtonsoft.Json.Serialization.JsonContract" />.</returns>
        </member>
        <member name="M:Elastic.Apm.Libraries.Newtonsoft.Json.Serialization.DefaultContractResolver.CreateMemberValueProvider(System.Reflection.MemberInfo)">
            <summary>
            Creates the <see cref="T:Elastic.Apm.Libraries.Newtonsoft.Json.Serialization.IValueProvider" /> used by the serializer to get and set values from a member.
            </summary>
            <param name="member">The member.</param>
            <returns>The <see cref="T:Elastic.Apm.Libraries.Newtonsoft.Json.Serialization.IValueProvider" /> used by the serializer to get and set values from a member.</returns>
        </member>
        <member name="M:Elastic.Apm.Libraries.Newtonsoft.Json.Serialization.DefaultContractResolver.CreateProperty(System.Reflection.MemberInfo,Elastic.Apm.Libraries.Newtonsoft.Json.MemberSerialization)">
            <summary>
            Creates a <see cref="T:Elastic.Apm.Libraries.Newtonsoft.Json.Serialization.JsonProperty" /> for the given <see cref="T:System.Reflection.MemberInfo" />.
            </summary>
            <param name="memberSerialization">The member's parent <see cref="T:Elastic.Apm.Libraries.Newtonsoft.Json.MemberSerialization" />.</param>
            <param name="member">The member to create a <see cref="T:Elastic.Apm.Libraries.Newtonsoft.Json.Serialization.JsonProperty" /> for.</param>
            <returns>A created <see cref="T:Elastic.Apm.Libraries.Newtonsoft.Json.Serialization.JsonProperty" /> for the given <see cref="T:System.Reflection.MemberInfo" />.</returns>
        </member>
        <member name="M:Elastic.Apm.Libraries.Newtonsoft.Json.Serialization.DefaultContractResolver.ResolvePropertyName(System.String)">
            <summary>
            Resolves the name of the property.
            </summary>
            <param name="propertyName">Name of the property.</param>
            <returns>Resolved name of the property.</returns>
        </member>
        <member name="M:Elastic.Apm.Libraries.Newtonsoft.Json.Serialization.DefaultContractResolver.ResolveExtensionDataName(System.String)">
            <summary>
            Resolves the name of the extension data. By default no changes are made to extension data names.
            </summary>
            <param name="extensionDataName">Name of the extension data.</param>
            <returns>Resolved name of the extension data.</returns>
        </member>
        <member name="M:Elastic.Apm.Libraries.Newtonsoft.Json.Serialization.DefaultContractResolver.ResolveDictionaryKey(System.String)">
            <summary>
            Resolves the key of the dictionary. By default <see cref="M:Elastic.Apm.Libraries.Newtonsoft.Json.Serialization.DefaultContractResolver.ResolvePropertyName(System.String)" /> is used to resolve dictionary keys.
            </summary>
            <param name="dictionaryKey">Key of the dictionary.</param>
            <returns>Resolved key of the dictionary.</returns>
        </member>
        <member name="M:Elastic.Apm.Libraries.Newtonsoft.Json.Serialization.DefaultContractResolver.GetResolvedPropertyName(System.String)">
            <summary>
            Gets the resolved name of the property.
            </summary>
            <param name="propertyName">Name of the property.</param>
            <returns>Name of the property.</returns>
        </member>
        <member name="T:Elastic.Apm.Libraries.Newtonsoft.Json.Serialization.DefaultNamingStrategy">
            <summary>
            The default naming strategy. Property names and dictionary keys are unchanged.
            </summary>
        </member>
        <member name="M:Elastic.Apm.Libraries.Newtonsoft.Json.Serialization.DefaultNamingStrategy.ResolvePropertyName(System.String)">
            <summary>
            Resolves the specified property name.
            </summary>
            <param name="name">The property name to resolve.</param>
            <returns>The resolved property name.</returns>
        </member>
        <member name="T:Elastic.Apm.Libraries.Newtonsoft.Json.Serialization.DefaultSerializationBinder">
            <summary>
            The default serialization binder used when resolving and loading classes from type names.
            </summary>
        </member>
        <member name="M:Elastic.Apm.Libraries.Newtonsoft.Json.Serialization.DefaultSerializationBinder.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Elastic.Apm.Libraries.Newtonsoft.Json.Serialization.DefaultSerializationBinder" /> class.
            </summary>
        </member>
        <member name="M:Elastic.Apm.Libraries.Newtonsoft.Json.Serialization.DefaultSerializationBinder.BindToType(System.String,System.String)">
            <summary>
            When overridden in a derived class, controls the binding of a serialized object to a type.
            </summary>
            <param name="assemblyName">Specifies the <see cref="T:System.Reflection.Assembly" /> name of the serialized object.</param>
            <param name="typeName">Specifies the <see cref="T:System.Type" /> name of the serialized object.</param>
            <returns>
            The type of the object the formatter creates a new instance of.
            </returns>
        </member>
        <member name="M:Elastic.Apm.Libraries.Newtonsoft.Json.Serialization.DefaultSerializationBinder.BindToName(System.Type,System.String@,System.String@)">
            <summary>
            When overridden in a derived class, controls the binding of a serialized object to a type.
            </summary>
            <param name="serializedType">The type of the object the formatter creates a new instance of.</param>
            <param name="assemblyName">Specifies the <see cref="T:System.Reflection.Assembly" /> name of the serialized object.</param>
            <param name="typeName">Specifies the <see cref="T:System.Type" /> name of the serialized object.</param>
        </member>
        <member name="T:Elastic.Apm.Libraries.Newtonsoft.Json.Serialization.DiagnosticsTraceWriter">
            <summary>
            Represents a trace writer that writes to the application's <see cref="T:System.Diagnostics.TraceListener"/> instances.
            </summary>
        </member>
        <member name="P:Elastic.Apm.Libraries.Newtonsoft.Json.Serialization.DiagnosticsTraceWriter.LevelFilter">
            <summary>
            Gets the <see cref="T:System.Diagnostics.TraceLevel"/> that will be used to filter the trace messages passed to the writer.
            For example a filter level of <see cref="F:System.Diagnostics.TraceLevel.Info"/> will exclude <see cref="F:System.Diagnostics.TraceLevel.Verbose"/> messages and include <see cref="F:System.Diagnostics.TraceLevel.Info"/>,
            <see cref="F:System.Diagnostics.TraceLevel.Warning"/> and <see cref="F:System.Diagnostics.TraceLevel.Error"/> messages.
            </summary>
            <value>
            The <see cref="T:System.Diagnostics.TraceLevel"/> that will be used to filter the trace messages passed to the writer.
            </value>
        </member>
        <member name="M:Elastic.Apm.Libraries.Newtonsoft.Json.Serialization.DiagnosticsTraceWriter.Trace(System.Diagnostics.TraceLevel,System.String,System.Exception)">
            <summary>
            Writes the specified trace level, message and optional exception.
            </summary>
            <param name="level">The <see cref="T:System.Diagnostics.TraceLevel"/> at which to write this trace.</param>
            <param name="message">The trace message.</param>
            <param name="ex">The trace exception. This parameter is optional.</param>
        </member>
        <member name="T:Elastic.Apm.Libraries.Newtonsoft.Json.Serialization.DynamicValueProvider">
            <summary>
            Get and set values for a <see cref="T:System.Reflection.MemberInfo"/> using dynamic methods.
            </summary>
        </member>
        <member name="M:Elastic.Apm.Libraries.Newtonsoft.Json.Serialization.DynamicValueProvider.#ctor(System.Reflection.MemberInfo)">
            <summary>
            Initializes a new instance of the <see cref="T:Elastic.Apm.Libraries.Newtonsoft.Json.Serialization.DynamicValueProvider"/> class.
            </summary>
            <param name="memberInfo">The member info.</param>
        </member>
        <member name="M:Elastic.Apm.Libraries.Newtonsoft.Json.Serialization.DynamicValueProvider.SetValue(System.Object,System.Object)">
            <summary>
            Sets the value.
            </summary>
            <param name="target">The target to set the value on.</param>
            <param name="value">The value to set on the target.</param>
        </member>
        <member name="M:Elastic.Apm.Libraries.Newtonsoft.Json.Serialization.DynamicValueProvider.GetValue(System.Object)">
            <summary>
            Gets the value.
            </summary>
            <param name="target">The target to get the value from.</param>
            <returns>The value.</returns>
        </member>
        <member name="T:Elastic.Apm.Libraries.Newtonsoft.Json.Serialization.ErrorContext">
            <summary>
            Provides information surrounding an error.
            </summary>
        </member>
        <member name="P:Elastic.Apm.Libraries.Newtonsoft.Json.Serialization.ErrorContext.Error">
            <summary>
            Gets the error.
            </summary>
            <value>The error.</value>
        </member>
        <member name="P:Elastic.Apm.Libraries.Newtonsoft.Json.Serialization.ErrorContext.Handled">
            <summary>
            Gets or sets a value indicating whether this <see cref="T:Elastic.Apm.Libraries.Newtonsoft.Json.Serialization.ErrorContext" /> is handled.
            </summary>
            <value><c>true</c> if handled; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Elastic.Apm.Libraries.Newtonsoft.Json.Serialization.ErrorContext.Member">
            <summary>
            Gets the member that caused the error.
            </summary>
            <value>The member that caused the error.</value>
        </member>
        <member name="P:Elastic.Apm.Libraries.Newtonsoft.Json.Serialization.ErrorContext.OriginalObject">
            <summary>
            Gets the original object that caused the error.
            </summary>
            <value>The original object that caused the error.</value>
        </member>
        <member name="P:Elastic.Apm.Libraries.Newtonsoft.Json.Serialization.ErrorContext.Path">
            <summary>
            Gets the path of the JSON location where the error occurred.
            </summary>
            <value>The path of the JSON location where the error occurred.</value>
        </member>
        <member name="T:Elastic.Apm.Libraries.Newtonsoft.Json.Serialization.ErrorEventArgs">
            <summary>
            Provides data for the Error event.
            </summary>
        </member>
        <member name="M:Elastic.Apm.Libraries.Newtonsoft.Json.Serialization.ErrorEventArgs.#ctor(System.Object,Elastic.Apm.Libraries.Newtonsoft.Json.Serialization.ErrorContext)">
            <summary>
            Initializes a new instance of the <see cref="T:Elastic.Apm.Libraries.Newtonsoft.Json.Serialization.ErrorEventArgs" /> class.
            </summary>
            <param name="currentObject">The current object.</param>
            <param name="errorContext">The error context.</param>
        </member>
        <member name="P:Elastic.Apm.Libraries.Newtonsoft.Json.Serialization.ErrorEventArgs.CurrentObject">
            <summary>
            Gets the current object the error event is being raised against.
            </summary>
            <value>The current object the error event is being raised against.</value>
        </member>
        <member name="P:Elastic.Apm.Libraries.Newtonsoft.Json.Serialization.ErrorEventArgs.ErrorContext">
            <summary>
            Gets the error context.
            </summary>
            <value>The error context.</value>
        </member>
        <member name="T:Elastic.Apm.Libraries.Newtonsoft.Json.Serialization.ExpressionValueProvider">
            <summary>
            Get and set values for a <see cref="T:System.Reflection.MemberInfo" /> using dynamic methods.
            </summary>
        </member>
        <member name="M:Elastic.Apm.Libraries.Newtonsoft.Json.Serialization.ExpressionValueProvider.#ctor(System.Reflection.MemberInfo)">
            <summary>
            Initializes a new instance of the <see cref="T:Elastic.Apm.Libraries.Newtonsoft.Json.Serialization.ExpressionValueProvider" /> class.
            </summary>
            <param name="memberInfo">The member info.</param>
        </member>
        <member name="M:Elastic.Apm.Libraries.Newtonsoft.Json.Serialization.ExpressionValueProvider.SetValue(System.Object,System.Object)">
            <summary>
            Sets the value.
            </summary>
            <param name="target">The target to set the value on.</param>
            <param name="value">The value to set on the target.</param>
        </member>
        <member name="M:Elastic.Apm.Libraries.Newtonsoft.Json.Serialization.ExpressionValueProvider.GetValue(System.Object)">
            <summary>
            Gets the value.
            </summary>
            <param name="target">The target to get the value from.</param>
            <returns>The value.</returns>
        </member>
        <member name="T:Elastic.Apm.Libraries.Newtonsoft.Json.Serialization.IAttributeProvider">
            <summary>
            Provides methods to get attributes.
            </summary>
        </member>
        <member name="M:Elastic.Apm.Libraries.Newtonsoft.Json.Serialization.IAttributeProvider.GetAttributes(System.Boolean)">
            <summary>
            Returns a collection of all of the attributes, or an empty collection if there are no attributes.
            </summary>
            <param name="inherit">When <c>true</c>, look up the hierarchy chain for the inherited custom attribute.</param>
            <returns>A collection of <see cref="T:System.Attribute" />s, or an empty collection.</returns>
        </member>
        <member name="M:Elastic.Apm.Libraries.Newtonsoft.Json.Serialization.IAttributeProvider.GetAttributes(System.Type,System.Boolean)">
            <summary>
            Returns a collection of attributes, identified by type, or an empty collection if there are no attributes.
            </summary>
            <param name="attributeType">The type of the attributes.</param>
            <param name="inherit">When <c>true</c>, look up the hierarchy chain for the inherited custom attribute.</param>
            <returns>A collection of <see cref="T:System.Attribute" />s, or an empty collection.</returns>
        </member>
        <member name="T:Elastic.Apm.Libraries.Newtonsoft.Json.Serialization.IContractResolver">
            <summary>
            Used by <see cref="T:Elastic.Apm.Libraries.Newtonsoft.Json.JsonSerializer" /> to resolve a <see cref="T:Elastic.Apm.Libraries.Newtonsoft.Json.Serialization.JsonContract" /> for a given <see cref="T:System.Type" />.
            </summary>
            <example>
              <code lang="cs" source="..\Src\Newtonsoft.Json.Tests\Documentation\SerializationTests.cs"
                  region="ReducingSerializedJsonSizeContractResolverObject" title="IContractResolver Class" />
              <code lang="cs" source="..\Src\Newtonsoft.Json.Tests\Documentation\SerializationTests.cs"
                  region="ReducingSerializedJsonSizeContractResolverExample" title="IContractResolver Example" />
            </example>
        </member>
        <member name="M:Elastic.Apm.Libraries.Newtonsoft.Json.Serialization.IContractResolver.ResolveContract(System.Type)">
            <summary>
            Resolves the contract for a given type.
            </summary>
            <param name="type">The type to resolve a contract for.</param>
            <returns>The contract for a given type.</returns>
        </member>
        <member name="T:Elastic.Apm.Libraries.Newtonsoft.Json.Serialization.IReferenceResolver">
            <summary>
            Used to resolve references when serializing and deserializing JSON by the <see cref="T:Elastic.Apm.Libraries.Newtonsoft.Json.JsonSerializer" />.
            </summary>
        </member>
        <member name="M:Elastic.Apm.Libraries.Newtonsoft.Json.Serialization.IReferenceResolver.AddReference(System.Object,System.String,System.Object)">
            <summary>
            Adds a reference to the specified object.
            </summary>
            <param name="context">The serialization context.</param>
            <param name="reference">The reference.</param>
            <param name="value">The object to reference.</param>
        </member>
        <member name="M:Elastic.Apm.Libraries.Newtonsoft.Json.Serialization.IReferenceResolver.GetReference(System.Object,System.Object)">
            <summary>
            Gets the reference for the specified object.
            </summary>
            <param name="context">The serialization context.</param>
            <param name="value">The object to get a reference for.</param>
            <returns>The reference to the object.</returns>
        </member>
        <member name="M:Elastic.Apm.Libraries.Newtonsoft.Json.Serialization.IReferenceResolver.IsReferenced(System.Object,System.Object)">
            <summary>
            Determines whether the specified object is referenced.
            </summary>
            <param name="context">The serialization context.</param>
            <param name="value">The object to test for a reference.</param>
            <returns>
            	<c>true</c> if the specified object is referenced; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Elastic.Apm.Libraries.Newtonsoft.Json.Serialization.IReferenceResolver.ResolveReference(System.Object,System.String)">
            <summary>
            Resolves a reference to its object.
            </summary>
            <param name="context">The serialization context.</param>
            <param name="reference">The reference to resolve.</param>
            <returns>The object that was resolved from the reference.</returns>
        </member>
        <member name="T:Elastic.Apm.Libraries.Newtonsoft.Json.Serialization.ISerializationBinder">
            <summary>
            Allows users to control class loading and mandate what class to load.
            </summary>
        </member>
        <member name="M:Elastic.Apm.Libraries.Newtonsoft.Json.Serialization.ISerializationBinder.BindToName(System.Type,System.String@,System.String@)">
            <summary>
            When implemented, controls the binding of a serialized object to a type.
            </summary>
            <param name="serializedType">The type of the object the formatter creates a new instance of.</param>
            <param name="assemblyName">Specifies the <see cref="T:System.Reflection.Assembly" /> name of the serialized object.</param>
            <param name="typeName">Specifies the <see cref="T:System.Type" /> name of the serialized object.</param>
        </member>
        <member name="M:Elastic.Apm.Libraries.Newtonsoft.Json.Serialization.ISerializationBinder.BindToType(System.String,System.String)">
            <summary>
            When implemented, controls the binding of a serialized object to a type.
            </summary>
            <param name="assemblyName">Specifies the <see cref="T:System.Reflection.Assembly" /> name of the serialized object.</param>
            <param name="typeName">Specifies the <see cref="T:System.Type" /> name of the serialized object</param>
            <returns>The type of the object the formatter creates a new instance of.</returns>
        </member>
        <member name="T:Elastic.Apm.Libraries.Newtonsoft.Json.Serialization.ITraceWriter">
            <summary>
            Represents a trace writer.
            </summary>
        </member>
        <member name="P:Elastic.Apm.Libraries.Newtonsoft.Json.Serialization.ITraceWriter.LevelFilter">
            <summary>
            Gets the <see cref="T:System.Diagnostics.TraceLevel" /> that will be used to filter the trace messages passed to the writer.
            For example a filter level of <see cref="F:System.Diagnostics.TraceLevel.Info" /> will exclude <see cref="F:System.Diagnostics.TraceLevel.Verbose" /> messages
            and include <see cref="F:System.Diagnostics.TraceLevel.Info" />,
            <see cref="F:System.Diagnostics.TraceLevel.Warning" /> and <see cref="F:System.Diagnostics.TraceLevel.Error" /> messages.
            </summary>
            <value>The <see cref="T:System.Diagnostics.TraceLevel" /> that will be used to filter the trace messages passed to the writer.</value>
        </member>
        <member name="M:Elastic.Apm.Libraries.Newtonsoft.Json.Serialization.ITraceWriter.Trace(System.Diagnostics.TraceLevel,System.String,System.Exception)">
            <summary>
            Writes the specified trace level, message and optional exception.
            </summary>
            <param name="level">The <see cref="T:System.Diagnostics.TraceLevel" /> at which to write this trace.</param>
            <param name="message">The trace message.</param>
            <param name="ex">The trace exception. This parameter is optional.</param>
        </member>
        <member name="T:Elastic.Apm.Libraries.Newtonsoft.Json.Serialization.IValueProvider">
            <summary>
            Provides methods to get and set values.
            </summary>
        </member>
        <member name="M:Elastic.Apm.Libraries.Newtonsoft.Json.Serialization.IValueProvider.GetValue(System.Object)">
            <summary>
            Gets the value.
            </summary>
            <param name="target">The target to get the value from.</param>
            <returns>The value.</returns>
        </member>
        <member name="M:Elastic.Apm.Libraries.Newtonsoft.Json.Serialization.IValueProvider.SetValue(System.Object,System.Object)">
            <summary>
            Sets the value.
            </summary>
            <param name="target">The target to set the value on.</param>
            <param name="value">The value to set on the target.</param>
        </member>
        <member name="T:Elastic.Apm.Libraries.Newtonsoft.Json.Serialization.JsonArrayContract">
            <summary>
            Contract details for a <see cref="T:System.Type" /> used by the <see cref="T:Elastic.Apm.Libraries.Newtonsoft.Json.JsonSerializer" />.
            </summary>
        </member>
        <member name="P:Elastic.Apm.Libraries.Newtonsoft.Json.Serialization.JsonArrayContract.CollectionItemType">
            <summary>
            Gets the <see cref="T:System.Type" /> of the collection items.
            </summary>
            <value>The <see cref="T:System.Type" /> of the collection items.</value>
        </member>
        <member name="P:Elastic.Apm.Libraries.Newtonsoft.Json.Serialization.JsonArrayContract.IsMultidimensionalArray">
            <summary>
            Gets a value indicating whether the collection type is a multidimensional array.
            </summary>
            <value><c>true</c> if the collection type is a multidimensional array; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Elastic.Apm.Libraries.Newtonsoft.Json.Serialization.JsonArrayContract.OverrideCreator">
            <summary>
            Gets or sets the function used to create the object. When set this function will override
            <see cref="P:Elastic.Apm.Libraries.Newtonsoft.Json.Serialization.JsonContract.DefaultCreator" />.
            </summary>
            <value>The function used to create the object.</value>
        </member>
        <member name="P:Elastic.Apm.Libraries.Newtonsoft.Json.Serialization.JsonArrayContract.HasParameterizedCreator">
            <summary>
            Gets a value indicating whether the creator has a parameter with the collection values.
            </summary>
            <value><c>true</c> if the creator has a parameter with the collection values; otherwise, <c>false</c>.</value>
        </member>
        <member name="M:Elastic.Apm.Libraries.Newtonsoft.Json.Serialization.JsonArrayContract.#ctor(System.Type)">
            <summary>
            Initializes a new instance of the <see cref="T:Elastic.Apm.Libraries.Newtonsoft.Json.Serialization.JsonArrayContract" /> class.
            </summary>
            <param name="underlyingType">The underlying type for the contract.</param>
        </member>
        <member name="T:Elastic.Apm.Libraries.Newtonsoft.Json.Serialization.JsonContainerContract">
            <summary>
            Contract details for a <see cref="T:System.Type" /> used by the <see cref="T:Elastic.Apm.Libraries.Newtonsoft.Json.JsonSerializer" />.
            </summary>
        </member>
        <member name="M:Elastic.Apm.Libraries.Newtonsoft.Json.Serialization.JsonContainerContract.#ctor(System.Type)">
            <summary>
            Initializes a new instance of the <see cref="T:Elastic.Apm.Libraries.Newtonsoft.Json.Serialization.JsonContainerContract" /> class.
            </summary>
            <param name="underlyingType">The underlying type for the contract.</param>
        </member>
        <member name="P:Elastic.Apm.Libraries.Newtonsoft.Json.Serialization.JsonContainerContract.ItemConverter">
            <summary>
            Gets or sets the default collection items <see cref="T:Elastic.Apm.Libraries.Newtonsoft.Json.JsonConverter" />.
            </summary>
            <value>The converter.</value>
        </member>
        <member name="P:Elastic.Apm.Libraries.Newtonsoft.Json.Serialization.JsonContainerContract.ItemIsReference">
            <summary>
            Gets or sets a value indicating whether the collection items preserve object references.
            </summary>
            <value><c>true</c> if collection items preserve object references; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Elastic.Apm.Libraries.Newtonsoft.Json.Serialization.JsonContainerContract.ItemReferenceLoopHandling">
            <summary>
            Gets or sets the collection item reference loop handling.
            </summary>
            <value>The reference loop handling.</value>
        </member>
        <member name="P:Elastic.Apm.Libraries.Newtonsoft.Json.Serialization.JsonContainerContract.ItemTypeNameHandling">
            <summary>
            Gets or sets the collection item type name handling.
            </summary>
            <value>The type name handling.</value>
        </member>
        <member name="T:Elastic.Apm.Libraries.Newtonsoft.Json.Serialization.SerializationCallback">
            <summary>
            Handles <see cref="T:Elastic.Apm.Libraries.Newtonsoft.Json.JsonSerializer" /> serialization callback events.
            </summary>
            <param name="o">The object that raised the callback event.</param>
            <param name="context">The streaming context.</param>
        </member>
        <member name="T:Elastic.Apm.Libraries.Newtonsoft.Json.Serialization.SerializationErrorCallback">
            <summary>
            Handles <see cref="T:Elastic.Apm.Libraries.Newtonsoft.Json.JsonSerializer" /> serialization error callback events.
            </summary>
            <param name="o">The object that raised the callback event.</param>
            <param name="context">The streaming context.</param>
            <param name="errorContext">The error context.</param>
        </member>
        <member name="T:Elastic.Apm.Libraries.Newtonsoft.Json.Serialization.ExtensionDataSetter">
            <summary>
            Sets extension data for an object during deserialization.
            </summary>
            <param name="o">The object to set extension data on.</param>
            <param name="key">The extension data key.</param>
            <param name="value">The extension data value.</param>
        </member>
        <member name="T:Elastic.Apm.Libraries.Newtonsoft.Json.Serialization.ExtensionDataGetter">
            <summary>
            Gets extension data for an object during serialization.
            </summary>
            <param name="o">The object to set extension data on.</param>
        </member>
        <member name="T:Elastic.Apm.Libraries.Newtonsoft.Json.Serialization.JsonContract">
            <summary>
            Contract details for a <see cref="T:System.Type" /> used by the <see cref="T:Elastic.Apm.Libraries.Newtonsoft.Json.JsonSerializer" />.
            </summary>
        </member>
        <member name="P:Elastic.Apm.Libraries.Newtonsoft.Json.Serialization.JsonContract.Converter">
            <summary>
            Gets or sets the default <see cref="T:Elastic.Apm.Libraries.Newtonsoft.Json.JsonConverter" /> for this contract.
            </summary>
            <value>The converter.</value>
        </member>
        <member name="P:Elastic.Apm.Libraries.Newtonsoft.Json.Serialization.JsonContract.CreatedType">
            <summary>
            Gets or sets the type created during deserialization.
            </summary>
            <value>The type created during deserialization.</value>
        </member>
        <member name="P:Elastic.Apm.Libraries.Newtonsoft.Json.Serialization.JsonContract.DefaultCreator">
            <summary>
            Gets or sets the default creator method used to create the object.
            </summary>
            <value>The default creator method used to create the object.</value>
        </member>
        <member name="P:Elastic.Apm.Libraries.Newtonsoft.Json.Serialization.JsonContract.DefaultCreatorNonPublic">
            <summary>
            Gets or sets a value indicating whether the default creator is non-public.
            </summary>
            <value><c>true</c> if the default object creator is non-public; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Elastic.Apm.Libraries.Newtonsoft.Json.Serialization.JsonContract.InternalConverter">
            <summary>
            Gets the internally resolved <see cref="T:Elastic.Apm.Libraries.Newtonsoft.Json.JsonConverter" /> for the contract's type.
            This converter is used as a fallback converter when no other converter is resolved.
            Setting <see cref="P:Elastic.Apm.Libraries.Newtonsoft.Json.Serialization.JsonContract.Converter" /> will always override this converter.
            </summary>
        </member>
        <member name="P:Elastic.Apm.Libraries.Newtonsoft.Json.Serialization.JsonContract.IsReference">
            <summary>
            Gets or sets whether this type contract is serialized as a reference.
            </summary>
            <value>Whether this type contract is serialized as a reference.</value>
        </member>
        <member name="P:Elastic.Apm.Libraries.Newtonsoft.Json.Serialization.JsonContract.OnDeserializedCallbacks">
            <summary>
            Gets or sets all methods called immediately after deserialization of the object.
            </summary>
            <value>The methods called immediately after deserialization of the object.</value>
        </member>
        <member name="P:Elastic.Apm.Libraries.Newtonsoft.Json.Serialization.JsonContract.OnDeserializingCallbacks">
            <summary>
            Gets or sets all methods called during deserialization of the object.
            </summary>
            <value>The methods called during deserialization of the object.</value>
        </member>
        <member name="P:Elastic.Apm.Libraries.Newtonsoft.Json.Serialization.JsonContract.OnErrorCallbacks">
            <summary>
            Gets or sets all method called when an error is thrown during the serialization of the object.
            </summary>
            <value>The methods called when an error is thrown during the serialization of the object.</value>
        </member>
        <member name="P:Elastic.Apm.Libraries.Newtonsoft.Json.Serialization.JsonContract.OnSerializedCallbacks">
            <summary>
            Gets or sets all methods called after serialization of the object graph.
            </summary>
            <value>The methods called after serialization of the object graph.</value>
        </member>
        <member name="P:Elastic.Apm.Libraries.Newtonsoft.Json.Serialization.JsonContract.OnSerializingCallbacks">
            <summary>
            Gets or sets all methods called before serialization of the object.
            </summary>
            <value>The methods called before serialization of the object.</value>
        </member>
        <member name="P:Elastic.Apm.Libraries.Newtonsoft.Json.Serialization.JsonContract.UnderlyingType">
            <summary>
            Gets the underlying type for the contract.
            </summary>
            <value>The underlying type for the contract.</value>
        </member>
        <member name="T:Elastic.Apm.Libraries.Newtonsoft.Json.Serialization.JsonDictionaryContract">
            <summary>
            Contract details for a <see cref="T:System.Type" /> used by the <see cref="T:Elastic.Apm.Libraries.Newtonsoft.Json.JsonSerializer" />.
            </summary>
        </member>
        <member name="M:Elastic.Apm.Libraries.Newtonsoft.Json.Serialization.JsonDictionaryContract.#ctor(System.Type)">
            <summary>
            Initializes a new instance of the <see cref="T:Elastic.Apm.Libraries.Newtonsoft.Json.Serialization.JsonDictionaryContract" /> class.
            </summary>
            <param name="underlyingType">The underlying type for the contract.</param>
        </member>
        <member name="P:Elastic.Apm.Libraries.Newtonsoft.Json.Serialization.JsonDictionaryContract.DictionaryKeyResolver">
            <summary>
            Gets or sets the dictionary key resolver.
            </summary>
            <value>The dictionary key resolver.</value>
        </member>
        <member name="P:Elastic.Apm.Libraries.Newtonsoft.Json.Serialization.JsonDictionaryContract.DictionaryKeyType">
            <summary>
            Gets the <see cref="T:System.Type" /> of the dictionary keys.
            </summary>
            <value>The <see cref="T:System.Type" /> of the dictionary keys.</value>
        </member>
        <member name="P:Elastic.Apm.Libraries.Newtonsoft.Json.Serialization.JsonDictionaryContract.DictionaryValueType">
            <summary>
            Gets the <see cref="T:System.Type" /> of the dictionary values.
            </summary>
            <value>The <see cref="T:System.Type" /> of the dictionary values.</value>
        </member>
        <member name="P:Elastic.Apm.Libraries.Newtonsoft.Json.Serialization.JsonDictionaryContract.HasParameterizedCreator">
            <summary>
            Gets a value indicating whether the creator has a parameter with the dictionary values.
            </summary>
            <value><c>true</c> if the creator has a parameter with the dictionary values; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Elastic.Apm.Libraries.Newtonsoft.Json.Serialization.JsonDictionaryContract.OverrideCreator">
            <summary>
            Gets or sets the function used to create the object. When set this function will override
            <see cref="P:Elastic.Apm.Libraries.Newtonsoft.Json.Serialization.JsonContract.DefaultCreator" />.
            </summary>
            <value>The function used to create the object.</value>
        </member>
        <member name="T:Elastic.Apm.Libraries.Newtonsoft.Json.Serialization.JsonDynamicContract">
            <summary>
            Contract details for a <see cref="T:System.Type"/> used by the <see cref="T:Elastic.Apm.Libraries.Newtonsoft.Json.JsonSerializer"/>.
            </summary>
        </member>
        <member name="P:Elastic.Apm.Libraries.Newtonsoft.Json.Serialization.JsonDynamicContract.Properties">
            <summary>
            Gets the object's properties.
            </summary>
            <value>The object's properties.</value>
        </member>
        <member name="P:Elastic.Apm.Libraries.Newtonsoft.Json.Serialization.JsonDynamicContract.PropertyNameResolver">
            <summary>
            Gets or sets the property name resolver.
            </summary>
            <value>The property name resolver.</value>
        </member>
        <member name="M:Elastic.Apm.Libraries.Newtonsoft.Json.Serialization.JsonDynamicContract.#ctor(System.Type)">
            <summary>
            Initializes a new instance of the <see cref="T:Elastic.Apm.Libraries.Newtonsoft.Json.Serialization.JsonDynamicContract"/> class.
            </summary>
            <param name="underlyingType">The underlying type for the contract.</param>
        </member>
        <member name="T:Elastic.Apm.Libraries.Newtonsoft.Json.Serialization.JsonISerializableContract">
            <summary>
            Contract details for a <see cref="T:System.Type"/> used by the <see cref="T:Elastic.Apm.Libraries.Newtonsoft.Json.JsonSerializer"/>.
            </summary>
        </member>
        <member name="P:Elastic.Apm.Libraries.Newtonsoft.Json.Serialization.JsonISerializableContract.ISerializableCreator">
            <summary>
            Gets or sets the <see cref="T:System.Runtime.Serialization.ISerializable"/> object constructor.
            </summary>
            <value>The <see cref="T:System.Runtime.Serialization.ISerializable"/> object constructor.</value>
        </member>
        <member name="M:Elastic.Apm.Libraries.Newtonsoft.Json.Serialization.JsonISerializableContract.#ctor(System.Type)">
            <summary>
            Initializes a new instance of the <see cref="T:Elastic.Apm.Libraries.Newtonsoft.Json.Serialization.JsonISerializableContract"/> class.
            </summary>
            <param name="underlyingType">The underlying type for the contract.</param>
        </member>
        <member name="T:Elastic.Apm.Libraries.Newtonsoft.Json.Serialization.JsonLinqContract">
            <summary>
            Contract details for a <see cref="T:System.Type" /> used by the <see cref="T:Elastic.Apm.Libraries.Newtonsoft.Json.JsonSerializer" />.
            </summary>
        </member>
        <member name="M:Elastic.Apm.Libraries.Newtonsoft.Json.Serialization.JsonLinqContract.#ctor(System.Type)">
            <summary>
            Initializes a new instance of the <see cref="T:Elastic.Apm.Libraries.Newtonsoft.Json.Serialization.JsonLinqContract" /> class.
            </summary>
            <param name="underlyingType">The underlying type for the contract.</param>
        </member>
        <member name="T:Elastic.Apm.Libraries.Newtonsoft.Json.Serialization.JsonObjectContract">
            <summary>
            Contract details for a <see cref="T:System.Type" /> used by the <see cref="T:Elastic.Apm.Libraries.Newtonsoft.Json.JsonSerializer" />.
            </summary>
        </member>
        <member name="P:Elastic.Apm.Libraries.Newtonsoft.Json.Serialization.JsonObjectContract.MemberSerialization">
            <summary>
            Gets or sets the object member serialization.
            </summary>
            <value>The member object serialization.</value>
        </member>
        <member name="P:Elastic.Apm.Libraries.Newtonsoft.Json.Serialization.JsonObjectContract.MissingMemberHandling">
            <summary>
            Gets or sets the missing member handling used when deserializing this object.
            </summary>
            <value>The missing member handling.</value>
        </member>
        <member name="P:Elastic.Apm.Libraries.Newtonsoft.Json.Serialization.JsonObjectContract.ItemRequired">
            <summary>
            Gets or sets a value that indicates whether the object's properties are required.
            </summary>
            <value>
            	A value indicating whether the object's properties are required.
            </value>
        </member>
        <member name="P:Elastic.Apm.Libraries.Newtonsoft.Json.Serialization.JsonObjectContract.ItemNullValueHandling">
            <summary>
            Gets or sets how the object's properties with null values are handled during serialization and deserialization.
            </summary>
            <value>How the object's properties with null values are handled during serialization and deserialization.</value>
        </member>
        <member name="P:Elastic.Apm.Libraries.Newtonsoft.Json.Serialization.JsonObjectContract.Properties">
            <summary>
            Gets the object's properties.
            </summary>
            <value>The object's properties.</value>
        </member>
        <member name="P:Elastic.Apm.Libraries.Newtonsoft.Json.Serialization.JsonObjectContract.CreatorParameters">
            <summary>
            Gets a collection of <see cref="T:Elastic.Apm.Libraries.Newtonsoft.Json.Serialization.JsonProperty" /> instances that define the parameters used with
            <see cref="P:Elastic.Apm.Libraries.Newtonsoft.Json.Serialization.JsonObjectContract.OverrideCreator" />.
            </summary>
        </member>
        <member name="P:Elastic.Apm.Libraries.Newtonsoft.Json.Serialization.JsonObjectContract.OverrideCreator">
            <summary>
            Gets or sets the function used to create the object. When set this function will override
            <see cref="P:Elastic.Apm.Libraries.Newtonsoft.Json.Serialization.JsonContract.DefaultCreator" />.
            This function is called with a collection of arguments which are defined by the
            <see cref="P:Elastic.Apm.Libraries.Newtonsoft.Json.Serialization.JsonObjectContract.CreatorParameters" /> collection.
            </summary>
            <value>The function used to create the object.</value>
        </member>
        <member name="P:Elastic.Apm.Libraries.Newtonsoft.Json.Serialization.JsonObjectContract.ExtensionDataSetter">
            <summary>
            Gets or sets the extension data setter.
            </summary>
        </member>
        <member name="P:Elastic.Apm.Libraries.Newtonsoft.Json.Serialization.JsonObjectContract.ExtensionDataGetter">
            <summary>
            Gets or sets the extension data getter.
            </summary>
        </member>
        <member name="P:Elastic.Apm.Libraries.Newtonsoft.Json.Serialization.JsonObjectContract.ExtensionDataValueType">
            <summary>
            Gets or sets the extension data value type.
            </summary>
        </member>
        <member name="P:Elastic.Apm.Libraries.Newtonsoft.Json.Serialization.JsonObjectContract.ExtensionDataNameResolver">
            <summary>
            Gets or sets the extension data name resolver.
            </summary>
            <value>The extension data name resolver.</value>
        </member>
        <member name="M:Elastic.Apm.Libraries.Newtonsoft.Json.Serialization.JsonObjectContract.#ctor(System.Type)">
            <summary>
            Initializes a new instance of the <see cref="T:Elastic.Apm.Libraries.Newtonsoft.Json.Serialization.JsonObjectContract" /> class.
            </summary>
            <param name="underlyingType">The underlying type for the contract.</param>
        </member>
        <member name="T:Elastic.Apm.Libraries.Newtonsoft.Json.Serialization.JsonPrimitiveContract">
            <summary>
            Contract details for a <see cref="T:System.Type" /> used by the <see cref="T:Elastic.Apm.Libraries.Newtonsoft.Json.JsonSerializer" />.
            </summary>
        </member>
        <member name="M:Elastic.Apm.Libraries.Newtonsoft.Json.Serialization.JsonPrimitiveContract.#ctor(System.Type)">
            <summary>
            Initializes a new instance of the <see cref="T:Elastic.Apm.Libraries.Newtonsoft.Json.Serialization.JsonPrimitiveContract" /> class.
            </summary>
            <param name="underlyingType">The underlying type for the contract.</param>
        </member>
        <member name="T:Elastic.Apm.Libraries.Newtonsoft.Json.Serialization.JsonProperty">
            <summary>
            Maps a JSON property to a .NET member or constructor parameter.
            </summary>
        </member>
        <member name="P:Elastic.Apm.Libraries.Newtonsoft.Json.Serialization.JsonProperty.AttributeProvider">
            <summary>
            Gets or sets the <see cref="T:Elastic.Apm.Libraries.Newtonsoft.Json.Serialization.IAttributeProvider" /> for this property.
            </summary>
            <value>The <see cref="T:Elastic.Apm.Libraries.Newtonsoft.Json.Serialization.IAttributeProvider" /> for this property.</value>
        </member>
        <member name="P:Elastic.Apm.Libraries.Newtonsoft.Json.Serialization.JsonProperty.Converter">
            <summary>
            Gets or sets the <see cref="T:Elastic.Apm.Libraries.Newtonsoft.Json.JsonConverter" /> for the property.
            If set this converter takes precedence over the contract converter for the property type.
            </summary>
            <value>The converter.</value>
        </member>
        <member name="P:Elastic.Apm.Libraries.Newtonsoft.Json.Serialization.JsonProperty.DeclaringType">
            <summary>
            Gets or sets the type that declared this property.
            </summary>
            <value>The type that declared this property.</value>
        </member>
        <member name="P:Elastic.Apm.Libraries.Newtonsoft.Json.Serialization.JsonProperty.DefaultValue">
            <summary>
            Gets the default value.
            </summary>
            <value>The default value.</value>
        </member>
        <member name="P:Elastic.Apm.Libraries.Newtonsoft.Json.Serialization.JsonProperty.DefaultValueHandling">
            <summary>
            Gets or sets the property default value handling.
            </summary>
            <value>The default value handling.</value>
        </member>
        <member name="P:Elastic.Apm.Libraries.Newtonsoft.Json.Serialization.JsonProperty.GetIsSpecified">
            <summary>
            Gets or sets a predicate used to determine whether the property should be serialized.
            </summary>
            <value>A predicate used to determine whether the property should be serialized.</value>
        </member>
        <member name="P:Elastic.Apm.Libraries.Newtonsoft.Json.Serialization.JsonProperty.HasMemberAttribute">
            <summary>
            Gets or sets a value indicating whether this <see cref="T:Elastic.Apm.Libraries.Newtonsoft.Json.Serialization.JsonProperty" /> has a member attribute.
            </summary>
            <value><c>true</c> if has a member attribute; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Elastic.Apm.Libraries.Newtonsoft.Json.Serialization.JsonProperty.Ignored">
            <summary>
            Gets or sets a value indicating whether this <see cref="T:Elastic.Apm.Libraries.Newtonsoft.Json.Serialization.JsonProperty" /> is ignored.
            </summary>
            <value><c>true</c> if ignored; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Elastic.Apm.Libraries.Newtonsoft.Json.Serialization.JsonProperty.IsReference">
            <summary>
            Gets or sets a value indicating whether this property preserves object references.
            </summary>
            <value>
            	<c>true</c> if this instance is reference; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Elastic.Apm.Libraries.Newtonsoft.Json.Serialization.JsonProperty.IsRequiredSpecified">
            <summary>
            Gets a value indicating whether <see cref="P:Elastic.Apm.Libraries.Newtonsoft.Json.Serialization.JsonProperty.Required" /> has a value specified.
            </summary>
        </member>
        <member name="P:Elastic.Apm.Libraries.Newtonsoft.Json.Serialization.JsonProperty.ItemConverter">
            <summary>
            Gets or sets the converter used when serializing the property's collection items.
            </summary>
            <value>The collection's items converter.</value>
        </member>
        <member name="P:Elastic.Apm.Libraries.Newtonsoft.Json.Serialization.JsonProperty.ItemIsReference">
            <summary>
            Gets or sets whether this property's collection items are serialized as a reference.
            </summary>
            <value>Whether this property's collection items are serialized as a reference.</value>
        </member>
        <member name="P:Elastic.Apm.Libraries.Newtonsoft.Json.Serialization.JsonProperty.ItemReferenceLoopHandling">
            <summary>
            Gets or sets the reference loop handling used when serializing the property's collection items.
            </summary>
            <value>The collection's items reference loop handling.</value>
        </member>
        <member name="P:Elastic.Apm.Libraries.Newtonsoft.Json.Serialization.JsonProperty.ItemTypeNameHandling">
            <summary>
            Gets or sets the type name handling used when serializing the property's collection items.
            </summary>
            <value>The collection's items type name handling.</value>
        </member>
        <member name="P:Elastic.Apm.Libraries.Newtonsoft.Json.Serialization.JsonProperty.MemberConverter">
            <summary>
            Gets or sets the member converter.
            </summary>
            <value>The member converter.</value>
        </member>
        <member name="P:Elastic.Apm.Libraries.Newtonsoft.Json.Serialization.JsonProperty.NullValueHandling">
            <summary>
            Gets or sets the property null value handling.
            </summary>
            <value>The null value handling.</value>
        </member>
        <member name="P:Elastic.Apm.Libraries.Newtonsoft.Json.Serialization.JsonProperty.ObjectCreationHandling">
            <summary>
            Gets or sets the property object creation handling.
            </summary>
            <value>The object creation handling.</value>
        </member>
        <member name="P:Elastic.Apm.Libraries.Newtonsoft.Json.Serialization.JsonProperty.Order">
            <summary>
            Gets or sets the order of serialization of a member.
            </summary>
            <value>The numeric order of serialization.</value>
        </member>
        <member name="P:Elastic.Apm.Libraries.Newtonsoft.Json.Serialization.JsonProperty.PropertyName">
            <summary>
            Gets or sets the name of the property.
            </summary>
            <value>The name of the property.</value>
        </member>
        <member name="P:Elastic.Apm.Libraries.Newtonsoft.Json.Serialization.JsonProperty.PropertyType">
            <summary>
            Gets or sets the type of the property.
            </summary>
            <value>The type of the property.</value>
        </member>
        <member name="P:Elastic.Apm.Libraries.Newtonsoft.Json.Serialization.JsonProperty.Readable">
            <summary>
            Gets or sets a value indicating whether this <see cref="T:Elastic.Apm.Libraries.Newtonsoft.Json.Serialization.JsonProperty" /> is readable.
            </summary>
            <value><c>true</c> if readable; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Elastic.Apm.Libraries.Newtonsoft.Json.Serialization.JsonProperty.ReferenceLoopHandling">
            <summary>
            Gets or sets the property reference loop handling.
            </summary>
            <value>The reference loop handling.</value>
        </member>
        <member name="P:Elastic.Apm.Libraries.Newtonsoft.Json.Serialization.JsonProperty.Required">
            <summary>
            Gets or sets a value indicating whether this <see cref="T:Elastic.Apm.Libraries.Newtonsoft.Json.Serialization.JsonProperty" /> is required.
            </summary>
            <value>A value indicating whether this <see cref="T:Elastic.Apm.Libraries.Newtonsoft.Json.Serialization.JsonProperty" /> is required.</value>
        </member>
        <member name="P:Elastic.Apm.Libraries.Newtonsoft.Json.Serialization.JsonProperty.SetIsSpecified">
            <summary>
            Gets or sets an action used to set whether the property has been deserialized.
            </summary>
            <value>An action used to set whether the property has been deserialized.</value>
        </member>
        <member name="P:Elastic.Apm.Libraries.Newtonsoft.Json.Serialization.JsonProperty.ShouldDeserialize">
            <summary>
            Gets or sets a predicate used to determine whether the property should be deserialized.
            </summary>
            <value>A predicate used to determine whether the property should be deserialized.</value>
        </member>
        <member name="P:Elastic.Apm.Libraries.Newtonsoft.Json.Serialization.JsonProperty.ShouldSerialize">
            <summary>
            Gets or sets a predicate used to determine whether the property should be serialized.
            </summary>
            <value>A predicate used to determine whether the property should be serialized.</value>
        </member>
        <member name="P:Elastic.Apm.Libraries.Newtonsoft.Json.Serialization.JsonProperty.TypeNameHandling">
            <summary>
            Gets or sets or sets the type name handling.
            </summary>
            <value>The type name handling.</value>
        </member>
        <member name="P:Elastic.Apm.Libraries.Newtonsoft.Json.Serialization.JsonProperty.UnderlyingName">
            <summary>
            Gets or sets the name of the underlying member or parameter.
            </summary>
            <value>The name of the underlying member or parameter.</value>
        </member>
        <member name="P:Elastic.Apm.Libraries.Newtonsoft.Json.Serialization.JsonProperty.ValueProvider">
            <summary>
            Gets the <see cref="T:Elastic.Apm.Libraries.Newtonsoft.Json.Serialization.IValueProvider" /> that will get and set the <see cref="T:Elastic.Apm.Libraries.Newtonsoft.Json.Serialization.JsonProperty" /> during serialization.
            </summary>
            <value>The <see cref="T:Elastic.Apm.Libraries.Newtonsoft.Json.Serialization.IValueProvider" /> that will get and set the <see cref="T:Elastic.Apm.Libraries.Newtonsoft.Json.Serialization.JsonProperty" /> during serialization.</value>
        </member>
        <member name="P:Elastic.Apm.Libraries.Newtonsoft.Json.Serialization.JsonProperty.Writable">
            <summary>
            Gets or sets a value indicating whether this <see cref="T:Elastic.Apm.Libraries.Newtonsoft.Json.Serialization.JsonProperty" /> is writable.
            </summary>
            <value><c>true</c> if writable; otherwise, <c>false</c>.</value>
        </member>
        <member name="M:Elastic.Apm.Libraries.Newtonsoft.Json.Serialization.JsonProperty.ToString">
            <summary>
            Returns a <see cref="T:System.String" /> that represents this instance.
            </summary>
            <returns>
            A <see cref="T:System.String" /> that represents this instance.
            </returns>
        </member>
        <member name="T:Elastic.Apm.Libraries.Newtonsoft.Json.Serialization.JsonPropertyCollection">
            <summary>
            A collection of <see cref="T:Elastic.Apm.Libraries.Newtonsoft.Json.Serialization.JsonProperty" /> objects.
            </summary>
        </member>
        <member name="M:Elastic.Apm.Libraries.Newtonsoft.Json.Serialization.JsonPropertyCollection.#ctor(System.Type)">
            <summary>
            Initializes a new instance of the <see cref="T:Elastic.Apm.Libraries.Newtonsoft.Json.Serialization.JsonPropertyCollection" /> class.
            </summary>
            <param name="type">The type.</param>
        </member>
        <member name="M:Elastic.Apm.Libraries.Newtonsoft.Json.Serialization.JsonPropertyCollection.GetKeyForItem(Elastic.Apm.Libraries.Newtonsoft.Json.Serialization.JsonProperty)">
            <summary>
            When implemented in a derived class, extracts the key from the specified element.
            </summary>
            <param name="item">The element from which to extract the key.</param>
            <returns>The key for the specified element.</returns>
        </member>
        <member name="M:Elastic.Apm.Libraries.Newtonsoft.Json.Serialization.JsonPropertyCollection.AddProperty(Elastic.Apm.Libraries.Newtonsoft.Json.Serialization.JsonProperty)">
            <summary>
            Adds a <see cref="T:Elastic.Apm.Libraries.Newtonsoft.Json.Serialization.JsonProperty" /> object.
            </summary>
            <param name="property">The property to add to the collection.</param>
        </member>
        <member name="M:Elastic.Apm.Libraries.Newtonsoft.Json.Serialization.JsonPropertyCollection.GetClosestMatchProperty(System.String)">
            <summary>
            Gets the closest matching <see cref="T:Elastic.Apm.Libraries.Newtonsoft.Json.Serialization.JsonProperty" /> object.
            First attempts to get an exact case match of <paramref name="propertyName" /> and then
            a case insensitive match.
            </summary>
            <param name="propertyName">Name of the property.</param>
            <returns>A matching property if found.</returns>
        </member>
        <member name="M:Elastic.Apm.Libraries.Newtonsoft.Json.Serialization.JsonPropertyCollection.GetProperty(System.String,System.StringComparison)">
            <summary>
            Gets a property by property name.
            </summary>
            <param name="propertyName">The name of the property to get.</param>
            <param name="comparisonType">Type property name string comparison.</param>
            <returns>A matching property if found.</returns>
        </member>
        <member name="T:Elastic.Apm.Libraries.Newtonsoft.Json.Serialization.JsonStringContract">
            <summary>
            Contract details for a <see cref="T:System.Type" /> used by the <see cref="T:Elastic.Apm.Libraries.Newtonsoft.Json.JsonSerializer" />.
            </summary>
        </member>
        <member name="M:Elastic.Apm.Libraries.Newtonsoft.Json.Serialization.JsonStringContract.#ctor(System.Type)">
            <summary>
            Initializes a new instance of the <see cref="T:Elastic.Apm.Libraries.Newtonsoft.Json.Serialization.JsonStringContract" /> class.
            </summary>
            <param name="underlyingType">The underlying type for the contract.</param>
        </member>
        <member name="M:Elastic.Apm.Libraries.Newtonsoft.Json.Serialization.JsonTypeReflector.CreateJsonConverterInstance(System.Type,System.Object[])">
            <summary>
            Lookup and create an instance of the <see cref="T:Elastic.Apm.Libraries.Newtonsoft.Json.JsonConverter" /> type described by the argument.
            </summary>
            <param name="converterType">The <see cref="T:Elastic.Apm.Libraries.Newtonsoft.Json.JsonConverter" /> type to create.</param>
            <param name="args">
            Optional arguments to pass to an initializing constructor of the JsonConverter.
            If <c>null</c>, the default constructor is used.
            </param>
        </member>
        <member name="T:Elastic.Apm.Libraries.Newtonsoft.Json.Serialization.KebabCaseNamingStrategy">
            <summary>
            A kebab case naming strategy.
            </summary>
        </member>
        <member name="M:Elastic.Apm.Libraries.Newtonsoft.Json.Serialization.KebabCaseNamingStrategy.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:Elastic.Apm.Libraries.Newtonsoft.Json.Serialization.KebabCaseNamingStrategy" /> class.
            </summary>
            <param name="processDictionaryKeys">
            A flag indicating whether dictionary keys should be processed.
            </param>
            <param name="overrideSpecifiedNames">
            A flag indicating whether explicitly specified property names should be processed,
            e.g. a property name customized with a <see cref="T:Elastic.Apm.Libraries.Newtonsoft.Json.JsonPropertyAttribute" />.
            </param>
        </member>
        <member name="M:Elastic.Apm.Libraries.Newtonsoft.Json.Serialization.KebabCaseNamingStrategy.#ctor(System.Boolean,System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:Elastic.Apm.Libraries.Newtonsoft.Json.Serialization.KebabCaseNamingStrategy" /> class.
            </summary>
            <param name="processDictionaryKeys">
            A flag indicating whether dictionary keys should be processed.
            </param>
            <param name="overrideSpecifiedNames">
            A flag indicating whether explicitly specified property names should be processed,
            e.g. a property name customized with a <see cref="T:Elastic.Apm.Libraries.Newtonsoft.Json.JsonPropertyAttribute" />.
            </param>
            <param name="processExtensionDataNames">
            A flag indicating whether extension data names should be processed.
            </param>
        </member>
        <member name="M:Elastic.Apm.Libraries.Newtonsoft.Json.Serialization.KebabCaseNamingStrategy.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Elastic.Apm.Libraries.Newtonsoft.Json.Serialization.KebabCaseNamingStrategy" /> class.
            </summary>
        </member>
        <member name="M:Elastic.Apm.Libraries.Newtonsoft.Json.Serialization.KebabCaseNamingStrategy.ResolvePropertyName(System.String)">
            <summary>
            Resolves the specified property name.
            </summary>
            <param name="name">The property name to resolve.</param>
            <returns>The resolved property name.</returns>
        </member>
        <member name="T:Elastic.Apm.Libraries.Newtonsoft.Json.Serialization.MemoryTraceWriter">
            <summary>
            Represents a trace writer that writes to memory. When the trace message limit is
            reached then old trace messages will be removed as new messages are added.
            </summary>
        </member>
        <member name="M:Elastic.Apm.Libraries.Newtonsoft.Json.Serialization.MemoryTraceWriter.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Elastic.Apm.Libraries.Newtonsoft.Json.Serialization.MemoryTraceWriter" /> class.
            </summary>
        </member>
        <member name="P:Elastic.Apm.Libraries.Newtonsoft.Json.Serialization.MemoryTraceWriter.LevelFilter">
            <summary>
            Gets the <see cref="T:System.Diagnostics.TraceLevel" /> that will be used to filter the trace messages passed to the writer.
            For example a filter level of <see cref="F:System.Diagnostics.TraceLevel.Info" /> will exclude <see cref="F:System.Diagnostics.TraceLevel.Verbose" /> messages
            and include <see cref="F:System.Diagnostics.TraceLevel.Info" />,
            <see cref="F:System.Diagnostics.TraceLevel.Warning" /> and <see cref="F:System.Diagnostics.TraceLevel.Error" /> messages.
            </summary>
            <value>
            The <see cref="T:System.Diagnostics.TraceLevel" /> that will be used to filter the trace messages passed to the writer.
            </value>
        </member>
        <member name="M:Elastic.Apm.Libraries.Newtonsoft.Json.Serialization.MemoryTraceWriter.Trace(System.Diagnostics.TraceLevel,System.String,System.Exception)">
            <summary>
            Writes the specified trace level, message and optional exception.
            </summary>
            <param name="level">The <see cref="T:System.Diagnostics.TraceLevel" /> at which to write this trace.</param>
            <param name="message">The trace message.</param>
            <param name="ex">The trace exception. This parameter is optional.</param>
        </member>
        <member name="M:Elastic.Apm.Libraries.Newtonsoft.Json.Serialization.MemoryTraceWriter.GetTraceMessages">
            <summary>
            Returns an enumeration of the most recent trace messages.
            </summary>
            <returns>An enumeration of the most recent trace messages.</returns>
        </member>
        <member name="M:Elastic.Apm.Libraries.Newtonsoft.Json.Serialization.MemoryTraceWriter.ToString">
            <summary>
            Returns a <see cref="T:System.String" /> of the most recent trace messages.
            </summary>
            <returns>
            A <see cref="T:System.String" /> of the most recent trace messages.
            </returns>
        </member>
        <member name="T:Elastic.Apm.Libraries.Newtonsoft.Json.Serialization.NamingStrategy">
            <summary>
            A base class for resolving how property names and dictionary keys are serialized.
            </summary>
        </member>
        <member name="M:Elastic.Apm.Libraries.Newtonsoft.Json.Serialization.NamingStrategy.ResolvePropertyName(System.String)">
            <summary>
            Resolves the specified property name.
            </summary>
            <param name="name">The property name to resolve.</param>
            <returns>The resolved property name.</returns>
        </member>
        <member name="P:Elastic.Apm.Libraries.Newtonsoft.Json.Serialization.NamingStrategy.OverrideSpecifiedNames">
            <summary>
            A flag indicating whether explicitly specified property names,
            e.g. a property name customized with a <see cref="T:Elastic.Apm.Libraries.Newtonsoft.Json.JsonPropertyAttribute" />, should be processed.
            Defaults to <c>false</c>.
            </summary>
        </member>
        <member name="P:Elastic.Apm.Libraries.Newtonsoft.Json.Serialization.NamingStrategy.ProcessDictionaryKeys">
            <summary>
            A flag indicating whether dictionary keys should be processed.
            Defaults to <c>false</c>.
            </summary>
        </member>
        <member name="P:Elastic.Apm.Libraries.Newtonsoft.Json.Serialization.NamingStrategy.ProcessExtensionDataNames">
            <summary>
            A flag indicating whether extension data names should be processed.
            Defaults to <c>false</c>.
            </summary>
        </member>
        <member name="M:Elastic.Apm.Libraries.Newtonsoft.Json.Serialization.NamingStrategy.GetPropertyName(System.String,System.Boolean)">
            <summary>
            Gets the serialized name for a given property name.
            </summary>
            <param name="name">The initial property name.</param>
            <param name="hasSpecifiedName">A flag indicating whether the property has had a name explicitly specified.</param>
            <returns>The serialized property name.</returns>
        </member>
        <member name="M:Elastic.Apm.Libraries.Newtonsoft.Json.Serialization.NamingStrategy.GetExtensionDataName(System.String)">
            <summary>
            Gets the serialized name for a given extension data name.
            </summary>
            <param name="name">The initial extension data name.</param>
            <returns>The serialized extension data name.</returns>
        </member>
        <member name="M:Elastic.Apm.Libraries.Newtonsoft.Json.Serialization.NamingStrategy.GetDictionaryKey(System.String)">
            <summary>
            Gets the serialized key for a given dictionary key.
            </summary>
            <param name="key">The initial dictionary key.</param>
            <returns>The serialized dictionary key.</returns>
        </member>
        <member name="M:Elastic.Apm.Libraries.Newtonsoft.Json.Serialization.NamingStrategy.GetHashCode">
            <summary>
            Hash code calculation
            </summary>
            <returns></returns>
        </member>
        <member name="M:Elastic.Apm.Libraries.Newtonsoft.Json.Serialization.NamingStrategy.Equals(System.Object)">
            <summary>
            Object equality implementation
            </summary>
            <param name="obj"></param>
            <returns></returns>
        </member>
        <member name="M:Elastic.Apm.Libraries.Newtonsoft.Json.Serialization.NamingStrategy.Equals(Elastic.Apm.Libraries.Newtonsoft.Json.Serialization.NamingStrategy)">
            <summary>
            Compare to another NamingStrategy
            </summary>
            <param name="other"></param>
            <returns></returns>
        </member>
        <member name="T:Elastic.Apm.Libraries.Newtonsoft.Json.Serialization.ObjectConstructor`1">
            <summary>
            Represents a method that constructs an object.
            </summary>
            <typeparam name="T">The object type to create.</typeparam>
        </member>
        <member name="T:Elastic.Apm.Libraries.Newtonsoft.Json.Serialization.OnErrorAttribute">
            <summary>
            When applied to a method, specifies that the method is called when an error occurs serializing an object.
            </summary>
        </member>
        <member name="T:Elastic.Apm.Libraries.Newtonsoft.Json.Serialization.ReflectionAttributeProvider">
            <summary>
            Provides methods to get attributes from a <see cref="T:System.Type" />, <see cref="T:System.Reflection.MemberInfo" />,
            <see cref="T:System.Reflection.ParameterInfo" /> or <see cref="T:System.Reflection.Assembly" />.
            </summary>
        </member>
        <member name="M:Elastic.Apm.Libraries.Newtonsoft.Json.Serialization.ReflectionAttributeProvider.#ctor(System.Object)">
            <summary>
            Initializes a new instance of the <see cref="T:Elastic.Apm.Libraries.Newtonsoft.Json.Serialization.ReflectionAttributeProvider" /> class.
            </summary>
            <param name="attributeProvider">
            The instance to get attributes for. This parameter should be a
            <see cref="T:System.Type" />, <see cref="T:System.Reflection.MemberInfo" />, <see cref="T:System.Reflection.ParameterInfo" /> or <see cref="T:System.Reflection.Assembly" />.
            </param>
        </member>
        <member name="M:Elastic.Apm.Libraries.Newtonsoft.Json.Serialization.ReflectionAttributeProvider.GetAttributes(System.Boolean)">
            <summary>
            Returns a collection of all of the attributes, or an empty collection if there are no attributes.
            </summary>
            <param name="inherit">When <c>true</c>, look up the hierarchy chain for the inherited custom attribute.</param>
            <returns>A collection of <see cref="T:System.Attribute" />s, or an empty collection.</returns>
        </member>
        <member name="M:Elastic.Apm.Libraries.Newtonsoft.Json.Serialization.ReflectionAttributeProvider.GetAttributes(System.Type,System.Boolean)">
            <summary>
            Returns a collection of attributes, identified by type, or an empty collection if there are no attributes.
            </summary>
            <param name="attributeType">The type of the attributes.</param>
            <param name="inherit">When <c>true</c>, look up the hierarchy chain for the inherited custom attribute.</param>
            <returns>A collection of <see cref="T:System.Attribute" />s, or an empty collection.</returns>
        </member>
        <member name="T:Elastic.Apm.Libraries.Newtonsoft.Json.Serialization.ReflectionValueProvider">
            <summary>
            Get and set values for a <see cref="T:System.Reflection.MemberInfo" /> using reflection.
            </summary>
        </member>
        <member name="M:Elastic.Apm.Libraries.Newtonsoft.Json.Serialization.ReflectionValueProvider.#ctor(System.Reflection.MemberInfo)">
            <summary>
            Initializes a new instance of the <see cref="T:Elastic.Apm.Libraries.Newtonsoft.Json.Serialization.ReflectionValueProvider" /> class.
            </summary>
            <param name="memberInfo">The member info.</param>
        </member>
        <member name="M:Elastic.Apm.Libraries.Newtonsoft.Json.Serialization.ReflectionValueProvider.SetValue(System.Object,System.Object)">
            <summary>
            Sets the value.
            </summary>
            <param name="target">The target to set the value on.</param>
            <param name="value">The value to set on the target.</param>
        </member>
        <member name="M:Elastic.Apm.Libraries.Newtonsoft.Json.Serialization.ReflectionValueProvider.GetValue(System.Object)">
            <summary>
            Gets the value.
            </summary>
            <param name="target">The target to get the value from.</param>
            <returns>The value.</returns>
        </member>
        <member name="T:Elastic.Apm.Libraries.Newtonsoft.Json.Serialization.SnakeCaseNamingStrategy">
            <summary>
            A snake case naming strategy.
            </summary>
        </member>
        <member name="M:Elastic.Apm.Libraries.Newtonsoft.Json.Serialization.SnakeCaseNamingStrategy.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:Elastic.Apm.Libraries.Newtonsoft.Json.Serialization.SnakeCaseNamingStrategy" /> class.
            </summary>
            <param name="processDictionaryKeys">
            A flag indicating whether dictionary keys should be processed.
            </param>
            <param name="overrideSpecifiedNames">
            A flag indicating whether explicitly specified property names should be processed,
            e.g. a property name customized with a <see cref="T:Elastic.Apm.Libraries.Newtonsoft.Json.JsonPropertyAttribute" />.
            </param>
        </member>
        <member name="M:Elastic.Apm.Libraries.Newtonsoft.Json.Serialization.SnakeCaseNamingStrategy.#ctor(System.Boolean,System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:Elastic.Apm.Libraries.Newtonsoft.Json.Serialization.SnakeCaseNamingStrategy" /> class.
            </summary>
            <param name="processDictionaryKeys">
            A flag indicating whether dictionary keys should be processed.
            </param>
            <param name="overrideSpecifiedNames">
            A flag indicating whether explicitly specified property names should be processed,
            e.g. a property name customized with a <see cref="T:Elastic.Apm.Libraries.Newtonsoft.Json.JsonPropertyAttribute" />.
            </param>
            <param name="processExtensionDataNames">
            A flag indicating whether extension data names should be processed.
            </param>
        </member>
        <member name="M:Elastic.Apm.Libraries.Newtonsoft.Json.Serialization.SnakeCaseNamingStrategy.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Elastic.Apm.Libraries.Newtonsoft.Json.Serialization.SnakeCaseNamingStrategy" /> class.
            </summary>
        </member>
        <member name="M:Elastic.Apm.Libraries.Newtonsoft.Json.Serialization.SnakeCaseNamingStrategy.ResolvePropertyName(System.String)">
            <summary>
            Resolves the specified property name.
            </summary>
            <param name="name">The property name to resolve.</param>
            <returns>The resolved property name.</returns>
        </member>
        <member name="T:Elastic.Apm.Libraries.Newtonsoft.Json.StringEscapeHandling">
            <summary>
            Specifies how strings are escaped when writing JSON text.
            </summary>
        </member>
        <member name="F:Elastic.Apm.Libraries.Newtonsoft.Json.StringEscapeHandling.Default">
            <summary>
            Only control characters (e.g. newline) are escaped.
            </summary>
        </member>
        <member name="F:Elastic.Apm.Libraries.Newtonsoft.Json.StringEscapeHandling.EscapeNonAscii">
            <summary>
            All non-ASCII and control characters (e.g. newline) are escaped.
            </summary>
        </member>
        <member name="F:Elastic.Apm.Libraries.Newtonsoft.Json.StringEscapeHandling.EscapeHtml">
            <summary>
            HTML (&lt;, &gt;, &amp;, &apos;, &quot;) and control characters (e.g. newline) are escaped.
            </summary>
        </member>
        <member name="T:Elastic.Apm.Libraries.Newtonsoft.Json.TypeNameAssemblyFormatHandling">
            <summary>
            Indicates the method that will be used during deserialization for locating and loading assemblies.
            </summary>
        </member>
        <member name="F:Elastic.Apm.Libraries.Newtonsoft.Json.TypeNameAssemblyFormatHandling.Simple">
            <summary>
            In simple mode, the assembly used during deserialization need not match exactly the assembly used during serialization.
            Specifically, the version numbers need not match as the <c>LoadWithPartialName</c> method of the
            <see cref="T:System.Reflection.Assembly" /> class is used to load the assembly.
            </summary>
        </member>
        <member name="F:Elastic.Apm.Libraries.Newtonsoft.Json.TypeNameAssemblyFormatHandling.Full">
            <summary>
            In full mode, the assembly used during deserialization must match exactly the assembly used during serialization. The
            <c>Load</c> method of the <see cref="T:System.Reflection.Assembly" /> class is used to load the assembly.
            </summary>
        </member>
        <member name="T:Elastic.Apm.Libraries.Newtonsoft.Json.TypeNameHandling">
            <summary>
            Specifies type name handling options for the <see cref="T:Elastic.Apm.Libraries.Newtonsoft.Json.JsonSerializer" />.
            </summary>
            <remarks>
            <see cref="P:Elastic.Apm.Libraries.Newtonsoft.Json.JsonSerializer.TypeNameHandling" /> should be used with caution when your application deserializes JSON from
            an external source.
            Incoming types should be validated with a custom <see cref="P:Elastic.Apm.Libraries.Newtonsoft.Json.JsonSerializer.SerializationBinder" />
            when deserializing with a value other than <see cref="F:Elastic.Apm.Libraries.Newtonsoft.Json.TypeNameHandling.None" />.
            </remarks>
        </member>
        <member name="F:Elastic.Apm.Libraries.Newtonsoft.Json.TypeNameHandling.None">
            <summary>
            Do not include the .NET type name when serializing types.
            </summary>
        </member>
        <member name="F:Elastic.Apm.Libraries.Newtonsoft.Json.TypeNameHandling.Objects">
            <summary>
            Include the .NET type name when serializing into a JSON object structure.
            </summary>
        </member>
        <member name="F:Elastic.Apm.Libraries.Newtonsoft.Json.TypeNameHandling.Arrays">
            <summary>
            Include the .NET type name when serializing into a JSON array structure.
            </summary>
        </member>
        <member name="F:Elastic.Apm.Libraries.Newtonsoft.Json.TypeNameHandling.All">
            <summary>
            Always include the .NET type name when serializing.
            </summary>
        </member>
        <member name="F:Elastic.Apm.Libraries.Newtonsoft.Json.TypeNameHandling.Auto">
            <summary>
            Include the .NET type name when the type of the object being serialized is not the same as its declared type.
            Note that this doesn't include the root serialized object by default. To include the root object's type name in JSON
            you must specify a root type object with
            <see cref="M:Elastic.Apm.Libraries.Newtonsoft.Json.JsonConvert.SerializeObject(System.Object,System.Type,Elastic.Apm.Libraries.Newtonsoft.Json.JsonSerializerSettings)" />
            or <see cref="M:Elastic.Apm.Libraries.Newtonsoft.Json.JsonSerializer.Serialize(Elastic.Apm.Libraries.Newtonsoft.Json.JsonWriter,System.Object,System.Type)" />.
            </summary>
        </member>
        <member name="M:Elastic.Apm.Libraries.Newtonsoft.Json.Utilities.CollectionUtils.IsNullOrEmpty``1(System.Collections.Generic.ICollection{``0})">
            <summary>
            Determines whether the collection is <c>null</c> or empty.
            </summary>
            <param name="collection">The collection.</param>
            <returns>
            	<c>true</c> if the collection is <c>null</c> or empty; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Elastic.Apm.Libraries.Newtonsoft.Json.Utilities.CollectionUtils.AddRange``1(System.Collections.Generic.IList{``0},System.Collections.Generic.IEnumerable{``0})">
            <summary>
            Adds the elements of the specified collection to the specified generic <see cref="T:System.Collections.Generic.IList`1" />.
            </summary>
            <param name="initial">The list to add to.</param>
            <param name="collection">The collection of elements to add.</param>
        </member>
        <member name="M:Elastic.Apm.Libraries.Newtonsoft.Json.Utilities.ConvertUtils.ConvertOrCast(System.Object,System.Globalization.CultureInfo,System.Type)">
            <summary>
            Converts the value to the specified type. If the value is unable to be converted, the
            value is checked whether it assignable to the specified type.
            </summary>
            <param name="initialValue">The value to convert.</param>
            <param name="culture">The culture to use when converting.</param>
            <param name="targetType">The type to convert or cast the value to.</param>
            <returns>
            The converted type. If conversion was unsuccessful, the initial value
            is returned if assignable to the target type.
            </returns>
        </member>
        <member name="M:Elastic.Apm.Libraries.Newtonsoft.Json.Utilities.DynamicProxyMetaObject`1.CallMethodWithResult(System.String,System.Dynamic.DynamicMetaObjectBinder,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression},Elastic.Apm.Libraries.Newtonsoft.Json.Utilities.DynamicProxyMetaObject{`0}.Fallback,Elastic.Apm.Libraries.Newtonsoft.Json.Utilities.DynamicProxyMetaObject{`0}.Fallback)">
            <summary>
            Helper method for generating a MetaObject which calls a
            specific method on Dynamic that returns a result
            </summary>
        </member>
        <member name="M:Elastic.Apm.Libraries.Newtonsoft.Json.Utilities.DynamicProxyMetaObject`1.CallMethodReturnLast(System.String,System.Dynamic.DynamicMetaObjectBinder,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression},Elastic.Apm.Libraries.Newtonsoft.Json.Utilities.DynamicProxyMetaObject{`0}.Fallback)">
            <summary>
            Helper method for generating a MetaObject which calls a
            specific method on Dynamic, but uses one of the arguments for
            the result.
            </summary>
        </member>
        <member name="M:Elastic.Apm.Libraries.Newtonsoft.Json.Utilities.DynamicProxyMetaObject`1.CallMethodNoResult(System.String,System.Dynamic.DynamicMetaObjectBinder,System.Linq.Expressions.Expression[],Elastic.Apm.Libraries.Newtonsoft.Json.Utilities.DynamicProxyMetaObject{`0}.Fallback)">
            <summary>
            Helper method for generating a MetaObject which calls a
            specific method on Dynamic, but uses one of the arguments for
            the result.
            </summary>
        </member>
        <member name="M:Elastic.Apm.Libraries.Newtonsoft.Json.Utilities.DynamicProxyMetaObject`1.GetRestrictions">
            <summary>
            Returns a Restrictions object which includes our current restrictions merged
            with a restriction limiting our type
            </summary>
        </member>
        <member name="T:Elastic.Apm.Libraries.Newtonsoft.Json.Utilities.ImmutableCollectionsUtils">
            <summary>
            Helper class for serializing immutable collections.
            Note that this is used by all builds, even those that don't support immutable collections, in case the DLL is GACed
            https://github.com/JamesNK/Newtonsoft.Json/issues/652
            </summary>
        </member>
        <member name="M:Elastic.Apm.Libraries.Newtonsoft.Json.Utilities.ReflectionUtils.GetCollectionItemType(System.Type)">
            <summary>
            Gets the type of the typed collection's items.
            </summary>
            <param name="type">The type.</param>
            <returns>The type of the typed collection's items.</returns>
        </member>
        <member name="M:Elastic.Apm.Libraries.Newtonsoft.Json.Utilities.ReflectionUtils.GetMemberUnderlyingType(System.Reflection.MemberInfo)">
            <summary>
            Gets the member's underlying type.
            </summary>
            <param name="member">The member.</param>
            <returns>The underlying type of the member.</returns>
        </member>
        <member name="M:Elastic.Apm.Libraries.Newtonsoft.Json.Utilities.ReflectionUtils.IsIndexedProperty(System.Reflection.PropertyInfo)">
            <summary>
            Determines whether the property is an indexed property.
            </summary>
            <param name="property">The property.</param>
            <returns>
            	<c>true</c> if the property is an indexed property; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Elastic.Apm.Libraries.Newtonsoft.Json.Utilities.ReflectionUtils.GetMemberValue(System.Reflection.MemberInfo,System.Object)">
            <summary>
            Gets the member's value on the object.
            </summary>
            <param name="member">The member.</param>
            <param name="target">The target object.</param>
            <returns>The member's value on the object.</returns>
        </member>
        <member name="M:Elastic.Apm.Libraries.Newtonsoft.Json.Utilities.ReflectionUtils.SetMemberValue(System.Reflection.MemberInfo,System.Object,System.Object)">
            <summary>
            Sets the member's value on the target object.
            </summary>
            <param name="member">The member.</param>
            <param name="target">The target.</param>
            <param name="value">The value.</param>
        </member>
        <member name="M:Elastic.Apm.Libraries.Newtonsoft.Json.Utilities.ReflectionUtils.CanReadMemberValue(System.Reflection.MemberInfo,System.Boolean)">
            <summary>
            Determines whether the specified MemberInfo can be read.
            </summary>
            <param name="member">The MemberInfo to determine whether can be read.</param>
            ///
            <param name="nonPublic">if set to <c>true</c> then allow the member to be gotten non-publicly.</param>
            <returns>
            	<c>true</c> if the specified MemberInfo can be read; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Elastic.Apm.Libraries.Newtonsoft.Json.Utilities.ReflectionUtils.CanSetMemberValue(System.Reflection.MemberInfo,System.Boolean,System.Boolean)">
            <summary>
            Determines whether the specified MemberInfo can be set.
            </summary>
            <param name="member">The MemberInfo to determine whether can be set.</param>
            <param name="nonPublic">if set to <c>true</c> then allow the member to be set non-publicly.</param>
            <param name="canSetReadOnly">if set to <c>true</c> then allow the member to be set if read-only.</param>
            <returns>
            	<c>true</c> if the specified MemberInfo can be set; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="T:Elastic.Apm.Libraries.Newtonsoft.Json.Utilities.StringBuffer">
            <summary>
            Builds a string. Unlike <see cref="T:System.Text.StringBuilder" /> this class lets you reuse its internal buffer.
            </summary>
        </member>
        <member name="M:Elastic.Apm.Libraries.Newtonsoft.Json.Utilities.StringUtils.IsWhiteSpace(System.String)">
            <summary>
            Determines whether the string is all white space. Empty string will return <c>false</c>.
            </summary>
            <param name="s">The string to test whether it is all white space.</param>
            <returns>
            	<c>true</c> if the string is all white space; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="T:Elastic.Apm.Libraries.Newtonsoft.Json.WriteState">
            <summary>
            Specifies the state of the <see cref="T:Elastic.Apm.Libraries.Newtonsoft.Json.JsonWriter" />.
            </summary>
        </member>
        <member name="F:Elastic.Apm.Libraries.Newtonsoft.Json.WriteState.Error">
            <summary>
            An exception has been thrown, which has left the <see cref="T:Elastic.Apm.Libraries.Newtonsoft.Json.JsonWriter" /> in an invalid state.
            You may call the <see cref="M:Elastic.Apm.Libraries.Newtonsoft.Json.JsonWriter.Close" /> method to put the <see cref="T:Elastic.Apm.Libraries.Newtonsoft.Json.JsonWriter" /> in the <c>Closed</c>
            state.
            Any other <see cref="T:Elastic.Apm.Libraries.Newtonsoft.Json.JsonWriter" /> method calls result in an <see cref="T:System.InvalidOperationException" /> being thrown.
            </summary>
        </member>
        <member name="F:Elastic.Apm.Libraries.Newtonsoft.Json.WriteState.Closed">
            <summary>
            The <see cref="M:Elastic.Apm.Libraries.Newtonsoft.Json.JsonWriter.Close" /> method has been called.
            </summary>
        </member>
        <member name="F:Elastic.Apm.Libraries.Newtonsoft.Json.WriteState.Object">
            <summary>
            An object is being written.
            </summary>
        </member>
        <member name="F:Elastic.Apm.Libraries.Newtonsoft.Json.WriteState.Array">
            <summary>
            An array is being written.
            </summary>
        </member>
        <member name="F:Elastic.Apm.Libraries.Newtonsoft.Json.WriteState.Constructor">
            <summary>
            A constructor is being written.
            </summary>
        </member>
        <member name="F:Elastic.Apm.Libraries.Newtonsoft.Json.WriteState.Property">
            <summary>
            A property is being written.
            </summary>
        </member>
        <member name="F:Elastic.Apm.Libraries.Newtonsoft.Json.WriteState.Start">
            <summary>
            A <see cref="T:Elastic.Apm.Libraries.Newtonsoft.Json.JsonWriter" /> write method has not been called.
            </summary>
        </member>
        <member name="T:Elastic.Apm.Logging.IApmLogger">
            <summary>
            Performs logging for the Elastic APM agent
            </summary>
        </member>
        <member name="M:Elastic.Apm.Logging.IApmLogger.IsEnabled(Elastic.Apm.Logging.LogLevel)">
            <summary>
            Checks if the given log level is enabled
            </summary>
            <param name="level">the log level</param>
            <returns><c>true</c> if the log level is enabled, <c>false</c> otherwise.</returns>
        </member>
        <member name="M:Elastic.Apm.Logging.IApmLogger.Log``1(Elastic.Apm.Logging.LogLevel,``0,System.Exception,System.Func{``0,System.Exception,System.String})">
            <summary>Writes a log entry.</summary>
            <param name="level">Entry will be written on this level.</param>
            <param name="state">The entry to be written. Can be also an object.</param>
            <param name="e">The exception related to this entry.</param>
            <param name="formatter">Function to create a <see cref="T:System.String" />
            message of the <paramref name="state" /> and <paramref name="e" />.</param>
            <typeparam name="TState">The type of the object to be written.</typeparam>
        </member>
        <member name="T:Elastic.Apm.Logging.ILogLevelSwitchable">
            <summary>
            Has a log level that can be dynamically changed at runtime
            </summary>
        </member>
        <member name="P:Elastic.Apm.Logging.ILogLevelSwitchable.LogLevelSwitch">
            <summary>
            A switch to dynamically control the log level at runtime
            </summary>
        </member>
        <member name="M:Elastic.Apm.Logging.LoggingExtensions.IfLevel(Elastic.Apm.Logging.IApmLogger,Elastic.Apm.Logging.LogLevel)">
            <summary>
            Depending on the two parameters it either returns a MaybeLogger instance or null.
            </summary>
            <param name="logger">The logger you want to log with</param>
            <param name="level">The level to compare with</param>
            <returns>If the return value is not null you can call <see cref="M:Elastic.Apm.Logging.LoggingExtensions.MaybeLogger.Log(System.String,System.Object[])" /> to log</returns>
        </member>
        <member name="M:Elastic.Apm.Logging.LoggingExtensions.Trace(Elastic.Apm.Logging.IApmLogger)">
            <summary>
            If the logger has a loglevel, which is higher than or equal to Trace then it returns a MaybeLogger instance,
            otherwise it returns null.
            By using the return value with `?.` you can avoid executing code that is not necessary to execute
            in case the log won't be printed because the loglevel would not allow it.
            </summary>
            <param name="logger">The logger instance you want to log with</param>
            <returns>Either a MaybeLogger or null</returns>
        </member>
        <member name="M:Elastic.Apm.Logging.LoggingExtensions.Debug(Elastic.Apm.Logging.IApmLogger)">
            <summary>
            If the logger has a loglevel, which is higher than or equal to Debug then it returns a MaybeLogger instance,
            otherwise it returns null.
            By using the return value with `?.` you can avoid executing code that is not necessary to execute
            in case the log won't be printed because the loglevel would not allow it.
            </summary>
            <param name="logger">The logger instance you want to log with</param>
            <returns>Either a MaybeLogger or null</returns>
        </member>
        <member name="M:Elastic.Apm.Logging.LoggingExtensions.Info(Elastic.Apm.Logging.IApmLogger)">
            <summary>
            If the logger has a loglevel, which is higher than Info then it returns a MaybeLogger instance,
            otherwise it returns null.
            By using the return value with `?.` you can avoid executing code that is not necessary to execute
            in case the log won't be printed because the loglevel would not allow it.
            </summary>
            <param name="logger">The logger instance you want to log with</param>
            <returns>Either a MaybeLogger or null</returns>
        </member>
        <member name="M:Elastic.Apm.Logging.LoggingExtensions.Warning(Elastic.Apm.Logging.IApmLogger)">
            <summary>
            If the logger has a loglevel, which is higher than or equal to Warning then it returns a MaybeLogger instance,
            otherwise it returns null.
            By using the return value with `?.` you can avoid executing code that is not necessary to execute
            in case the log won't be printed because the loglevel would not allow it.
            </summary>
            <param name="logger">The logger instance you want to log with</param>
            <returns>Either a MaybeLogger or null</returns>
        </member>
        <member name="M:Elastic.Apm.Logging.LoggingExtensions.Error(Elastic.Apm.Logging.IApmLogger)">
            <summary>
            If the logger has a loglevel, which is higher than or equal to Error then it returns a MaybeLogger instance,
            otherwise it returns null.
            By using the return value with `?.` you can avoid executing code that is not necessary to execute
            in case the log won't be printed because the loglevel would not allow it.
            </summary>
            <param name="logger">The logger instance you want to log with</param>
            <returns>Either a MaybeLogger or null</returns>
        </member>
        <member name="M:Elastic.Apm.Logging.LoggingExtensions.Critical(Elastic.Apm.Logging.IApmLogger)">
            <summary>
            If the logger has a loglevel, which is higher than or equal to Critical then it returns a MaybeLogger instance,
            otherwise it returns null.
            By using the return value with `?.` you can avoid executing code that is not necessary to execute
            in case the log won't be printed because the loglevel would not allow it.
            </summary>
            <param name="logger">The logger instance you want to log with</param>
            <returns>Either a MaybeLogger or null</returns>
        </member>
        <member name="F:Elastic.Apm.Logging.LogLevel.Trace">
            <summary>
            Logs that contain the most detailed messages. These messages may contain sensitive application data. These messages are
            disabled by default and should never be enabled in a production environment.
            </summary>
        </member>
        <member name="F:Elastic.Apm.Logging.LogLevel.Debug">
            <summary>
            Logs that are used for interactive investigation during development. These logs should primarily contain information
            useful for debugging and have no long-term value.
            </summary>
        </member>
        <member name="F:Elastic.Apm.Logging.LogLevel.Information">
            <summary>
            Logs that track the general flow of the application. These logs should have long-term value.
            </summary>
        </member>
        <member name="F:Elastic.Apm.Logging.LogLevel.Warning">
            <summary>
            Logs that highlight an abnormal or unexpected event in the application flow, but do not otherwise cause the application
            execution to stop.
            </summary>
        </member>
        <member name="F:Elastic.Apm.Logging.LogLevel.Error">
            <summary>
            Logs that highlight when the current flow of execution is stopped due to a failure. These should indicate a failure
            in the current activity, not an application-wide failure.
            </summary>
        </member>
        <member name="F:Elastic.Apm.Logging.LogLevel.Critical">
            <summary>
            Logs that describe an unrecoverable application or system crash, or a catastrophic failure that requires immediate
            attention.
            </summary>
        </member>
        <member name="F:Elastic.Apm.Logging.LogLevel.None">
            <summary>
            Not used for writing log messages. Specifies that a logging category should not write any messages.
            </summary>
        </member>
        <member name="T:Elastic.Apm.Logging.LogLevelSwitch">
            <summary>
            Dynamically controls the log level
            </summary>
        </member>
        <member name="P:Elastic.Apm.Logging.LogLevelSwitch.Level">
            <summary>
            Gets or sets the current log level
            </summary>
        </member>
        <member name="T:Elastic.Apm.Logging.LogValuesFormatter">
            <summary>
            Formatter to convert the named format items like {NamedformatItem} to <see cref="M:string.Format" /> format.
            </summary>
        </member>
        <member name="T:Elastic.Apm.Logging.TraceLogger">
            <summary>
            A logging implementation that logs to a <see cref="F:Elastic.Apm.Logging.TraceLogger.TraceSource"/> with the source name <c>Elastic.Apm</c>
            </summary>
        </member>
        <member name="T:Elastic.Apm.Metrics.IMetricsCollector">
            <summary>
            Defines how the agent collects metrics.
            </summary>
        </member>
        <member name="M:Elastic.Apm.Metrics.IMetricsCollector.StartCollecting">
            <summary>
            After calling this method, the <see cref="T:Elastic.Apm.Metrics.IMetricsCollector" /> starts collecting metrics
            </summary>
        </member>
        <member name="T:Elastic.Apm.Metrics.IMetricsProvider">
            <summary>
            Defines an interface that every class, which provides some metric value, should implement.
            This interface is known to the <see cref="T:Elastic.Apm.Metrics.MetricsCollector" /> type and you
            can implement new providers for other metrics by implementing this interface
            and adding it to <see cref="T:Elastic.Apm.Metrics.MetricsCollector" />.
            </summary>
        </member>
        <member name="P:Elastic.Apm.Metrics.IMetricsProvider.ConsecutiveNumberOfFailedReads">
            <summary>
            Stores the number of calls to the <see cref="M:Elastic.Apm.Metrics.IMetricsProvider.GetSamples" /> method when it returned null, an empty list or
            any of values is either NaN or Infinite. This is used by <see cref="T:Elastic.Apm.Metrics.MetricsCollector" />
            </summary>
        </member>
        <member name="P:Elastic.Apm.Metrics.IMetricsProvider.DbgName">
            <summary>
            The name that refers to the provider in the logs. E.g. "total process CPU time".
            Make sure this is human understandable and tells the reader what type of value this provider is intended to provide.
            </summary>
        </member>
        <member name="P:Elastic.Apm.Metrics.IMetricsProvider.IsMetricAlreadyCaptured">
            <summary>
            Indicates if metrics were already collected - or there was an attempt to collect them.
            Until this property is false, metrics from the implementor won't be collected.
            This property exists to cover cases when the metric collection happens in the background
            (e.g. collecting GC metrics through EventListener) and values are not captured directly in
            the <see cref="M:Elastic.Apm.Metrics.IMetricsProvider.GetSamples" /> method.
            If metrics are captured on the fly in <see cref="M:Elastic.Apm.Metrics.IMetricsProvider.GetSamples" /> just set this to <code>true</code>
            during initialization.
            </summary>
        </member>
        <member name="M:Elastic.Apm.Metrics.IMetricsProvider.GetSamples">
            <summary>
            The main part of the provider, the implementor should do the work to read the value(s) of the given metric(s) in this
            method.
            </summary>
            <returns>The key and the value of the metric(s)</returns>
        </member>
        <member name="M:Elastic.Apm.Metrics.IMetricsProvider.IsEnabled(System.Collections.Generic.IReadOnlyList{Elastic.Apm.Helpers.WildcardMatcher})">
            <summary>
            Indicates whether this instance is enabled to collect metrics based on the DisableMetrics config.
            The implementor must match the <paramref name="disabledMetrics"></paramref> against metrics which it collects.
            If the implementor collects multiple metrics, this method returns <code>true</code> if any of the metrics it
            collects is enabled, <code>false</code> otherwise.
            </summary>
            <param name="disabledMetrics">The list of disabled metrics</param>
            <returns><code>true</code> if any of the metrics collected is enabled, <code>false</code> otherwise.</returns>
        </member>
        <member name="T:Elastic.Apm.Metrics.MetricsCollector">
            <summary>
            Iterates through a list of <see cref="T:Elastic.Apm.Metrics.IMetricsProvider" /> and
            sends the values through an <see cref="T:Elastic.Apm.Report.IPayloadSender" /> instance.
            It collects the metrics on an interval read from the <see cref="T:Elastic.Apm.Config.IConfigurationReader" /> which is
            passed to the constructor.
            In case reading a value from an <see cref="T:Elastic.Apm.Metrics.IMetricsProvider" /> fails it retries <see cref="F:Elastic.Apm.Metrics.MetricsCollector.MaxTryWithoutSuccess" />
            times,
            after that it prints a log and won't retry anymore. This is to avoid endlessly trying to read values without success.
            </summary>
        </member>
        <member name="F:Elastic.Apm.Metrics.MetricsCollector.MetricsProviders">
            <summary>
            List of all providers that can provide metrics values.
            Add new providers to this list in case you want the agent to collect more metrics
            </summary>
        </member>
        <member name="P:Elastic.Apm.Metrics.MetricSet.Samples">
            <inheritdoc />
        </member>
        <member name="P:Elastic.Apm.Metrics.MetricSet.Timestamp">
            <inheritdoc />
        </member>
        <member name="T:Elastic.Apm.Metrics.MetricsProvider.BreakdownMetricsProvider.GroupKey">
            <summary>
            Encapsulates types which are used as key to group MetricSets.
            </summary>
        </member>
        <member name="F:Elastic.Apm.Metrics.MetricsProvider.BreakdownMetricsProvider._loggedWarning">
            <summary>
            Indicates if the metric limit log was already printed.
            </summary>
        </member>
        <member name="F:Elastic.Apm.Metrics.MetricsProvider.BreakdownMetricsProvider._itemsToSendLock">
            <summary>
            Lock for operations on <see cref="F:Elastic.Apm.Metrics.MetricsProvider.BreakdownMetricsProvider._itemsToSend"/>.
            </summary>
        </member>
        <member name="T:Elastic.Apm.Metrics.MetricsProvider.CgroupMetricsProvider">
            <summary>
            Provides cgroup metrics, if applicable
            </summary>
        </member>
        <member name="M:Elastic.Apm.Metrics.MetricsProvider.CgroupMetricsProvider.#ctor(Elastic.Apm.Logging.IApmLogger,System.Collections.Generic.IReadOnlyList{Elastic.Apm.Helpers.WildcardMatcher})">
            <summary>
            Initializes a new instance of <see cref="T:Elastic.Apm.Metrics.MetricsProvider.CgroupMetricsProvider" />
            </summary>
            <param name="logger">the logger</param>
            <param name="disabledMetrics">List of disabled metrics</param>
        </member>
        <member name="M:Elastic.Apm.Metrics.MetricsProvider.CgroupMetricsProvider.#ctor(System.String,System.String,Elastic.Apm.Logging.IApmLogger,System.Collections.Generic.IReadOnlyList{Elastic.Apm.Helpers.WildcardMatcher},System.Boolean)">
            <summary>
             Initializes a new instance of <see cref="T:Elastic.Apm.Metrics.MetricsProvider.CgroupMetricsProvider" />
            </summary>
            <param name="procSelfCGroup">the <see cref="F:Elastic.Apm.Metrics.MetricsProvider.CgroupMetricsProvider.ProcSelfCgroup" /> file</param>
            <param name="mountInfo">the <see cref="F:Elastic.Apm.Metrics.MetricsProvider.CgroupMetricsProvider.ProcSelfMountinfo" /> file</param>
            <param name="logger">the logger</param>
            <param name="disabledMetrics">List of disabled metrics</param>
            <param name="ignoreOs">
            Ignores the OS. If <code>true</code> then it tries to read CGroup metrics regardless of the
            current OS
            </param>
            <remarks>
            	Used for testing
            </remarks>
        </member>
        <member name="T:Elastic.Apm.Metrics.MetricsProvider.CgroupFiles">
            <summary>
            Holds the collection of relevant cgroup files
            </summary>
        </member>
        <member name="T:Elastic.Apm.Metrics.MetricsProvider.FreeAndTotalMemoryProvider">
            <summary>
            Returns total and free system memory.
            Currently Windows and Linux only, no macOS support at the moment.
            </summary>
        </member>
        <member name="T:Elastic.Apm.Metrics.MetricsProvider.GcMetricsProvider">
            <summary>
            A metrics provider that collects GC metrics.
            On .NET Core it collects metrics through EventSource,
            </summary>
        </member>
        <member name="T:Elastic.Apm.Metrics.MetricsProvider.GcMetricsProvider.GcEventListener">
            <summary>
            An event listener that collects the GC stats
            </summary>
        </member>
        <member name="T:Elastic.Apm.Model.DroppedSpanStats">
            <summary>
            DroppedSpanStats holds information about spans that were dropped (for example due to transaction_max_spans or
            exit_span_min_duration).
            </summary>
        </member>
        <member name="P:Elastic.Apm.Model.DroppedSpanStats.DestinationServiceResource">
            <summary>
            DestinationServiceResource identifies the destination service resource being operated on. e.g. 'http://elastic.co:80',
            'elasticsearch', 'rabbitmq/queue_name'.
            </summary>
        </member>
        <member name="P:Elastic.Apm.Model.DroppedSpanStats.ServiceTargetType">
            <summary>
            ServiceTargetType identifies the type of the target service being operated on e.g. 'oracle', 'rabbitmq'
            </summary>
        </member>
        <member name="P:Elastic.Apm.Model.DroppedSpanStats.ServiceTargetName">
            <summary>
            ServiceTargetName identifies the instance name of the target service being operated on
            </summary>
        </member>
        <member name="P:Elastic.Apm.Model.DroppedSpanStats.DurationCount">
            <summary>
            Duration holds duration aggregations about the dropped span.
            Count holds the number of times the dropped span happened.
            </summary>
        </member>
        <member name="P:Elastic.Apm.Model.DroppedSpanStats.DurationSumUs">
            <summary>
            Duration holds duration aggregations about the dropped span.
            Sum holds dimensions about the dropped span's duration.
            </summary>
        </member>
        <member name="P:Elastic.Apm.Model.DroppedSpanStats.Outcome">
            <summary>
            Outcome of the aggregated spans.
            </summary>
        </member>
        <member name="P:Elastic.Apm.Model.Error.Context">
            <summary>
            <seealso cref="M:Elastic.Apm.Model.Error.ShouldSerializeContext" />
            </summary>
        </member>
        <member name="P:Elastic.Apm.Model.Error.Timestamp">
            <summary>
            Recorded time of the event, UTC based and formatted as microseconds since Unix epoch
            </summary>
        </member>
        <member name="M:Elastic.Apm.Model.Error.ShouldSerializeContext">
            <summary>
            Method to conditionally serialize <see cref="P:Elastic.Apm.Model.Error.Context" /> because context should be serialized only when the transaction
            is sampled.
            See
            <a href="https://www.newtonsoft.com/json/help/html/ConditionalProperties.htm">the relevant Json.NET Documentation</a>
            </summary>
        </member>
        <member name="P:Elastic.Apm.Model.Error.TransactionData.IsSampled">
            <summary>
            IsSampled indicates whether or not the full information for a transaction is captured. If a transaction is unsampled no spans and less context information will be reported.
            </summary>
        </member>
        <member name="P:Elastic.Apm.Model.Error.TransactionData.Name">
            <summary>
            Name is the generic designation of a transaction in the scope of a single service, eg: 'GET /users/:id'.
            </summary>
        </member>
        <member name="P:Elastic.Apm.Model.Error.TransactionData.Type">
            <summary>
            Type expresses the correlated transaction's type as keyword that has specific relevance within the service's domain, eg: 'request', 'backgroundjob'.
            </summary>
        </member>
        <member name="T:Elastic.Apm.Model.ExecutionSegmentCommon">
            <summary>
            Encapsulates common functionality shared between <see cref="T:Elastic.Apm.Model.Span" /> and <see cref="T:Elastic.Apm.Model.Transaction" />
            </summary>
        </member>
        <member name="M:Elastic.Apm.Model.ExecutionSegmentCommon.RegisterContinuation(System.Threading.Tasks.Task,Elastic.Apm.Api.ISpan)">
            <summary>
            Registers a continuation on the task.
            Within the continuation it ends the transaction and captures errors
            </summary>
        </member>
        <member name="M:Elastic.Apm.Model.ExecutionSegmentCommon.CaptureErrorLog(Elastic.Apm.Api.ErrorLog,Elastic.Apm.Report.IPayloadSender,Elastic.Apm.Logging.IApmLogger,Elastic.Apm.Api.IExecutionSegment,Elastic.Apm.Config.IConfiguration,Elastic.Apm.Model.Transaction,System.String,Elastic.Apm.ServerInfo.IApmServerInfo,System.Exception,System.Collections.Generic.Dictionary{System.String,Elastic.Apm.Api.Label})">
            <summary>
            Captures an error based on a log
            </summary>
            <param name="errorLog"></param>
            <param name="payloadSender"></param>
            <param name="logger"></param>
            <param name="executionSegment"></param>
            <param name="configuration"></param>
            <param name="enclosingTransaction"></param>
            <param name="parentId"></param>
            <param name="serverInfo"></param>
            <param name="exception"></param>
            <param name="labels"></param>
        </member>
        <member name="T:Elastic.Apm.Model.Faas">
            <summary>
            Contains data related to FaaS (Function as a Service) events.
            </summary>
        </member>
        <member name="P:Elastic.Apm.Model.Faas.ColdStart">
            <summary>
            Indicates whether a function invocation was a cold start or not.
            </summary>
        </member>
        <member name="P:Elastic.Apm.Model.Faas.Execution">
            
             The request id of the function invocation.
            
        </member>
        <member name="P:Elastic.Apm.Model.Faas.Id">
            <summary>
            A unique identifier of the invoked serverless function.
            </summary>
        </member>
        <member name="P:Elastic.Apm.Model.Faas.Name">
            <summary>
            The function name.
            </summary>
        </member>
        <member name="P:Elastic.Apm.Model.Faas.Version">
            <summary>
            The function version.
            </summary>
        </member>
        <member name="P:Elastic.Apm.Model.Faas.Trigger">
            <summary>
            Trigger attributes.
            </summary>
        </member>
        <member name="T:Elastic.Apm.Model.Trigger">
            <summary>
            Trigger attributes.
            </summary>
        </member>
        <member name="P:Elastic.Apm.Model.Trigger.RequestId">
            <summary>
            The id of the origin trigger request.
            </summary>
        </member>
        <member name="P:Elastic.Apm.Model.Trigger.Type">
            <summary>
            The trigger type.
            </summary>
        </member>
        <member name="T:Elastic.Apm.Model.InstrumentationFlag">
            <summary>
            Represents the presence of a given instrumentation module. Each module can set its flag on a given span in
            <see cref="P:Elastic.Apm.Model.Span.InstrumentationFlag" />.
            With that every instrumentation module can know which other modules created the given span.
            In case of "competing modules" <see cref="P:Elastic.Apm.Model.Span.InstrumentationFlag" /> can be used to detect if a
            competing instrumentation module created the given span.
            </summary>
        </member>
        <member name="T:Elastic.Apm.Model.LabelsDictionary">
            <summary>
            The instance of this type holds the <see cref="T:System.Collections.Generic.Dictionary`2" /> that contains all the labels on a given
            event.
            The public interface of this mimics a Dictionary with <see cref="T:System.String" /> as both the key and the value.
            The reason for this is backwards compatibility - this type makes sure that we don't break user that rely on the old
            interface.
            </summary>
        </member>
        <member name="P:Elastic.Apm.Model.LabelsDictionary.MergedDictionary">
            <summary>
            Merges the string dictionary with the InnerDictionary
            </summary>
        </member>
        <member name="P:Elastic.Apm.Model.Metadata.Cloud">
            <inheritdoc cref="T:Elastic.Apm.Api.Cloud"/>
        </member>
        <member name="M:Elastic.Apm.Model.Metadata.ShouldSerializeLabels">
            <summary>
            Method to conditionally serialize <see cref="P:Elastic.Apm.Model.Metadata.Labels" /> - serialize only when there is at least one label.
            See
            <a href="https://www.newtonsoft.com/json/help/html/ConditionalProperties.htm">the relevant Json.NET Documentation</a>
            </summary>
        </member>
        <member name="T:Elastic.Apm.Model.NoopSpan">
            <summary>
            A span implementation which is used when the agent is not recording (either recording=false or enabled=false).
            It has no knowledge about the PayloadSender and will be never sent to APM Server.
            It only executes minimum amount of code and isn't guaranteed that values you set on it will be kept.
            </summary>
        </member>
        <member name="T:Elastic.Apm.Model.NoopTransaction">
            <summary>
            A transaction implementation which is used when the agent is not recording (either recording=false or enabled=false).
            It has no knowledge about the PayloadSender and will be never sent to APM Server.
            It only executes minimum amount of code and isn't guaranteed that values you set on it will be kept.
            </summary>
        </member>
        <member name="T:Elastic.Apm.Model.OTel">
            <summary>
            OTel contains unmapped OpenTelemetry attributes.
            </summary>
        </member>
        <member name="P:Elastic.Apm.Model.OTel.Attributes">
            <summary>
            Attributes hold the unmapped OpenTelemetry attributes.
            </summary>
        </member>
        <member name="P:Elastic.Apm.Model.OTel.SpanKind">
            <summary>
            SpanKind holds the incoming OpenTelemetry span kind.
            </summary>
        </member>
        <member name="M:Elastic.Apm.Model.Scanner.Text">
            <summary>
            Returns the portion of the SQL that relates to the most recently scanned token.
            Note: this method allocates memory and thus should only be used in tests.
            </summary>
            <returns> the portion of the SQL that relates to the most recently scanned token </returns>
        </member>
        <member name="M:Elastic.Apm.Model.Scanner.AppendCurrentTokenText(System.Text.StringBuilder)">
            <summary>
            Appends the portion of the SQL that relates to the most recently scanned token to the provided {@link StringBuilder}.
            </summary>
            <param name="sb"> the <see cref="T:System.Text.StringBuilder"/> which will be used to append the SQL </param>
        </member>
        <member name="F:Elastic.Apm.Model.SignatureParser.DisableCacheThreshold">
            <summary>
            If the cache reaches this size we assume that the application creates a lot of dynamic queries.
            In that case it's inefficient to try to cache these as they are not likely to be repeated.
            But we still pay the price of allocating a Map.Entry and a String for the signature.
            </summary>
        </member>
        <member name="F:Elastic.Apm.Model.SignatureParser.QueryLengthCacheLowerThreshold">
            <summary>
            The cache management overhead is probably not worth it for short queries
            </summary>
        </member>
        <member name="F:Elastic.Apm.Model.SignatureParser.QueryLengthCacheUpperThreshold">
            <summary>
            We don't want to keep alive references to huge query strings
            </summary>
        </member>
        <member name="F:Elastic.Apm.Model.SignatureParser._signatureCache">
            <summary>
            Not using weak keys because ORMs like Hibernate generate equal SQL strings for the same query but don't reuse the same string instance.
            When relying on weak keys, we would not leverage any caching benefits if the query string is collected.
            That means that we are leaking Strings but as the size of the map is limited that should not be an issue.
            </summary>
        </member>
        <member name="T:Elastic.Apm.Model.Span">
            <inheritdoc />
        </member>
        <member name="F:Elastic.Apm.Model.Span._outcome">
            <summary>
            In general if there is an error on the span, the outcome will be <code>Outcome.Failure</code>, otherwise it'll be
            <code>Outcome.Success</code>.
            There are some exceptions to this (see spec:
            https://github.com/elastic/apm/blob/main/specs/agents/tracing-spans.md#span-outcome) when it can be
            <code>Outcome.Unknown</code>.
            Use <see cref="F:Elastic.Apm.Model.Span._outcomeChangedThroughApi" /> to check if it was specifically set to <code>Outcome.Unknown</code>, or if
            it's just the default value.
            </summary>
        </member>
        <member name="P:Elastic.Apm.Model.Span.DroppedSpanStatCache">
            <summary>
            Stores Context.Destination.Service.Resource and Contest.Service.Target on the top level.
            With this field, we can set Target.Name, Target.Type, and Resource for dropped spans without instantiating Context.
            Only set for dropped spans.
            </summary>
        </member>
        <member name="P:Elastic.Apm.Model.Span.Context">
            <summary>
            Any other arbitrary data captured by the agent, optionally provided by the user.
            <seealso cref="M:Elastic.Apm.Model.Span.ShouldSerializeContext" />
            </summary>
        </member>
        <member name="P:Elastic.Apm.Model.Span.Duration">
            <inheritdoc />
            <summary>
            The duration of the span.
            If it's not set (HasValue returns false) then the value
            is automatically calculated when <see cref="M:Elastic.Apm.Model.Span.End" /> is called.
            </summary>
            <value>The duration.</value>
        </member>
        <member name="P:Elastic.Apm.Model.Span.Outcome">
            <summary>
            The outcome of the span: success, failure, or unknown.
            Outcome may be one of a limited set of permitted values describing the success or failure of the span.
            This field can be used for calculating error rates for outgoing requests.
            </summary>
        </member>
        <member name="F:Elastic.Apm.Model.Span.RawStackTrace">
            <summary>
            This holds the raw stack trace that was captured when the span either started or ended (depending on the parameter
            passed to the .ctor)
            This will be turned into an elastic stack trace and sent to APM Server in the <see cref="P:Elastic.Apm.Model.Span.StackTrace" /> property
            </summary>
        </member>
        <member name="P:Elastic.Apm.Model.Span.Links">
            <summary>
            Links holds links to other spans, potentially in other traces.
            </summary>
        </member>
        <member name="P:Elastic.Apm.Model.Span.SampleRate">
            <summary>
            Captures the sample rate of the agent when this span was created.
            </summary>
        </member>
        <member name="P:Elastic.Apm.Model.Span.Timestamp">
            <summary>
            Recorded time of the event, UTC based and formatted as microseconds since Unix epoch
            </summary>
        </member>
        <member name="M:Elastic.Apm.Model.Span.ShouldSerializeContext">
            <summary>
            Method to conditionally serialize <see cref="P:Elastic.Apm.Model.Span.Context" /> - serialize only if it was accessed at least once.
            See
            <a href="https://www.newtonsoft.com/json/help/html/ConditionalProperties.htm">the relevant Json.NET Documentation</a>
            </summary>
        </member>
        <member name="E:Elastic.Apm.Model.Span.Ended">
            <summary>
            When the transaction has ended and before being queued to send to APM server
            </summary>
        </member>
        <member name="T:Elastic.Apm.Model.Composite">
            <summary>
            Composite holds details on a group of spans represented by a single one.
            </summary>
        </member>
        <member name="P:Elastic.Apm.Model.Composite.CompressionStrategy">
            <summary>
            A string value indicating which compression strategy was used. The valid values are `exact_match` and `same_kind`
            </summary>
        </member>
        <member name="P:Elastic.Apm.Model.Composite.Count">
            <summary>
            Count is the number of compressed spans the composite span represents. The minimum count is 2, as a composite span represents at least two spans.
            </summary>
        </member>
        <member name="P:Elastic.Apm.Model.Composite.Sum">
            <summary>
            Sum is the durations of all compressed spans this composite span represents in milliseconds.
            </summary>
        </member>
        <member name="M:Elastic.Apm.Model.ChildDurationTimer.OnChildStart(System.Int64)">
            <summary>
            Starts the timer if it has not been started already.
            </summary>
            <param name="startTimestamp"></param>
        </member>
        <member name="M:Elastic.Apm.Model.ChildDurationTimer.OnChildEnd(System.Int64)">
            <summary>
            Stops the timer and increments the duration if no other direct children are still running
            </summary>
            <param name="endTimestamp"></param>
        </member>
        <member name="M:Elastic.Apm.Model.ChildDurationTimer.OnSpanEnd(System.Int64)">
            <summary>
            Stops the timer and increments the duration even if there are direct children which are still running
            </summary>
            <param name="endTimestamp"></param>
        </member>
        <member name="T:Elastic.Apm.Model.SpanTimerKey">
            <summary>
            Encapsulates type and subtype
            </summary>
        </member>
        <member name="F:Elastic.Apm.Model.Transaction._activity">
            <summary>
            The agent also starts an Activity when a transaction is started and stops it when the transaction ends.
            The TraceId of this activity is always the same as the TraceId of the transaction.
            With this, in case Activity.Current is null, the agent will set it and when the next Activity gets created it'll
            have this activity as its parent and the TraceId will flow to all Activity instances.
            </summary>
        </member>
        <member name="M:Elastic.Apm.Model.Transaction.#ctor(Elastic.Apm.Logging.IApmLogger,System.String,System.String,Elastic.Apm.Sampler,Elastic.Apm.Api.DistributedTracingData,Elastic.Apm.Report.IPayloadSender,Elastic.Apm.Config.IConfiguration,Elastic.Apm.ICurrentExecutionSegmentsContainer,Elastic.Apm.ServerInfo.IApmServerInfo,Elastic.Apm.Metrics.MetricsProvider.BreakdownMetricsProvider,System.Boolean,System.Nullable{System.Int64},System.String,System.String,System.Collections.Generic.IEnumerable{Elastic.Apm.Api.SpanLink})">
            <summary>
            Creates a new transaction
            </summary>
            <param name="logger">The logger which logs debug information during the transaction  creation process</param>
            <param name="name">The name of the transaction</param>
            <param name="type">The type of the transaction</param>
            <param name="sampler">The sampler implementation which makes the sampling decision</param>
            <param name="distributedTracingData">Distributed tracing data, in case this transaction is part of a distributed trace</param>
            <param name="sender">The IPayloadSender implementation which will record this transaction</param>
            <param name="configuration">The current configuration snapshot which contains the up-do-date config setting values</param>
            <param name="currentExecutionSegmentsContainer" />
            The ExecutionSegmentsContainer which makes sure this transaction flows
            <param name="apmServerInfo">Component to fetch info about APM Server (e.g. APM Server version)</param>
            <param name="breakdownMetricsProvider">
            The <see cref="T:Elastic.Apm.Metrics.MetricsProvider.BreakdownMetricsProvider" /> instance which will capture the
            breakdown metrics
            </param>
            <param name="ignoreActivity">
            If set the transaction will ignore Activity.Current and it's trace id,
            otherwise the agent will try to keep ids in-sync across async work-flows
            </param>
            <param name="timestamp">
            The timestamp of the transaction. If it's <code>null</code> then the current timestamp
            will be captured, which is typically the desired behaviour. Setting the timestamp to a specific value is typically
            useful for testing.
            </param>
            <param name="id">An optional parameter to pass the id of the transaction</param>
            <param name="traceId">An optional parameter to pass a trace id which will be applied to the transaction</param>
            <param name="links">Span links associated with this transaction</param>
        </member>
        <member name="F:Elastic.Apm.Model.Transaction._droppedSpanStatsMap">
            <summary>
            Internal dictionary to keep track of and look up dropped span stats.
            </summary>
        </member>
        <member name="F:Elastic.Apm.Model.Transaction._outcome">
            <summary>
            In general if there is an error on the span, the outcome will be <code> Outcome.Failure </code> otherwise it'll be
            <code> Outcome.Success </code>..
            There are some exceptions to this (see spec:
            https://github.com/elastic/apm/blob/main/specs/agents/tracing-spans.md#span-outcome) when it can be
            <code>Outcome.Unknown</code>/>.
            Use <see cref="F:Elastic.Apm.Model.Transaction._outcomeChangedThroughApi" /> to check if it was specifically set to <code>Outcome.Unknown</code>, or if
            it's just the default value.
            </summary>
        </member>
        <member name="P:Elastic.Apm.Model.Transaction.Configuration">
            <summary>
            Holds configuration snapshot (which is immutable) that was current when this transaction started.
            We would like transaction data to be consistent and not to be affected by possible changes in agent's configuration
            between the start and the end of the transaction. That is why the way all the data is collected for the transaction
            and its spans is controlled by this configuration snapshot.
            </summary>
        </member>
        <member name="P:Elastic.Apm.Model.Transaction.Context">
            <summary>
            Any arbitrary contextual information regarding the event, captured by the agent, optionally provided by the user.
            <seealso cref="M:Elastic.Apm.Model.Transaction.ShouldSerializeContext" />
            </summary>
        </member>
        <member name="P:Elastic.Apm.Model.Transaction.Duration">
            <inheritdoc />
            <summary>
            The duration of the transaction in ms with 3 decimal points.
            If it's not set (HasValue returns false) then the value
            is automatically calculated when <see cref="M:Elastic.Apm.Model.Transaction.End" /> is called.
            </summary>
            <value>The duration.</value>
        </member>
        <member name="P:Elastic.Apm.Model.Transaction.HasCustomName">
            <summary>
            If true, then the transaction name was modified by external code, and transaction name should not be changed
            or "fixed" automatically.
            </summary>
        </member>
        <member name="P:Elastic.Apm.Model.Transaction.Links">
            <summary>
            Links holds links to other spans, potentially in other traces.
            </summary>
        </member>
        <member name="P:Elastic.Apm.Model.Transaction.FaaS">
            <summary>
            Contains data related to FaaS (Function as a Service) events.
            </summary>
        </member>
        <member name="P:Elastic.Apm.Model.Transaction.Outcome">
            <summary>
            The outcome of the transaction: success, failure, or unknown.
            This is similar to 'result', but has a limited set of permitted values describing the success or failure of the
            transaction from the service's perspective.
            This field can be used for calculating error rates for incoming requests.
            </summary>
        </member>
        <member name="P:Elastic.Apm.Model.Transaction.Result">
            <inheritdoc />
            <summary>
            A string describing the result of the transaction.
            This is typically the HTTP status code, or e.g. "success" for a background task.
            </summary>
            <value>The result.</value>
        </member>
        <member name="P:Elastic.Apm.Model.Transaction.SampleRate">
            <summary>
            Captures the sample rate of the agent when this transaction was created.
            </summary>
        </member>
        <member name="P:Elastic.Apm.Model.Transaction.Timestamp">
            <summary>
            Recorded time of the event, UTC based and formatted as microseconds since Unix epoch
            </summary>
        </member>
        <member name="M:Elastic.Apm.Model.Transaction.SetOutcome(Elastic.Apm.Api.Outcome)">
            <summary>
            Changes the <see cref="P:Elastic.Apm.Model.Transaction.Outcome" /> by checking the <see cref="F:Elastic.Apm.Model.Transaction._outcomeChangedThroughApi" /> flag.
            This method is intended for all auto instrumentation usages where the <see cref="P:Elastic.Apm.Model.Transaction.Outcome" /> property needs to be set.
            Setting outcome via the <see cref="P:Elastic.Apm.Model.Transaction.Outcome" /> property is intended for users who use the public API.
            </summary>
            <param name="outcome">
            The outcome of the transaction will be set to this value if it wasn't change to the public API
            previously
            </param>
        </member>
        <member name="M:Elastic.Apm.Model.Transaction.SetService(System.String,System.String)">
            <inheritdoc />
        </member>
        <member name="M:Elastic.Apm.Model.Transaction.ShouldSerializeContext">
            <summary>
            Method to conditionally serialize <see cref="P:Elastic.Apm.Model.Transaction.Context" /> because context should be serialized only when the transaction
            is sampled.
            See
            <a href="https://www.newtonsoft.com/json/help/html/ConditionalProperties.htm">the relevant Json.NET Documentation</a>
            </summary>
        </member>
        <member name="E:Elastic.Apm.Model.Transaction.Ended">
            <summary>
            When the transaction has ended and before being queued to send to APM server
            </summary>
        </member>
        <member name="M:Elastic.Apm.Model.Transaction.GetNameFromRouteContext(System.Collections.Generic.IDictionary{System.String,System.Object})">
            <summary>
            Determines a name from the route values
            </summary>
            <remarks>
            Based on: https://github.com/Microsoft/ApplicationInsights-aspnetcore
            </remarks>
        </member>
        <member name="M:Elastic.Apm.Reflection.ExpressionBuilder.BuildPropertyGetter``2(System.String)">
            <summary>
            Builds a delegate to get a property of type <typeparamref name="TProperty"/> from an object
            of type <typeparamref name="TObject"/>
            </summary>
        </member>
        <member name="M:Elastic.Apm.Reflection.ExpressionBuilder.BuildPropertyGetter(System.Type,System.Reflection.PropertyInfo)">
            <summary>
            Builds a delegate to get a property from an object. <paramref name="type"/> is cast to <see cref="T:System.Object"/>,
            with the returned property cast to <see cref="T:System.Object"/>.
            </summary>
        </member>
        <member name="M:Elastic.Apm.Reflection.ExpressionBuilder.BuildFieldGetter(System.Type,System.Reflection.FieldInfo)">
            <summary>
            Builds a delegate to get a property from an object. <paramref name="type"/> is cast to <see cref="T:System.Object"/>,
            with the returned property cast to <see cref="T:System.Object"/>.
            </summary>
        </member>
        <member name="M:Elastic.Apm.Reflection.ExpressionBuilder.BuildPropertyGetter(System.Type,System.String)">
            <summary>
            Builds a delegate to get a property from an object. <paramref name="type"/> is cast to <see cref="T:System.Object"/>,
            with the returned property cast to <see cref="T:System.Object"/>.
            </summary>
        </member>
        <member name="M:Elastic.Apm.Reflection.PropertyFetcher.PropertyFetch.FetcherForProperty(System.Reflection.PropertyInfo)">
            <summary>
            Create a property fetcher from a .NET Reflection PropertyInfo class that
            represents a property of a particular type.
            </summary>
        </member>
        <member name="M:Elastic.Apm.Reflection.PropertyFetcher.PropertyFetch.Fetch(System.Object)">
            <summary>
            Given an object, fetch the property that this propertyFetch represents.
            </summary>
        </member>
        <member name="T:Elastic.Apm.Reflection.PropertyFetcherCollection">
            <summary>
            A collection of property fetchers, used to retrieve property values
            from objects at runtime.
            </summary>
        </member>
        <member name="T:Elastic.Apm.Report.PayloadSenderV2">
            <summary>
            Responsible for sending the data to APM server. Implements Intake V2.
            Each instance creates its own thread to do the work. Therefore, instances should be reused if possible.
            </summary>
        </member>
        <member name="M:Elastic.Apm.Report.PayloadSenderV2.WorkLoopIteration">
            <summary>
            Runs on the background thread dedicated to sending data to APM Server. It's ok to block this thread.
            </summary>
        </member>
        <member name="T:Elastic.Apm.Report.Serialization.PayloadItemSerializer">
            <summary>
            Serializes payloads to send to APM server
            </summary>
        </member>
        <member name="M:Elastic.Apm.Report.Serialization.PayloadItemSerializer.Deserialize``1(System.String)">
            <summary>
            Deserializes an instance of <typeparamref name="T"/> from JSON
            </summary>
            <param name="json">the JSON</param>
            <typeparam name="T">the type to deserialize</typeparam>
            <returns>a new instance of <typeparamref name="T"/></returns>
        </member>
        <member name="M:Elastic.Apm.Report.Serialization.PayloadItemSerializer.Serialize(System.Object)">
            <summary>
            Serializes the item to JSON
            </summary>
            <param name="item"></param>
            <returns></returns>
        </member>
        <member name="T:Elastic.Apm.Report.Serialization.TruncateJsonConverter">
            <summary>
            Truncates a string to a given length
            </summary>
        </member>
        <member name="T:Elastic.Apm.Sampler">
            <summary>
            A sampler is responsible for determining whether a transaction should be sampled.
            In contrast to other tracing systems, in Elastic APM,  non-sampled transactions do get reported to the APM server.
            However, to keep the size at a minimum, the reported transaction only contains the transaction name, the duration and
            the id.
            Also, spans of non-sampled transactions are not reported.
            This implementation samples based on a sampling probability (AKA sampling rate) between 0.0 and 1.0.
            A sampling rate of 0.5 means that 50% of all transactions should be sampled.
            </summary>
        </member>
        <member name="M:Elastic.Apm.Sampler.#ctor(System.Double)">
            <summary>
            Constructs a new Sampler
            </summary>
            <param name="rate">Value of the rate - must be between 0 and 1 (including both)</param>
            <exception cref="T:System.ArgumentOutOfRangeException">Thrown when rate is not between 0 and 1 (including both)</exception>
            <returns>The same value as the given rate</returns>
        </member>
        <member name="M:Elastic.Apm.Sampler.RoundToPrecision(System.Double)">
            <summary>
            Rounds the sampling rate half away from zero to 4 decimal places so that the maximum precision of the sampling rate is
            `0.0001` (0.01%).
            Values greater than 0 but less than 0.0001 are rounded to 0.0001
            </summary>
            <param name="rate">The rate</param>
            <returns>The rounded rate</returns>
        </member>
        <member name="M:Elastic.Apm.Sampler.DecideIfToSample(System.Byte[])">
            <summary>
            Decides if to sample or not based on the given randomBytes.
            </summary>
            <param name="randomBytes">Should contain at least 8 random bytes.</param>
            <exception cref="T:System.ArgumentException">
            When length of <paramref name="randomBytes">randomBytes</paramref> is less
            than 8.
            </exception>
            <returns>True if and only if the decision is to sample</returns>
        </member>
        <member name="T:Elastic.Apm.ServerInfo.ApmServerInfo">
            <summary>
            A "real" <see cref="T:Elastic.Apm.ServerInfo.IApmServerInfo" /> implementation.
            </summary>
        </member>
        <member name="T:Elastic.Apm.ServerInfo.ElasticVersion">
            <summary>
            An Elastic product version
            </summary>
        </member>
        <member name="T:Elastic.Apm.ServerInfo.IApmServerInfo">
            <summary>
            Encapsulates information about the APM Server that receives data from the agent.
            </summary>
        </member>
        <member name="P:Elastic.Apm.ServerInfo.IApmServerInfo.Version">
            <summary>
            The version of the APM server.
            This can be <code>null</code> if the agent has not yet queried the APM server for its version or the query failed.
            The agent should not depend on the APM server version and if the version is not (yet) available the agent should
            default to a reasonable behaviour.
            </summary>
        </member>
        <member name="T:System.Diagnostics.CodeAnalysis.NotNullAttribute">
            <summary>Specifies that an output will not be null even if the corresponding type allows it.</summary>
        </member>
        <member name="T:System.Diagnostics.CodeAnalysis.NotNullWhenAttribute">
            <summary>
            Specifies that when a method returns <see cref="P:System.Diagnostics.CodeAnalysis.NotNullWhenAttribute.ReturnValue" />, the parameter will not be null even if the
            corresponding type allows it.
            </summary>
        </member>
        <member name="M:System.Diagnostics.CodeAnalysis.NotNullWhenAttribute.#ctor(System.Boolean)">
            <summary>Initializes the attribute with the specified return value condition.</summary>
            <param name="returnValue">
            The return value condition. If the method returns this value, the associated parameter will not be null.
            </param>
        </member>
        <member name="P:System.Diagnostics.CodeAnalysis.NotNullWhenAttribute.ReturnValue">
            <summary>Gets the return value condition.</summary>
        </member>
        <member name="T:System.Diagnostics.CodeAnalysis.MaybeNullAttribute">
            <summary>Specifies that an output may be null even if the corresponding type disallows it.</summary>
        </member>
        <member name="T:System.Diagnostics.CodeAnalysis.AllowNullAttribute">
            <summary>Specifies that null is allowed as an input even if the corresponding type disallows it.</summary>
        </member>
        <member name="T:System.Diagnostics.CodeAnalysis.DoesNotReturnIfAttribute">
            <summary>
            Specifies that the method will not return if the associated Boolean parameter is passed the specified value.
            </summary>
        </member>
        <member name="M:System.Diagnostics.CodeAnalysis.DoesNotReturnIfAttribute.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:System.Diagnostics.CodeAnalysis.DoesNotReturnIfAttribute" /> class.
            </summary>
            <param name="parameterValue">
            The condition parameter value. Code after the method will be considered unreachable by diagnostics if the argument to
            the associated parameter matches this value.
            </param>
        </member>
        <member name="P:System.Diagnostics.CodeAnalysis.DoesNotReturnIfAttribute.ParameterValue">
            <summary>Gets the condition parameter value.</summary>
        </member>
    </members>
</doc>
